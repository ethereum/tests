validInvalid:
  _info:
    comment: |
      Test valid and invalid EOF code
        Implements
          EOFV3670_0001 (Valid) Code containing the STOP opcode - Data Section 0
          EOFV3670_0002 (Valid) Code containing the ADD opcode - Data Section 1
          EOFV3670_0003 (Valid) Code containing the MUL opcode - Data Section 2
          EOFV3670_0004 (Valid) Code containing the SUB opcode - Data Section 3
          EOFV3670_0005 (Valid) Code containing the DIV opcode - Data Section 4
          EOFV3670_0006 (Valid) Code containing the SDIV opcode - Data Section 5
          EOFV3670_0007 (Valid) Code containing the MOD opcode - Data Section 6
          EOFV3670_0008 (Valid) Code containing the SMOD opcode - Data Section 7
          EOFV3670_0009 (Valid) Code containing the ADDMOD opcode - Data Section 8
          EOFV3670_0010 (Valid) Code containing the MULMOD opcode - Data Section 9
          EOFV3670_0011 (Valid) Code containing the EXP opcode - Data Section 10
          EOFV3670_0012 (Valid) Code containing the SIGNEXTEND opcode - Data Section 11
          EOFV3670_0013 (Valid) Code containing the LT opcode - Data Section 12
          EOFV3670_0014 (Valid) Code containing the GT opcode - Data Section 13
          EOFV3670_0015 (Valid) Code containing the SLT opcode - Data Section 14
          EOFV3670_0016 (Valid) Code containing the SGT opcode - Data Section 15
          EOFV3670_0017 (Valid) Code containing the EQ opcode - Data Section 16
          EOFV3670_0018 (Valid) Code containing the ISZERO opcode - Data Section 17
          EOFV3670_0019 (Valid) Code containing the AND opcode - Data Section 18
          EOFV3670_0020 (Valid) Code containing the OR opcode - Data Section 19
          EOFV3670_0021 (Valid) Code containing the XOR opcode - Data Section 20
          EOFV3670_0022 (Valid) Code containing the NOT opcode - Data Section 21
          EOFV3670_0023 (Valid) Code containing the BYTE opcode - Data Section 22
          EOFV3670_0024 (Valid) Code containing the SHL opcode - Data Section 23
          EOFV3670_0025 (Valid) Code containing the SHR opcode - Data Section 24
          EOFV3670_0026 (Valid) Code containing the SAR opcode - Data Section 25
          EOFV3670_0027 (Valid) Code containing the SHA3 opcode - Data Section 26
          EOFV3670_0028 (Valid) Code containing the ADDRESS opcode - Data Section 27
          EOFV3670_0029 (Valid) Code containing the BALANCE opcode - Data Section 28
          EOFV3670_0030 (Valid) Code containing the ORIGIN opcode - Data Section 29
          EOFV3670_0031 (Valid) Code containing the CALLER opcode - Data Section 30
          EOFV3670_0032 (Valid) Code containing the CALLVALUE opcode - Data Section 31
          EOFV3670_0033 (Valid) Code containing the CALLDATALOAD opcode - Data Section 32
          EOFV3670_0034 (Valid) Code containing the CALLDATASIZE opcode - Data Section 33
          EOFV3670_0035 (Valid) Code containing the CALLDATACOPY opcode - Data Section 34
          EOFV3670_0036 (Valid) Code containing the GASPRICE opcode - Data Section 35
          EOFV3670_0037 (Valid) Code containing the RETURNDATASIZE opcode - Data Section 36
          EOFV3670_0038 (Valid) Code containing the RETURNDATACOPY opcode - Data Section 37
          EOFV3670_0039 (Valid) Code containing the BLOCKHASH opcode - Data Section 38
          EOFV3670_0040 (Valid) Code containing the COINBASE opcode - Data Section 39
          EOFV3670_0041 (Valid) Code containing the TIMESTAMP opcode - Data Section 40
          EOFV3670_0042 (Valid) Code containing the NUMBER opcode - Data Section 41
          EOFV3670_0043 (Valid) Code containing the DIFFICULTY opcode - Data Section 42
          EOFV3670_0044 (Valid) Code containing the GASLIMIT opcode - Data Section 43
          EOFV3670_0045 (Valid) Code containing the CHAINID opcode - Data Section 44
          EOFV3670_0046 (Valid) Code containing the SELFBALANCE opcode - Data Section 45
          EOFV3670_0047 (Valid) Code containing the BASEFEE opcode - Data Section 46
          EOFV3670_0048 (Valid) Code containing the BLOBHASH opcode - Data Section 47
          EOFV3670_0049 (Valid) Code containing the BLOBBASEFEE opcode - Data Section 48
          EOFV3670_0050 (Valid) Code containing the POP opcode - Data Section 49
          EOFV3670_0051 (Valid) Code containing the MLOAD opcode - Data Section 50
          EOFV3670_0052 (Valid) Code containing the MSTORE8 opcode - Data Section 51
          EOFV3670_0053 (Valid) Code containing the SLOAD opcode - Data Section 52
          EOFV3670_0054 (Valid) Code containing the SSTORE opcode - Data Section 53
          EOFV3670_0055 (Valid) Code containing the MSIZE opcode - Data Section 54
          EOFV3670_0056 (Valid) Code containing the NOP opcode - Data Section 55
          EOFV3670_0057 (Valid) Code containing the MCOPY opcode - Data Section 56
          EOFV3670_0058 (Valid) Code containing the PUSH0 opcode - Data Section 57
          EOFV3670_0059 (Valid) Code containing the PUSH1 opcode - Data Section 58
          EOFV3670_0060 (Valid) Code containing the PUSH2 opcode - Data Section 59
          EOFV3670_0061 (Valid) Code containing the PUSH3 opcode - Data Section 60
          EOFV3670_0062 (Valid) Code containing the PUSH4 opcode - Data Section 61
          EOFV3670_0063 (Valid) Code containing the PUSH5 opcode - Data Section 62
          EOFV3670_0064 (Valid) Code containing the PUSH6 opcode - Data Section 63
          EOFV3670_0065 (Valid) Code containing the PUSH7 opcode - Data Section 64
          EOFV3670_0066 (Valid) Code containing the PUSH8 opcode - Data Section 65
          EOFV3670_0067 (Valid) Code containing the PUSH9 opcode - Data Section 66
          EOFV3670_0068 (Valid) Code containing the PUSH10 opcode - Data Section 67
          EOFV3670_0069 (Valid) Code containing the PUSH11 opcode - Data Section 68
          EOFV3670_0070 (Valid) Code containing the PUSH12 opcode - Data Section 69
          EOFV3670_0071 (Valid) Code containing the PUSH13 opcode - Data Section 70
          EOFV3670_0072 (Valid) Code containing the PUSH14 opcode - Data Section 71
          EOFV3670_0073 (Valid) Code containing the PUSH15 opcode - Data Section 72
          EOFV3670_0074 (Valid) Code containing the PUSH16 opcode - Data Section 73
          EOFV3670_0075 (Valid) Code containing the PUSH17 opcode - Data Section 74
          EOFV3670_0076 (Valid) Code containing the PUSH18 opcode - Data Section 75
          EOFV3670_0077 (Valid) Code containing the PUSH19 opcode - Data Section 76
          EOFV3670_0078 (Valid) Code containing the PUSH20 opcode - Data Section 77
          EOFV3670_0079 (Valid) Code containing the PUSH21 opcode - Data Section 78
          EOFV3670_0080 (Valid) Code containing the PUSH22 opcode - Data Section 79
          EOFV3670_0081 (Valid) Code containing the PUSH23 opcode - Data Section 80
          EOFV3670_0082 (Valid) Code containing the PUSH24 opcode - Data Section 81
          EOFV3670_0083 (Valid) Code containing the PUSH25 opcode - Data Section 82
          EOFV3670_0084 (Valid) Code containing the PUSH26 opcode - Data Section 83
          EOFV3670_0085 (Valid) Code containing the PUSH27 opcode - Data Section 84
          EOFV3670_0086 (Valid) Code containing the PUSH28 opcode - Data Section 85
          EOFV3670_0087 (Valid) Code containing the PUSH29 opcode - Data Section 86
          EOFV3670_0088 (Valid) Code containing the PUSH30 opcode - Data Section 87
          EOFV3670_0089 (Valid) Code containing the PUSH31 opcode - Data Section 88
          EOFV3670_0090 (Valid) Code containing the PUSH32 opcode - Data Section 89
          EOFV3670_0091 (Valid) Code containing the DUP1 opcode - Data Section 90
          EOFV3670_0092 (Valid) Code containing the DUP2 opcode - Data Section 91
          EOFV3670_0093 (Valid) Code containing the DUP3 opcode - Data Section 92
          EOFV3670_0094 (Valid) Code containing the DUP4 opcode - Data Section 93
          EOFV3670_0095 (Valid) Code containing the DUP5 opcode - Data Section 94
          EOFV3670_0096 (Valid) Code containing the DUP6 opcode - Data Section 95
          EOFV3670_0097 (Valid) Code containing the DUP7 opcode - Data Section 96
          EOFV3670_0098 (Valid) Code containing the DUP8 opcode - Data Section 97
          EOFV3670_0099 (Valid) Code containing the DUP9 opcode - Data Section 98
          EOFV3670_0100 (Valid) Code containing the DUP10 opcode - Data Section 99
          EOFV3670_0101 (Valid) Code containing the DUP11 opcode - Data Section 100
          EOFV3670_0102 (Valid) Code containing the DUP12 opcode - Data Section 101
          EOFV3670_0103 (Valid) Code containing the DUP13 opcode - Data Section 102
          EOFV3670_0104 (Valid) Code containing the DUP14 opcode - Data Section 103
          EOFV3670_0105 (Valid) Code containing the DUP15 opcode - Data Section 104
          EOFV3670_0106 (Valid) Code containing the DUP16 opcode - Data Section 105
          EOFV3670_0107 (Valid) Code containing the SWAP1 opcode - Data Section 106
          EOFV3670_0108 (Valid) Code containing the SWAP2 opcode - Data Section 107
          EOFV3670_0109 (Valid) Code containing the SWAP3 opcode - Data Section 108
          EOFV3670_0110 (Valid) Code containing the SWAP4 opcode - Data Section 109
          EOFV3670_0111 (Valid) Code containing the SWAP5 opcode - Data Section 110
          EOFV3670_0112 (Valid) Code containing the SWAP6 opcode - Data Section 111
          EOFV3670_0113 (Valid) Code containing the SWAP7 opcode - Data Section 112
          EOFV3670_0114 (Valid) Code containing the SWAP8 opcode - Data Section 113
          EOFV3670_0115 (Valid) Code containing the SWAP9 opcode - Data Section 114
          EOFV3670_0116 (Valid) Code containing the SWAP10 opcode - Data Section 115
          EOFV3670_0117 (Valid) Code containing the SWAP11 opcode - Data Section 116
          EOFV3670_0118 (Valid) Code containing the SWAP12 opcode - Data Section 117
          EOFV3670_0119 (Valid) Code containing the SWAP13 opcode - Data Section 118
          EOFV3670_0120 (Valid) Code containing the SWAP14 opcode - Data Section 119
          EOFV3670_0121 (Valid) Code containing the SWAP15 opcode - Data Section 120
          EOFV3670_0122 (Valid) Code containing the SWAP16 opcode - Data Section 121
          EOFV3670_0123 (Valid) Code containing the LOG0 opcode - Data Section 122
          EOFV3670_0124 (Valid) Code containing the LOG1 opcode - Data Section 123
          EOFV3670_0125 (Valid) Code containing the LOG2 opcode - Data Section 124
          EOFV3670_0126 (Valid) Code containing the LOG3 opcode - Data Section 125
          EOFV3670_0127 (Valid) Code containing the LOG4 opcode - Data Section 126
          EOFV3670_0128 (Valid) Code containing the RETURN opcode - Data Section 127
          EOFV3670_0129 (Valid) Code containing the EXTCALL opcode - Data Section 128
          EOFV3670_0130 (Valid) Code containing the EXTDELEGATECALL opcode - Data Section 129
          EOFV3670_0131 (Valid) Code containing the EXTSTATICCALL opcode - Data Section 130
          EOFV3670_0132 (Valid) Code containing the REVERT opcode - Data Section 131
          EOFV3670_0133 (Valid) Code containing the INVALID opcode - Data Section 132
          EOFI3670_0134 (Invalid) Code containing undefined instruction 0x0c - Data Section 133
          EOFI3670_0135 (Invalid) Code containing undefined instruction 0x0d - Data Section 134
          EOFI3670_0136 (Invalid) Code containing undefined instruction 0x0e - Data Section 135
          EOFI3670_0137 (Invalid) Code containing undefined instruction 0x0f - Data Section 136
          EOFI3670_0138 (Invalid) Code containing undefined instruction 0x1e - Data Section 137
          EOFI3670_0139 (Invalid) Code containing undefined instruction 0x1f - Data Section 138
          EOFI3670_0140 (Invalid) Code containing undefined instruction 0x21 - Data Section 139
          EOFI3670_0141 (Invalid) Code containing undefined instruction 0x22 - Data Section 140
          EOFI3670_0142 (Invalid) Code containing undefined instruction 0x23 - Data Section 141
          EOFI3670_0143 (Invalid) Code containing undefined instruction 0x24 - Data Section 142
          EOFI3670_0144 (Invalid) Code containing undefined instruction 0x25 - Data Section 143
          EOFI3670_0145 (Invalid) Code containing undefined instruction 0x26 - Data Section 144
          EOFI3670_0146 (Invalid) Code containing undefined instruction 0x27 - Data Section 145
          EOFI3670_0147 (Invalid) Code containing undefined instruction 0x28 - Data Section 146
          EOFI3670_0148 (Invalid) Code containing undefined instruction 0x29 - Data Section 147
          EOFI3670_0149 (Invalid) Code containing undefined instruction 0x2a - Data Section 148
          EOFI3670_0150 (Invalid) Code containing undefined instruction 0x2b - Data Section 149
          EOFI3670_0151 (Invalid) Code containing undefined instruction 0x2c - Data Section 150
          EOFI3670_0152 (Invalid) Code containing undefined instruction 0x2d - Data Section 151
          EOFI3670_0153 (Invalid) Code containing undefined instruction 0x2e - Data Section 152
          EOFI3670_0154 (Invalid) Code containing undefined instruction 0x2f - Data Section 153
          EOFI3670_0155 (Invalid) Code containing undefined instruction 0x4b - Data Section 154
          EOFI3670_0156 (Invalid) Code containing undefined (deprecated) instruction 0x38 (CODESIZE) - Data Section 155
          EOFI3670_0157 (Invalid) Code containing undefined (deprecated) instruction 0x39 (CODECOPY) - Data Section 156
          EOFI3670_0158 (Invalid) Code containing undefined (deprecated) instruction 0x3b (EXTCODESIZE) - Data Section 157
          EOFI3670_0159 (Invalid) Code containing undefined (deprecated) instruction 0x3c (EXTCODECOPY) - Data Section 158
          EOFI3670_0160 (Invalid) Code containing undefined (deprecated) instruction 0x3f (EXTCODEHASH) - Data Section 159
          EOFI3670_0161 (Invalid) Code containing undefined instruction 0x4c - Data Section 160
          EOFI3670_0162 (Invalid) Code containing undefined instruction 0x4d - Data Section 161
          EOFI3670_0163 (Invalid) Code containing undefined instruction 0x4e - Data Section 162
          EOFI3670_0164 (Invalid) Code containing undefined instruction 0x4f - Data Section 163
          EOFI3670_0165 (Invalid) Code containing undefined (deprecated) instruction 0x56 (JUMP) - Data Section 164
          EOFI3670_0166 (Invalid) Code containing undefined (deprecated) instruction 0x57 (JUMPI) - Data Section 165
          EOFI3670_0167 (Invalid) Code containing undefined (deprecated) instruction 0x58 (PC) - Data Section 166
          EOFI3670_0168 (Invalid) Code containing undefined (deprecated) instruction 0x5a (GAS) - Data Section 167
          EOFI3670_0169 (Invalid) Code containing undefined instruction 0xa5 - Data Section 168
          EOFI3670_0170 (Invalid) Code containing undefined instruction 0xa6 - Data Section 169
          EOFI3670_0171 (Invalid) Code containing undefined instruction 0xa7 - Data Section 170
          EOFI3670_0172 (Invalid) Code containing undefined instruction 0xa8 - Data Section 171
          EOFI3670_0173 (Invalid) Code containing undefined instruction 0xa9 - Data Section 172
          EOFI3670_0174 (Invalid) Code containing undefined instruction 0xaa - Data Section 173
          EOFI3670_0175 (Invalid) Code containing undefined instruction 0xab - Data Section 174
          EOFI3670_0176 (Invalid) Code containing undefined instruction 0xac - Data Section 175
          EOFI3670_0177 (Invalid) Code containing undefined instruction 0xad - Data Section 176
          EOFI3670_0178 (Invalid) Code containing undefined instruction 0xae - Data Section 177
          EOFI3670_0179 (Invalid) Code containing undefined instruction 0xaf - Data Section 178
          EOFI3670_0180 (Invalid) Code containing undefined instruction 0xb2 - Data Section 179
          EOFI3670_0181 (Invalid) Code containing undefined instruction 0xb3 - Data Section 180
          EOFI3670_0182 (Invalid) Code containing undefined instruction 0xb4 - Data Section 181
          EOFI3670_0183 (Invalid) Code containing undefined instruction 0xb5 - Data Section 182
          EOFI3670_0184 (Invalid) Code containing undefined instruction 0xb6 - Data Section 183
          EOFI3670_0185 (Invalid) Code containing undefined instruction 0xb7 - Data Section 184
          EOFI3670_0186 (Invalid) Code containing undefined instruction 0xb8 - Data Section 185
          EOFI3670_0187 (Invalid) Code containing undefined instruction 0xb9 - Data Section 186
          EOFI3670_0188 (Invalid) Code containing undefined instruction 0xba - Data Section 187
          EOFI3670_0189 (Invalid) Code containing undefined instruction 0xbb - Data Section 188
          EOFI3670_0190 (Invalid) Code containing undefined instruction 0xbc - Data Section 189
          EOFI3670_0191 (Invalid) Code containing undefined instruction 0xbd - Data Section 190
          EOFI3670_0192 (Invalid) Code containing undefined instruction 0xbe - Data Section 191
          EOFI3670_0193 (Invalid) Code containing undefined instruction 0xbf - Data Section 192
          EOFI3670_0194 (Invalid) Code containing undefined instruction 0xc0 - Data Section 193
          EOFI3670_0195 (Invalid) Code containing undefined instruction 0xc1 - Data Section 194
          EOFI3670_0196 (Invalid) Code containing undefined instruction 0xc2 - Data Section 195
          EOFI3670_0197 (Invalid) Code containing undefined instruction 0xc3 - Data Section 196
          EOFI3670_0198 (Invalid) Code containing undefined instruction 0xc4 - Data Section 197
          EOFI3670_0199 (Invalid) Code containing undefined instruction 0xc5 - Data Section 198
          EOFI3670_0200 (Invalid) Code containing undefined instruction 0xc6 - Data Section 199
          EOFI3670_0201 (Invalid) Code containing undefined instruction 0xc7 - Data Section 200
          EOFI3670_0202 (Invalid) Code containing undefined instruction 0xc8 - Data Section 201
          EOFI3670_0203 (Invalid) Code containing undefined instruction 0xc9 - Data Section 202
          EOFI3670_0204 (Invalid) Code containing undefined instruction 0xca - Data Section 203
          EOFI3670_0205 (Invalid) Code containing undefined instruction 0xcb - Data Section 204
          EOFI3670_0206 (Invalid) Code containing undefined instruction 0xcc - Data Section 205
          EOFI3670_0207 (Invalid) Code containing undefined instruction 0xcd - Data Section 206
          EOFI3670_0208 (Invalid) Code containing undefined instruction 0xce - Data Section 207
          EOFI3670_0209 (Invalid) Code containing undefined instruction 0xcf - Data Section 208
          EOFI3670_0210 (Invalid) Code containing undefined instruction 0xd4 - Data Section 209
          EOFI3670_0211 (Invalid) Code containing undefined instruction 0xd5 - Data Section 210
          EOFI3670_0212 (Invalid) Code containing undefined instruction 0xd6 - Data Section 211
          EOFI3670_0213 (Invalid) Code containing undefined instruction 0xd7 - Data Section 212
          EOFI3670_0214 (Invalid) Code containing undefined instruction 0xd8 - Data Section 213
          EOFI3670_0215 (Invalid) Code containing undefined instruction 0xd9 - Data Section 214
          EOFI3670_0216 (Invalid) Code containing undefined instruction 0xda - Data Section 215
          EOFI3670_0217 (Invalid) Code containing undefined instruction 0xdb - Data Section 216
          EOFI3670_0218 (Invalid) Code containing undefined instruction 0xdc - Data Section 217
          EOFI3670_0219 (Invalid) Code containing undefined instruction 0xdd - Data Section 218
          EOFI3670_0220 (Invalid) Code containing undefined instruction 0xde - Data Section 219
          EOFI3670_0221 (Invalid) Code containing undefined instruction 0xdf - Data Section 220
          EOFI3670_0222 (Invalid) Code containing undefined instruction 0xe9 - Data Section 221
          EOFI3670_0223 (Invalid) Code containing undefined instruction 0xea - Data Section 222
          EOFI3670_0224 (Invalid) Code containing undefined instruction 0xeb - Data Section 223
          EOFI3670_0225 (Invalid) Code containing undefined instruction 0xef - Data Section 224
          EOFI3670_0226 (Invalid) Code containing undefined (deprecated) instruction 0xf0 (CREATE) - Data Section 225
          EOFI3670_0227 (Invalid) Code containing undefined (deprecated) instruction 0xf2 (CALLCODE) - Data Section 226
          EOFI3670_0228 (Invalid) Code containing undefined (deprecated) instruction 0xf5 (CREATE2) - Data Section 227
          EOFI3670_0229 (Invalid) Code containing undefined (deprecated) instruction 0xf1 (CALL) - Data Section 228
          EOFI3670_0230 (Invalid) Code containing undefined (deprecated) instruction 0xf4 (DELEGATECALL) - Data Section 229
          EOFI3670_0231 (Invalid) Code containing undefined instruction 0xf6 - Data Section 230
          EOFI3670_0232 (Invalid) Code containing undefined (deprecated) instruction 0xfa (STATICCALL) - Data Section 231
          EOFI3670_0233 (Invalid) Code containing undefined instruction 0xfc - Data Section 232
          EOFI3670_0234 (Invalid) Code containing undefined (deprecated) instruction 0xff (SELFDESTRUCT) - Data Section 233
          EOFI3670_0235 (Invalid) Truncated PUSH1 (no immediates) - Data Section 234
          EOFI3670_0236 (Invalid) Truncated PUSH2 (no immediates) - Data Section 235
          EOFI3670_0237 (Invalid) Truncated PUSH2 (truncated immediates) - Data Section 236
          EOFI3670_0238 (Invalid) Truncated PUSH3 (no immediates) - Data Section 237
          EOFI3670_0239 (Invalid) Truncated PUSH3 (truncated immediates) - Data Section 238
          EOFI3670_0240 (Invalid) Truncated PUSH4 (no immediates) - Data Section 239
          EOFI3670_0241 (Invalid) Truncated PUSH4 (truncated immediates) - Data Section 240
          EOFI3670_0242 (Invalid) Truncated PUSH5 (no immediates) - Data Section 241
          EOFI3670_0243 (Invalid) Truncated PUSH5 (truncated immediates) - Data Section 242
          EOFI3670_0244 (Invalid) Truncated PUSH6 (no immediates) - Data Section 243
          EOFI3670_0245 (Invalid) Truncated PUSH6 (truncated immediates) - Data Section 244
          EOFI3670_0246 (Invalid) Truncated PUSH7 (no immediates) - Data Section 245
          EOFI3670_0247 (Invalid) Truncated PUSH7 (truncated immediates) - Data Section 246
          EOFI3670_0248 (Invalid) Truncated PUSH8 (no immediates) - Data Section 247
          EOFI3670_0249 (Invalid) Truncated PUSH8 (truncated immediates) - Data Section 248
          EOFI3670_0250 (Invalid) Truncated PUSH9 (no immediates) - Data Section 249
          EOFI3670_0251 (Invalid) Truncated PUSH9 (truncated immediates) - Data Section 250
          EOFI3670_0252 (Invalid) Truncated PUSH10 (no immediates) - Data Section 251
          EOFI3670_0253 (Invalid) Truncated PUSH10 (truncated immediates) - Data Section 252
          EOFI3670_0254 (Invalid) Truncated PUSH11 (no immediates) - Data Section 253
          EOFI3670_0255 (Invalid) Truncated PUSH11 (truncated immediates) - Data Section 254
          EOFI3670_0256 (Invalid) Truncated PUSH12 (no immediates) - Data Section 255
          EOFI3670_0257 (Invalid) Truncated PUSH12 (truncated immediates) - Data Section 256
          EOFI3670_0258 (Invalid) Truncated PUSH13 (no immediates) - Data Section 257
          EOFI3670_0259 (Invalid) Truncated PUSH13 (truncated immediates) - Data Section 258
          EOFI3670_0260 (Invalid) Truncated PUSH14 (no immediates) - Data Section 259
          EOFI3670_0261 (Invalid) Truncated PUSH14 (truncated immediates) - Data Section 260
          EOFI3670_0262 (Invalid) Truncated PUSH15 (no immediates) - Data Section 261
          EOFI3670_0263 (Invalid) Truncated PUSH15 (truncated immediates) - Data Section 262
          EOFI3670_0264 (Invalid) Truncated PUSH16 (no immediates) - Data Section 263
          EOFI3670_0265 (Invalid) Truncated PUSH16 (truncated immediates) - Data Section 264
          EOFI3670_0266 (Invalid) Truncated PUSH17 (no immediates) - Data Section 265
          EOFI3670_0267 (Invalid) Truncated PUSH17 (truncated immediates) - Data Section 266
          EOFI3670_0268 (Invalid) Truncated PUSH18 (no immediates) - Data Section 267
          EOFI3670_0269 (Invalid) Truncated PUSH18 (truncated immediates) - Data Section 268
          EOFI3670_0270 (Invalid) Truncated PUSH19 (no immediates) - Data Section 269
          EOFI3670_0271 (Invalid) Truncated PUSH19 (truncated immediates) - Data Section 270
          EOFI3670_0272 (Invalid) Truncated PUSH20 (no immediates) - Data Section 271
          EOFI3670_0273 (Invalid) Truncated PUSH20 (truncated immediates) - Data Section 272
          EOFI3670_0274 (Invalid) Truncated PUSH21 (no immediates) - Data Section 273
          EOFI3670_0275 (Invalid) Truncated PUSH21 (truncated immediates) - Data Section 274
          EOFI3670_0276 (Invalid) Truncated PUSH22 (no immediates) - Data Section 275
          EOFI3670_0277 (Invalid) Truncated PUSH22 (truncated immediates) - Data Section 276
          EOFI3670_0278 (Invalid) Truncated PUSH23 (no immediates) - Data Section 277
          EOFI3670_0279 (Invalid) Truncated PUSH23 (truncated immediates) - Data Section 278
          EOFI3670_0280 (Invalid) Truncated PUSH24 (no immediates) - Data Section 279
          EOFI3670_0281 (Invalid) Truncated PUSH24 (truncated immediates) - Data Section 280
          EOFI3670_0282 (Invalid) Truncated PUSH25 (no immediates) - Data Section 281
          EOFI3670_0283 (Invalid) Truncated PUSH25 (truncated immediates) - Data Section 282
          EOFI3670_0284 (Invalid) Truncated PUSH26 (no immediates) - Data Section 283
          EOFI3670_0285 (Invalid) Truncated PUSH26 (truncated immediates) - Data Section 284
          EOFI3670_0286 (Invalid) Truncated PUSH27 (no immediates) - Data Section 285
          EOFI3670_0287 (Invalid) Truncated PUSH27 (truncated immediates) - Data Section 286
          EOFI3670_0288 (Invalid) Truncated PUSH28 (no immediates) - Data Section 287
          EOFI3670_0289 (Invalid) Truncated PUSH28 (truncated immediates) - Data Section 288
          EOFI3670_0290 (Invalid) Truncated PUSH29 (no immediates) - Data Section 289
          EOFI3670_0291 (Invalid) Truncated PUSH29 (truncated immediates) - Data Section 290
          EOFI3670_0292 (Invalid) Truncated PUSH30 (no immediates) - Data Section 291
          EOFI3670_0293 (Invalid) Truncated PUSH30 (truncated immediates) - Data Section 292
          EOFI3670_0294 (Invalid) Truncated PUSH31 (no immediates) - Data Section 293
          EOFI3670_0295 (Invalid) Truncated PUSH31 (truncated immediates) - Data Section 294
          EOFI3670_0296 (Invalid) Truncated PUSH32 (no immediates) - Data Section 295
          EOFI3670_0297 (Invalid) Truncated PUSH32 (truncated immediates) - Data Section 296
          EOFI3670_0298 (Invalid) Containing undefined instruction (0xfc) after STOP - Data Section 297
  forks:
    - ">=Osaka"

  vectors:
    # EOFV3670_0001 (Valid) Code containing the STOP opcode - Data Section 0
    # Code: STOP
    - data: |
       :label EOFV3670_0001 :raw 0x
        EF0001 # Magic and Version ( 1 )
        010004 # Types length ( 4 )
        020001 # Total code sections ( 1 )
          0001 # Code section  0 , 1  bytes
        040000 # Data section length ( 0 )
            00 # Terminator (end of header)
               # Code 0 types
            00 # 0 inputs
            80 # 0 outputs (Non-returning function)
          0000 # max stack: 0
               # Code section 0
            00 # [0] STOP 
               # Data section (empty)
      #expectException:
        #">=Osaka": "ok."

    # EOFV3670_0002 (Valid) Code containing the ADD opcode - Data Section 1
    # Code: PUSH1(1) DUP1  ADD STOP
    - data: |
       :label EOFV3670_0002 :raw 0x
        EF0001 # Magic and Version ( 1 )
        010004 # Types length ( 4 )
        020001 # Total code sections ( 1 )
          0005 # Code section  0 , 5  bytes
        040000 # Data section length ( 0 )
            00 # Terminator (end of header)
               # Code 0 types
            00 # 0 inputs
            80 # 0 outputs (Non-returning function)
          0002 # max stack: 2
               # Code section 0
          6001 # [0] PUSH1(1) 
            80 # [2] DUP1 
            01 # [3] ADD 
            00 # [4] STOP 
               # Data section (empty)
      #expectException:
        #">=Osaka": "ok."

    # EOFV3670_0003 (Valid) Code containing the MUL opcode - Data Section 2
    # Code: PUSH1(1) DUP1  MUL STOP
    - data: |
       :label EOFV3670_0003 :raw 0x
        EF0001 # Magic and Version ( 1 )
        010004 # Types length ( 4 )
        020001 # Total code sections ( 1 )
          0005 # Code section  0 , 5  bytes
        040000 # Data section length ( 0 )
            00 # Terminator (end of header)
               # Code 0 types
            00 # 0 inputs
            80 # 0 outputs (Non-returning function)
          0002 # max stack: 2
               # Code section 0
          6001 # [0] PUSH1(1) 
            80 # [2] DUP1 
            02 # [3] MUL 
            00 # [4] STOP 
               # Data section (empty)
      #expectException:
        #">=Osaka": "ok."

    # EOFV3670_0004 (Valid) Code containing the SUB opcode - Data Section 3
    # Code: PUSH1(1) DUP1  SUB STOP
    - data: |
       :label EOFV3670_0004 :raw 0x
        EF0001 # Magic and Version ( 1 )
        010004 # Types length ( 4 )
        020001 # Total code sections ( 1 )
          0005 # Code section  0 , 5  bytes
        040000 # Data section length ( 0 )
            00 # Terminator (end of header)
               # Code 0 types
            00 # 0 inputs
            80 # 0 outputs (Non-returning function)
          0002 # max stack: 2
               # Code section 0
          6001 # [0] PUSH1(1) 
            80 # [2] DUP1 
            03 # [3] SUB 
            00 # [4] STOP 
               # Data section (empty)
      #expectException:
        #">=Osaka": "ok."

    # EOFV3670_0005 (Valid) Code containing the DIV opcode - Data Section 4
    # Code: PUSH1(1) DUP1  DIV STOP
    - data: |
       :label EOFV3670_0005 :raw 0x
        EF0001 # Magic and Version ( 1 )
        010004 # Types length ( 4 )
        020001 # Total code sections ( 1 )
          0005 # Code section  0 , 5  bytes
        040000 # Data section length ( 0 )
            00 # Terminator (end of header)
               # Code 0 types
            00 # 0 inputs
            80 # 0 outputs (Non-returning function)
          0002 # max stack: 2
               # Code section 0
          6001 # [0] PUSH1(1) 
            80 # [2] DUP1 
            04 # [3] DIV 
            00 # [4] STOP 
               # Data section (empty)
      #expectException:
        #">=Osaka": "ok."

    # EOFV3670_0006 (Valid) Code containing the SDIV opcode - Data Section 5
    # Code: PUSH1(1) DUP1  SDIV STOP
    - data: |
       :label EOFV3670_0006 :raw 0x
        EF0001 # Magic and Version ( 1 )
        010004 # Types length ( 4 )
        020001 # Total code sections ( 1 )
          0005 # Code section  0 , 5  bytes
        040000 # Data section length ( 0 )
            00 # Terminator (end of header)
               # Code 0 types
            00 # 0 inputs
            80 # 0 outputs (Non-returning function)
          0002 # max stack: 2
               # Code section 0
          6001 # [0] PUSH1(1) 
            80 # [2] DUP1 
            05 # [3] SDIV 
            00 # [4] STOP 
               # Data section (empty)
      #expectException:
        #">=Osaka": "ok."

    # EOFV3670_0007 (Valid) Code containing the MOD opcode - Data Section 6
    # Code: PUSH1(1) DUP1  MOD STOP
    - data: |
       :label EOFV3670_0007 :raw 0x
        EF0001 # Magic and Version ( 1 )
        010004 # Types length ( 4 )
        020001 # Total code sections ( 1 )
          0005 # Code section  0 , 5  bytes
        040000 # Data section length ( 0 )
            00 # Terminator (end of header)
               # Code 0 types
            00 # 0 inputs
            80 # 0 outputs (Non-returning function)
          0002 # max stack: 2
               # Code section 0
          6001 # [0] PUSH1(1) 
            80 # [2] DUP1 
            06 # [3] MOD 
            00 # [4] STOP 
               # Data section (empty)
      #expectException:
        #">=Osaka": "ok."

    # EOFV3670_0008 (Valid) Code containing the SMOD opcode - Data Section 7
    # Code: PUSH1(1) DUP1  SMOD STOP
    - data: |
       :label EOFV3670_0008 :raw 0x
        EF0001 # Magic and Version ( 1 )
        010004 # Types length ( 4 )
        020001 # Total code sections ( 1 )
          0005 # Code section  0 , 5  bytes
        040000 # Data section length ( 0 )
            00 # Terminator (end of header)
               # Code 0 types
            00 # 0 inputs
            80 # 0 outputs (Non-returning function)
          0002 # max stack: 2
               # Code section 0
          6001 # [0] PUSH1(1) 
            80 # [2] DUP1 
            07 # [3] SMOD 
            00 # [4] STOP 
               # Data section (empty)
      #expectException:
        #">=Osaka": "ok."

    # EOFV3670_0009 (Valid) Code containing the ADDMOD opcode - Data Section 8
    # Code: PUSH1(1) DUP1 DUP1  ADDMOD STOP
    - data: |
       :label EOFV3670_0009 :raw 0x
        EF0001 # Magic and Version ( 1 )
        010004 # Types length ( 4 )
        020001 # Total code sections ( 1 )
          0006 # Code section  0 , 6  bytes
        040000 # Data section length ( 0 )
            00 # Terminator (end of header)
               # Code 0 types
            00 # 0 inputs
            80 # 0 outputs (Non-returning function)
          0003 # max stack: 3
               # Code section 0
          6001 # [0] PUSH1(1) 
            80 # [2] DUP1 
            80 # [3] DUP1 
            08 # [4] ADDMOD 
            00 # [5] STOP 
               # Data section (empty)
      #expectException:
        #">=Osaka": "ok."

    # EOFV3670_0010 (Valid) Code containing the MULMOD opcode - Data Section 9
    # Code: PUSH1(1) DUP1 DUP1  MULMOD STOP
    - data: |
       :label EOFV3670_0010 :raw 0x
        EF0001 # Magic and Version ( 1 )
        010004 # Types length ( 4 )
        020001 # Total code sections ( 1 )
          0006 # Code section  0 , 6  bytes
        040000 # Data section length ( 0 )
            00 # Terminator (end of header)
               # Code 0 types
            00 # 0 inputs
            80 # 0 outputs (Non-returning function)
          0003 # max stack: 3
               # Code section 0
          6001 # [0] PUSH1(1) 
            80 # [2] DUP1 
            80 # [3] DUP1 
            09 # [4] MULMOD 
            00 # [5] STOP 
               # Data section (empty)
      #expectException:
        #">=Osaka": "ok."

    # EOFV3670_0011 (Valid) Code containing the EXP opcode - Data Section 10
    # Code: PUSH1(1) DUP1  EXP STOP
    - data: |
       :label EOFV3670_0011 :raw 0x
        EF0001 # Magic and Version ( 1 )
        010004 # Types length ( 4 )
        020001 # Total code sections ( 1 )
          0005 # Code section  0 , 5  bytes
        040000 # Data section length ( 0 )
            00 # Terminator (end of header)
               # Code 0 types
            00 # 0 inputs
            80 # 0 outputs (Non-returning function)
          0002 # max stack: 2
               # Code section 0
          6001 # [0] PUSH1(1) 
            80 # [2] DUP1 
            0a # [3] EXP 
            00 # [4] STOP 
               # Data section (empty)
      #expectException:
        #">=Osaka": "ok."

    # EOFV3670_0012 (Valid) Code containing the SIGNEXTEND opcode - Data Section 11
    # Code: PUSH1(1) DUP1  SIGNEXTEND STOP
    - data: |
       :label EOFV3670_0012 :raw 0x
        EF0001 # Magic and Version ( 1 )
        010004 # Types length ( 4 )
        020001 # Total code sections ( 1 )
          0005 # Code section  0 , 5  bytes
        040000 # Data section length ( 0 )
            00 # Terminator (end of header)
               # Code 0 types
            00 # 0 inputs
            80 # 0 outputs (Non-returning function)
          0002 # max stack: 2
               # Code section 0
          6001 # [0] PUSH1(1) 
            80 # [2] DUP1 
            0b # [3] SIGNEXTEND 
            00 # [4] STOP 
               # Data section (empty)
      #expectException:
        #">=Osaka": "ok."

    # EOFV3670_0013 (Valid) Code containing the LT opcode - Data Section 12
    # Code: PUSH1(1) DUP1  LT STOP
    - data: |
       :label EOFV3670_0013 :raw 0x
        EF0001 # Magic and Version ( 1 )
        010004 # Types length ( 4 )
        020001 # Total code sections ( 1 )
          0005 # Code section  0 , 5  bytes
        040000 # Data section length ( 0 )
            00 # Terminator (end of header)
               # Code 0 types
            00 # 0 inputs
            80 # 0 outputs (Non-returning function)
          0002 # max stack: 2
               # Code section 0
          6001 # [0] PUSH1(1) 
            80 # [2] DUP1 
            10 # [3] LT 
            00 # [4] STOP 
               # Data section (empty)
      #expectException:
        #">=Osaka": "ok."

    # EOFV3670_0014 (Valid) Code containing the GT opcode - Data Section 13
    # Code: PUSH1(1) DUP1  GT STOP
    - data: |
       :label EOFV3670_0014 :raw 0x
        EF0001 # Magic and Version ( 1 )
        010004 # Types length ( 4 )
        020001 # Total code sections ( 1 )
          0005 # Code section  0 , 5  bytes
        040000 # Data section length ( 0 )
            00 # Terminator (end of header)
               # Code 0 types
            00 # 0 inputs
            80 # 0 outputs (Non-returning function)
          0002 # max stack: 2
               # Code section 0
          6001 # [0] PUSH1(1) 
            80 # [2] DUP1 
            11 # [3] GT 
            00 # [4] STOP 
               # Data section (empty)
      #expectException:
        #">=Osaka": "ok."

    # EOFV3670_0015 (Valid) Code containing the SLT opcode - Data Section 14
    # Code: PUSH1(1) DUP1  SLT STOP
    - data: |
       :label EOFV3670_0015 :raw 0x
        EF0001 # Magic and Version ( 1 )
        010004 # Types length ( 4 )
        020001 # Total code sections ( 1 )
          0005 # Code section  0 , 5  bytes
        040000 # Data section length ( 0 )
            00 # Terminator (end of header)
               # Code 0 types
            00 # 0 inputs
            80 # 0 outputs (Non-returning function)
          0002 # max stack: 2
               # Code section 0
          6001 # [0] PUSH1(1) 
            80 # [2] DUP1 
            12 # [3] SLT 
            00 # [4] STOP 
               # Data section (empty)
      #expectException:
        #">=Osaka": "ok."

    # EOFV3670_0016 (Valid) Code containing the SGT opcode - Data Section 15
    # Code: PUSH1(1) DUP1  SGT STOP
    - data: |
       :label EOFV3670_0016 :raw 0x
        EF0001 # Magic and Version ( 1 )
        010004 # Types length ( 4 )
        020001 # Total code sections ( 1 )
          0005 # Code section  0 , 5  bytes
        040000 # Data section length ( 0 )
            00 # Terminator (end of header)
               # Code 0 types
            00 # 0 inputs
            80 # 0 outputs (Non-returning function)
          0002 # max stack: 2
               # Code section 0
          6001 # [0] PUSH1(1) 
            80 # [2] DUP1 
            13 # [3] SGT 
            00 # [4] STOP 
               # Data section (empty)
      #expectException:
        #">=Osaka": "ok."

    # EOFV3670_0017 (Valid) Code containing the EQ opcode - Data Section 16
    # Code: PUSH1(1) DUP1  EQ STOP
    - data: |
       :label EOFV3670_0017 :raw 0x
        EF0001 # Magic and Version ( 1 )
        010004 # Types length ( 4 )
        020001 # Total code sections ( 1 )
          0005 # Code section  0 , 5  bytes
        040000 # Data section length ( 0 )
            00 # Terminator (end of header)
               # Code 0 types
            00 # 0 inputs
            80 # 0 outputs (Non-returning function)
          0002 # max stack: 2
               # Code section 0
          6001 # [0] PUSH1(1) 
            80 # [2] DUP1 
            14 # [3] EQ 
            00 # [4] STOP 
               # Data section (empty)
      #expectException:
        #">=Osaka": "ok."

    # EOFV3670_0018 (Valid) Code containing the ISZERO opcode - Data Section 17
    # Code: PUSH1(1) ISZERO STOP
    - data: |
       :label EOFV3670_0018 :raw 0x
        EF0001 # Magic and Version ( 1 )
        010004 # Types length ( 4 )
        020001 # Total code sections ( 1 )
          0004 # Code section  0 , 4  bytes
        040000 # Data section length ( 0 )
            00 # Terminator (end of header)
               # Code 0 types
            00 # 0 inputs
            80 # 0 outputs (Non-returning function)
          0001 # max stack: 1
               # Code section 0
          6001 # [0] PUSH1(1) 
            15 # [2] ISZERO 
            00 # [3] STOP 
               # Data section (empty)
      #expectException:
        #">=Osaka": "ok."

    # EOFV3670_0019 (Valid) Code containing the AND opcode - Data Section 18
    # Code: PUSH1(1) DUP1  AND STOP
    - data: |
       :label EOFV3670_0019 :raw 0x
        EF0001 # Magic and Version ( 1 )
        010004 # Types length ( 4 )
        020001 # Total code sections ( 1 )
          0005 # Code section  0 , 5  bytes
        040000 # Data section length ( 0 )
            00 # Terminator (end of header)
               # Code 0 types
            00 # 0 inputs
            80 # 0 outputs (Non-returning function)
          0002 # max stack: 2
               # Code section 0
          6001 # [0] PUSH1(1) 
            80 # [2] DUP1 
            16 # [3] AND 
            00 # [4] STOP 
               # Data section (empty)
      #expectException:
        #">=Osaka": "ok."

    # EOFV3670_0020 (Valid) Code containing the OR opcode - Data Section 19
    # Code: PUSH1(1) DUP1  OR STOP
    - data: |
       :label EOFV3670_0020 :raw 0x
        EF0001 # Magic and Version ( 1 )
        010004 # Types length ( 4 )
        020001 # Total code sections ( 1 )
          0005 # Code section  0 , 5  bytes
        040000 # Data section length ( 0 )
            00 # Terminator (end of header)
               # Code 0 types
            00 # 0 inputs
            80 # 0 outputs (Non-returning function)
          0002 # max stack: 2
               # Code section 0
          6001 # [0] PUSH1(1) 
            80 # [2] DUP1 
            17 # [3] OR 
            00 # [4] STOP 
               # Data section (empty)
      #expectException:
        #">=Osaka": "ok."

    # EOFV3670_0021 (Valid) Code containing the XOR opcode - Data Section 20
    # Code: PUSH1(1) DUP1  XOR STOP
    - data: |
       :label EOFV3670_0021 :raw 0x
        EF0001 # Magic and Version ( 1 )
        010004 # Types length ( 4 )
        020001 # Total code sections ( 1 )
          0005 # Code section  0 , 5  bytes
        040000 # Data section length ( 0 )
            00 # Terminator (end of header)
               # Code 0 types
            00 # 0 inputs
            80 # 0 outputs (Non-returning function)
          0002 # max stack: 2
               # Code section 0
          6001 # [0] PUSH1(1) 
            80 # [2] DUP1 
            18 # [3] XOR 
            00 # [4] STOP 
               # Data section (empty)
      #expectException:
        #">=Osaka": "ok."

    # EOFV3670_0022 (Valid) Code containing the NOT opcode - Data Section 21
    # Code: PUSH1(1) NOT STOP
    - data: |
       :label EOFV3670_0022 :raw 0x
        EF0001 # Magic and Version ( 1 )
        010004 # Types length ( 4 )
        020001 # Total code sections ( 1 )
          0004 # Code section  0 , 4  bytes
        040000 # Data section length ( 0 )
            00 # Terminator (end of header)
               # Code 0 types
            00 # 0 inputs
            80 # 0 outputs (Non-returning function)
          0001 # max stack: 1
               # Code section 0
          6001 # [0] PUSH1(1) 
            19 # [2] NOT 
            00 # [3] STOP 
               # Data section (empty)
      #expectException:
        #">=Osaka": "ok."

    # EOFV3670_0023 (Valid) Code containing the BYTE opcode - Data Section 22
    # Code: PUSH1(1) DUP1  BYTE STOP
    - data: |
       :label EOFV3670_0023 :raw 0x
        EF0001 # Magic and Version ( 1 )
        010004 # Types length ( 4 )
        020001 # Total code sections ( 1 )
          0005 # Code section  0 , 5  bytes
        040000 # Data section length ( 0 )
            00 # Terminator (end of header)
               # Code 0 types
            00 # 0 inputs
            80 # 0 outputs (Non-returning function)
          0002 # max stack: 2
               # Code section 0
          6001 # [0] PUSH1(1) 
            80 # [2] DUP1 
            1a # [3] BYTE 
            00 # [4] STOP 
               # Data section (empty)
      #expectException:
        #">=Osaka": "ok."

    # EOFV3670_0024 (Valid) Code containing the SHL opcode - Data Section 23
    # Code: PUSH1(1) DUP1  SHL STOP
    - data: |
       :label EOFV3670_0024 :raw 0x
        EF0001 # Magic and Version ( 1 )
        010004 # Types length ( 4 )
        020001 # Total code sections ( 1 )
          0005 # Code section  0 , 5  bytes
        040000 # Data section length ( 0 )
            00 # Terminator (end of header)
               # Code 0 types
            00 # 0 inputs
            80 # 0 outputs (Non-returning function)
          0002 # max stack: 2
               # Code section 0
          6001 # [0] PUSH1(1) 
            80 # [2] DUP1 
            1b # [3] SHL 
            00 # [4] STOP 
               # Data section (empty)
      #expectException:
        #">=Osaka": "ok."

    # EOFV3670_0025 (Valid) Code containing the SHR opcode - Data Section 24
    # Code: PUSH1(1) DUP1  SHR STOP
    - data: |
       :label EOFV3670_0025 :raw 0x
        EF0001 # Magic and Version ( 1 )
        010004 # Types length ( 4 )
        020001 # Total code sections ( 1 )
          0005 # Code section  0 , 5  bytes
        040000 # Data section length ( 0 )
            00 # Terminator (end of header)
               # Code 0 types
            00 # 0 inputs
            80 # 0 outputs (Non-returning function)
          0002 # max stack: 2
               # Code section 0
          6001 # [0] PUSH1(1) 
            80 # [2] DUP1 
            1c # [3] SHR 
            00 # [4] STOP 
               # Data section (empty)
      #expectException:
        #">=Osaka": "ok."

    # EOFV3670_0026 (Valid) Code containing the SAR opcode - Data Section 25
    # Code: PUSH1(1) DUP1  SAR STOP
    - data: |
       :label EOFV3670_0026 :raw 0x
        EF0001 # Magic and Version ( 1 )
        010004 # Types length ( 4 )
        020001 # Total code sections ( 1 )
          0005 # Code section  0 , 5  bytes
        040000 # Data section length ( 0 )
            00 # Terminator (end of header)
               # Code 0 types
            00 # 0 inputs
            80 # 0 outputs (Non-returning function)
          0002 # max stack: 2
               # Code section 0
          6001 # [0] PUSH1(1) 
            80 # [2] DUP1 
            1d # [3] SAR 
            00 # [4] STOP 
               # Data section (empty)
      #expectException:
        #">=Osaka": "ok."

    # EOFV3670_0027 (Valid) Code containing the SHA3 opcode - Data Section 26
    # Code: PUSH1(1) DUP1  SHA3 STOP
    - data: |
       :label EOFV3670_0027 :raw 0x
        EF0001 # Magic and Version ( 1 )
        010004 # Types length ( 4 )
        020001 # Total code sections ( 1 )
          0005 # Code section  0 , 5  bytes
        040000 # Data section length ( 0 )
            00 # Terminator (end of header)
               # Code 0 types
            00 # 0 inputs
            80 # 0 outputs (Non-returning function)
          0002 # max stack: 2
               # Code section 0
          6001 # [0] PUSH1(1) 
            80 # [2] DUP1 
            20 # [3] SHA3 
            00 # [4] STOP 
               # Data section (empty)
      #expectException:
        #">=Osaka": "ok."

    # EOFV3670_0028 (Valid) Code containing the ADDRESS opcode - Data Section 27
    # Code: ADDRESS STOP
    - data: |
       :label EOFV3670_0028 :raw 0x
        EF0001 # Magic and Version ( 1 )
        010004 # Types length ( 4 )
        020001 # Total code sections ( 1 )
          0002 # Code section  0 , 2  bytes
        040000 # Data section length ( 0 )
            00 # Terminator (end of header)
               # Code 0 types
            00 # 0 inputs
            80 # 0 outputs (Non-returning function)
          0001 # max stack: 1
               # Code section 0
            30 # [0] ADDRESS 
            00 # [1] STOP 
               # Data section (empty)
      #expectException:
        #">=Osaka": "ok."

    # EOFV3670_0029 (Valid) Code containing the BALANCE opcode - Data Section 28
    # Code: PUSH1(1) BALANCE STOP
    - data: |
       :label EOFV3670_0029 :raw 0x
        EF0001 # Magic and Version ( 1 )
        010004 # Types length ( 4 )
        020001 # Total code sections ( 1 )
          0004 # Code section  0 , 4  bytes
        040000 # Data section length ( 0 )
            00 # Terminator (end of header)
               # Code 0 types
            00 # 0 inputs
            80 # 0 outputs (Non-returning function)
          0001 # max stack: 1
               # Code section 0
          6001 # [0] PUSH1(1) 
            31 # [2] BALANCE 
            00 # [3] STOP 
               # Data section (empty)
      #expectException:
        #">=Osaka": "ok."

    # EOFV3670_0030 (Valid) Code containing the ORIGIN opcode - Data Section 29
    # Code: ORIGIN STOP
    - data: |
       :label EOFV3670_0030 :raw 0x
        EF0001 # Magic and Version ( 1 )
        010004 # Types length ( 4 )
        020001 # Total code sections ( 1 )
          0002 # Code section  0 , 2  bytes
        040000 # Data section length ( 0 )
            00 # Terminator (end of header)
               # Code 0 types
            00 # 0 inputs
            80 # 0 outputs (Non-returning function)
          0001 # max stack: 1
               # Code section 0
            32 # [0] ORIGIN 
            00 # [1] STOP 
               # Data section (empty)
      #expectException:
        #">=Osaka": "ok."

    # EOFV3670_0031 (Valid) Code containing the CALLER opcode - Data Section 30
    # Code: CALLER STOP
    - data: |
       :label EOFV3670_0031 :raw 0x
        EF0001 # Magic and Version ( 1 )
        010004 # Types length ( 4 )
        020001 # Total code sections ( 1 )
          0002 # Code section  0 , 2  bytes
        040000 # Data section length ( 0 )
            00 # Terminator (end of header)
               # Code 0 types
            00 # 0 inputs
            80 # 0 outputs (Non-returning function)
          0001 # max stack: 1
               # Code section 0
            33 # [0] CALLER 
            00 # [1] STOP 
               # Data section (empty)
      #expectException:
        #">=Osaka": "ok."

    # EOFV3670_0032 (Valid) Code containing the CALLVALUE opcode - Data Section 31
    # Code: CALLVALUE STOP
    - data: |
       :label EOFV3670_0032 :raw 0x
        EF0001 # Magic and Version ( 1 )
        010004 # Types length ( 4 )
        020001 # Total code sections ( 1 )
          0002 # Code section  0 , 2  bytes
        040000 # Data section length ( 0 )
            00 # Terminator (end of header)
               # Code 0 types
            00 # 0 inputs
            80 # 0 outputs (Non-returning function)
          0001 # max stack: 1
               # Code section 0
            34 # [0] CALLVALUE 
            00 # [1] STOP 
               # Data section (empty)
      #expectException:
        #">=Osaka": "ok."

    # EOFV3670_0033 (Valid) Code containing the CALLDATALOAD opcode - Data Section 32
    # Code: PUSH1(1) CALLDATALOAD STOP
    - data: |
       :label EOFV3670_0033 :raw 0x
        EF0001 # Magic and Version ( 1 )
        010004 # Types length ( 4 )
        020001 # Total code sections ( 1 )
          0004 # Code section  0 , 4  bytes
        040000 # Data section length ( 0 )
            00 # Terminator (end of header)
               # Code 0 types
            00 # 0 inputs
            80 # 0 outputs (Non-returning function)
          0001 # max stack: 1
               # Code section 0
          6001 # [0] PUSH1(1) 
            35 # [2] CALLDATALOAD 
            00 # [3] STOP 
               # Data section (empty)
      #expectException:
        #">=Osaka": "ok."

    # EOFV3670_0034 (Valid) Code containing the CALLDATASIZE opcode - Data Section 33
    # Code: CALLDATASIZE STOP
    - data: |
       :label EOFV3670_0034 :raw 0x
        EF0001 # Magic and Version ( 1 )
        010004 # Types length ( 4 )
        020001 # Total code sections ( 1 )
          0002 # Code section  0 , 2  bytes
        040000 # Data section length ( 0 )
            00 # Terminator (end of header)
               # Code 0 types
            00 # 0 inputs
            80 # 0 outputs (Non-returning function)
          0001 # max stack: 1
               # Code section 0
            36 # [0] CALLDATASIZE 
            00 # [1] STOP 
               # Data section (empty)
      #expectException:
        #">=Osaka": "ok."

    # EOFV3670_0035 (Valid) Code containing the CALLDATACOPY opcode - Data Section 34
    # Code: PUSH1(1) DUP1 DUP1  CALLDATACOPY STOP
    - data: |
       :label EOFV3670_0035 :raw 0x
        EF0001 # Magic and Version ( 1 )
        010004 # Types length ( 4 )
        020001 # Total code sections ( 1 )
          0006 # Code section  0 , 6  bytes
        040000 # Data section length ( 0 )
            00 # Terminator (end of header)
               # Code 0 types
            00 # 0 inputs
            80 # 0 outputs (Non-returning function)
          0003 # max stack: 3
               # Code section 0
          6001 # [0] PUSH1(1) 
            80 # [2] DUP1 
            80 # [3] DUP1 
            37 # [4] CALLDATACOPY 
            00 # [5] STOP 
               # Data section (empty)
      #expectException:
        #">=Osaka": "ok."

    # EOFV3670_0036 (Valid) Code containing the GASPRICE opcode - Data Section 35
    # Code: GASPRICE STOP
    - data: |
       :label EOFV3670_0036 :raw 0x
        EF0001 # Magic and Version ( 1 )
        010004 # Types length ( 4 )
        020001 # Total code sections ( 1 )
          0002 # Code section  0 , 2  bytes
        040000 # Data section length ( 0 )
            00 # Terminator (end of header)
               # Code 0 types
            00 # 0 inputs
            80 # 0 outputs (Non-returning function)
          0001 # max stack: 1
               # Code section 0
            3a # [0] GASPRICE 
            00 # [1] STOP 
               # Data section (empty)
      #expectException:
        #">=Osaka": "ok."

    # EOFV3670_0037 (Valid) Code containing the RETURNDATASIZE opcode - Data Section 36
    # Code: RETURNDATASIZE STOP
    - data: |
       :label EOFV3670_0037 :raw 0x
        EF0001 # Magic and Version ( 1 )
        010004 # Types length ( 4 )
        020001 # Total code sections ( 1 )
          0002 # Code section  0 , 2  bytes
        040000 # Data section length ( 0 )
            00 # Terminator (end of header)
               # Code 0 types
            00 # 0 inputs
            80 # 0 outputs (Non-returning function)
          0001 # max stack: 1
               # Code section 0
            3d # [0] RETURNDATASIZE 
            00 # [1] STOP 
               # Data section (empty)
      #expectException:
        #">=Osaka": "ok."

    # EOFV3670_0038 (Valid) Code containing the RETURNDATACOPY opcode - Data Section 37
    # Code: PUSH1(1) DUP1 DUP1  RETURNDATACOPY STOP
    - data: |
       :label EOFV3670_0038 :raw 0x
        EF0001 # Magic and Version ( 1 )
        010004 # Types length ( 4 )
        020001 # Total code sections ( 1 )
          0006 # Code section  0 , 6  bytes
        040000 # Data section length ( 0 )
            00 # Terminator (end of header)
               # Code 0 types
            00 # 0 inputs
            80 # 0 outputs (Non-returning function)
          0003 # max stack: 3
               # Code section 0
          6001 # [0] PUSH1(1) 
            80 # [2] DUP1 
            80 # [3] DUP1 
            3e # [4] RETURNDATACOPY 
            00 # [5] STOP 
               # Data section (empty)
      #expectException:
        #">=Osaka": "ok."

    # EOFV3670_0039 (Valid) Code containing the BLOCKHASH opcode - Data Section 38
    # Code: PUSH1(1) BLOCKHASH STOP
    - data: |
       :label EOFV3670_0039 :raw 0x
        EF0001 # Magic and Version ( 1 )
        010004 # Types length ( 4 )
        020001 # Total code sections ( 1 )
          0004 # Code section  0 , 4  bytes
        040000 # Data section length ( 0 )
            00 # Terminator (end of header)
               # Code 0 types
            00 # 0 inputs
            80 # 0 outputs (Non-returning function)
          0001 # max stack: 1
               # Code section 0
          6001 # [0] PUSH1(1) 
            40 # [2] BLOCKHASH 
            00 # [3] STOP 
               # Data section (empty)
      #expectException:
        #">=Osaka": "ok."

    # EOFV3670_0040 (Valid) Code containing the COINBASE opcode - Data Section 39
    # Code: COINBASE STOP
    - data: |
       :label EOFV3670_0040 :raw 0x
        EF0001 # Magic and Version ( 1 )
        010004 # Types length ( 4 )
        020001 # Total code sections ( 1 )
          0002 # Code section  0 , 2  bytes
        040000 # Data section length ( 0 )
            00 # Terminator (end of header)
               # Code 0 types
            00 # 0 inputs
            80 # 0 outputs (Non-returning function)
          0001 # max stack: 1
               # Code section 0
            41 # [0] COINBASE 
            00 # [1] STOP 
               # Data section (empty)
      #expectException:
        #">=Osaka": "ok."

    # EOFV3670_0041 (Valid) Code containing the TIMESTAMP opcode - Data Section 40
    # Code: TIMESTAMP STOP
    - data: |
       :label EOFV3670_0041 :raw 0x
        EF0001 # Magic and Version ( 1 )
        010004 # Types length ( 4 )
        020001 # Total code sections ( 1 )
          0002 # Code section  0 , 2  bytes
        040000 # Data section length ( 0 )
            00 # Terminator (end of header)
               # Code 0 types
            00 # 0 inputs
            80 # 0 outputs (Non-returning function)
          0001 # max stack: 1
               # Code section 0
            42 # [0] TIMESTAMP 
            00 # [1] STOP 
               # Data section (empty)
      #expectException:
        #">=Osaka": "ok."

    # EOFV3670_0042 (Valid) Code containing the NUMBER opcode - Data Section 41
    # Code: NUMBER STOP
    - data: |
       :label EOFV3670_0042 :raw 0x
        EF0001 # Magic and Version ( 1 )
        010004 # Types length ( 4 )
        020001 # Total code sections ( 1 )
          0002 # Code section  0 , 2  bytes
        040000 # Data section length ( 0 )
            00 # Terminator (end of header)
               # Code 0 types
            00 # 0 inputs
            80 # 0 outputs (Non-returning function)
          0001 # max stack: 1
               # Code section 0
            43 # [0] NUMBER 
            00 # [1] STOP 
               # Data section (empty)
      #expectException:
        #">=Osaka": "ok."

    # EOFV3670_0043 (Valid) Code containing the DIFFICULTY opcode - Data Section 42
    # Code: DIFFICULTY STOP
    - data: |
       :label EOFV3670_0043 :raw 0x
        EF0001 # Magic and Version ( 1 )
        010004 # Types length ( 4 )
        020001 # Total code sections ( 1 )
          0002 # Code section  0 , 2  bytes
        040000 # Data section length ( 0 )
            00 # Terminator (end of header)
               # Code 0 types
            00 # 0 inputs
            80 # 0 outputs (Non-returning function)
          0001 # max stack: 1
               # Code section 0
            44 # [0] DIFFICULTY 
            00 # [1] STOP 
               # Data section (empty)
      #expectException:
        #">=Osaka": "ok."

    # EOFV3670_0044 (Valid) Code containing the GASLIMIT opcode - Data Section 43
    # Code: GASLIMIT STOP
    - data: |
       :label EOFV3670_0044 :raw 0x
        EF0001 # Magic and Version ( 1 )
        010004 # Types length ( 4 )
        020001 # Total code sections ( 1 )
          0002 # Code section  0 , 2  bytes
        040000 # Data section length ( 0 )
            00 # Terminator (end of header)
               # Code 0 types
            00 # 0 inputs
            80 # 0 outputs (Non-returning function)
          0001 # max stack: 1
               # Code section 0
            45 # [0] GASLIMIT 
            00 # [1] STOP 
               # Data section (empty)
      #expectException:
        #">=Osaka": "ok."

    # EOFV3670_0045 (Valid) Code containing the CHAINID opcode - Data Section 44
    # Code: CHAINID STOP
    - data: |
       :label EOFV3670_0045 :raw 0x
        EF0001 # Magic and Version ( 1 )
        010004 # Types length ( 4 )
        020001 # Total code sections ( 1 )
          0002 # Code section  0 , 2  bytes
        040000 # Data section length ( 0 )
            00 # Terminator (end of header)
               # Code 0 types
            00 # 0 inputs
            80 # 0 outputs (Non-returning function)
          0001 # max stack: 1
               # Code section 0
            46 # [0] CHAINID 
            00 # [1] STOP 
               # Data section (empty)
      #expectException:
        #">=Osaka": "ok."

    # EOFV3670_0046 (Valid) Code containing the SELFBALANCE opcode - Data Section 45
    # Code: SELFBALANCE STOP
    - data: |
       :label EOFV3670_0046 :raw 0x
        EF0001 # Magic and Version ( 1 )
        010004 # Types length ( 4 )
        020001 # Total code sections ( 1 )
          0002 # Code section  0 , 2  bytes
        040000 # Data section length ( 0 )
            00 # Terminator (end of header)
               # Code 0 types
            00 # 0 inputs
            80 # 0 outputs (Non-returning function)
          0001 # max stack: 1
               # Code section 0
            47 # [0] SELFBALANCE 
            00 # [1] STOP 
               # Data section (empty)
      #expectException:
        #">=Osaka": "ok."

    # EOFV3670_0047 (Valid) Code containing the BASEFEE opcode - Data Section 46
    # Code: BASEFEE STOP
    - data: |
       :label EOFV3670_0047 :raw 0x
        EF0001 # Magic and Version ( 1 )
        010004 # Types length ( 4 )
        020001 # Total code sections ( 1 )
          0002 # Code section  0 , 2  bytes
        040000 # Data section length ( 0 )
            00 # Terminator (end of header)
               # Code 0 types
            00 # 0 inputs
            80 # 0 outputs (Non-returning function)
          0001 # max stack: 1
               # Code section 0
            48 # [0] BASEFEE 
            00 # [1] STOP 
               # Data section (empty)
      #expectException:
        #">=Osaka": "ok."

    # EOFV3670_0048 (Valid) Code containing the BLOBHASH opcode - Data Section 47
    # Code: PUSH1(1) BLOBHASH STOP
    - data: |
       :label EOFV3670_0048 :raw 0x
        EF0001 # Magic and Version ( 1 )
        010004 # Types length ( 4 )
        020001 # Total code sections ( 1 )
          0004 # Code section  0 , 4  bytes
        040000 # Data section length ( 0 )
            00 # Terminator (end of header)
               # Code 0 types
            00 # 0 inputs
            80 # 0 outputs (Non-returning function)
          0001 # max stack: 1
               # Code section 0
          6001 # [0] PUSH1(1) 
            49 # [2] BLOBHASH 
            00 # [3] STOP 
               # Data section (empty)
      #expectException:
        #">=Osaka": "ok."

    # EOFV3670_0049 (Valid) Code containing the BLOBBASEFEE opcode - Data Section 48
    # Code: BLOBBASEFEE STOP
    - data: |
       :label EOFV3670_0049 :raw 0x
        EF0001 # Magic and Version ( 1 )
        010004 # Types length ( 4 )
        020001 # Total code sections ( 1 )
          0002 # Code section  0 , 2  bytes
        040000 # Data section length ( 0 )
            00 # Terminator (end of header)
               # Code 0 types
            00 # 0 inputs
            80 # 0 outputs (Non-returning function)
          0001 # max stack: 1
               # Code section 0
            4a # [0] BLOBBASEFEE 
            00 # [1] STOP 
               # Data section (empty)
      #expectException:
        #">=Osaka": "ok."

    # EOFV3670_0050 (Valid) Code containing the POP opcode - Data Section 49
    # Code: PUSH1(1) POP STOP
    - data: |
       :label EOFV3670_0050 :raw 0x
        EF0001 # Magic and Version ( 1 )
        010004 # Types length ( 4 )
        020001 # Total code sections ( 1 )
          0004 # Code section  0 , 4  bytes
        040000 # Data section length ( 0 )
            00 # Terminator (end of header)
               # Code 0 types
            00 # 0 inputs
            80 # 0 outputs (Non-returning function)
          0001 # max stack: 1
               # Code section 0
          6001 # [0] PUSH1(1) 
            50 # [2] POP 
            00 # [3] STOP 
               # Data section (empty)
      #expectException:
        #">=Osaka": "ok."

    # EOFV3670_0051 (Valid) Code containing the MLOAD opcode - Data Section 50
    # Code: PUSH1(1) MLOAD STOP
    - data: |
       :label EOFV3670_0051 :raw 0x
        EF0001 # Magic and Version ( 1 )
        010004 # Types length ( 4 )
        020001 # Total code sections ( 1 )
          0004 # Code section  0 , 4  bytes
        040000 # Data section length ( 0 )
            00 # Terminator (end of header)
               # Code 0 types
            00 # 0 inputs
            80 # 0 outputs (Non-returning function)
          0001 # max stack: 1
               # Code section 0
          6001 # [0] PUSH1(1) 
            51 # [2] MLOAD 
            00 # [3] STOP 
               # Data section (empty)
      #expectException:
        #">=Osaka": "ok."

    # EOFV3670_0052 (Valid) Code containing the MSTORE8 opcode - Data Section 51
    # Code: PUSH1(1) DUP1  MSTORE8 STOP
    - data: |
       :label EOFV3670_0052 :raw 0x
        EF0001 # Magic and Version ( 1 )
        010004 # Types length ( 4 )
        020001 # Total code sections ( 1 )
          0005 # Code section  0 , 5  bytes
        040000 # Data section length ( 0 )
            00 # Terminator (end of header)
               # Code 0 types
            00 # 0 inputs
            80 # 0 outputs (Non-returning function)
          0002 # max stack: 2
               # Code section 0
          6001 # [0] PUSH1(1) 
            80 # [2] DUP1 
            53 # [3] MSTORE8 
            00 # [4] STOP 
               # Data section (empty)
      #expectException:
        #">=Osaka": "ok."

    # EOFV3670_0053 (Valid) Code containing the SLOAD opcode - Data Section 52
    # Code: PUSH1(1) SLOAD STOP
    - data: |
       :label EOFV3670_0053 :raw 0x
        EF0001 # Magic and Version ( 1 )
        010004 # Types length ( 4 )
        020001 # Total code sections ( 1 )
          0004 # Code section  0 , 4  bytes
        040000 # Data section length ( 0 )
            00 # Terminator (end of header)
               # Code 0 types
            00 # 0 inputs
            80 # 0 outputs (Non-returning function)
          0001 # max stack: 1
               # Code section 0
          6001 # [0] PUSH1(1) 
            54 # [2] SLOAD 
            00 # [3] STOP 
               # Data section (empty)
      #expectException:
        #">=Osaka": "ok."

    # EOFV3670_0054 (Valid) Code containing the SSTORE opcode - Data Section 53
    # Code: PUSH1(1) DUP1  SSTORE STOP
    - data: |
       :label EOFV3670_0054 :raw 0x
        EF0001 # Magic and Version ( 1 )
        010004 # Types length ( 4 )
        020001 # Total code sections ( 1 )
          0005 # Code section  0 , 5  bytes
        040000 # Data section length ( 0 )
            00 # Terminator (end of header)
               # Code 0 types
            00 # 0 inputs
            80 # 0 outputs (Non-returning function)
          0002 # max stack: 2
               # Code section 0
          6001 # [0] PUSH1(1) 
            80 # [2] DUP1 
            55 # [3] SSTORE 
            00 # [4] STOP 
               # Data section (empty)
      #expectException:
        #">=Osaka": "ok."

    # EOFV3670_0055 (Valid) Code containing the MSIZE opcode - Data Section 54
    # Code: MSIZE STOP
    - data: |
       :label EOFV3670_0055 :raw 0x
        EF0001 # Magic and Version ( 1 )
        010004 # Types length ( 4 )
        020001 # Total code sections ( 1 )
          0002 # Code section  0 , 2  bytes
        040000 # Data section length ( 0 )
            00 # Terminator (end of header)
               # Code 0 types
            00 # 0 inputs
            80 # 0 outputs (Non-returning function)
          0001 # max stack: 1
               # Code section 0
            59 # [0] MSIZE 
            00 # [1] STOP 
               # Data section (empty)
      #expectException:
        #">=Osaka": "ok."

    # EOFV3670_0056 (Valid) Code containing the NOP opcode - Data Section 55
    # Code: NOP STOP
    - data: |
       :label EOFV3670_0056 :raw 0x
        EF0001 # Magic and Version ( 1 )
        010004 # Types length ( 4 )
        020001 # Total code sections ( 1 )
          0002 # Code section  0 , 2  bytes
        040000 # Data section length ( 0 )
            00 # Terminator (end of header)
               # Code 0 types
            00 # 0 inputs
            80 # 0 outputs (Non-returning function)
          0000 # max stack: 0
               # Code section 0
            5b # [0] NOP 
            00 # [1] STOP 
               # Data section (empty)
      #expectException:
        #">=Osaka": "ok."

    # EOFV3670_0057 (Valid) Code containing the MCOPY opcode - Data Section 56
    # Code: PUSH1(1) DUP1 DUP1  MCOPY STOP
    - data: |
       :label EOFV3670_0057 :raw 0x
        EF0001 # Magic and Version ( 1 )
        010004 # Types length ( 4 )
        020001 # Total code sections ( 1 )
          0006 # Code section  0 , 6  bytes
        040000 # Data section length ( 0 )
            00 # Terminator (end of header)
               # Code 0 types
            00 # 0 inputs
            80 # 0 outputs (Non-returning function)
          0003 # max stack: 3
               # Code section 0
          6001 # [0] PUSH1(1) 
            80 # [2] DUP1 
            80 # [3] DUP1 
            5e # [4] MCOPY 
            00 # [5] STOP 
               # Data section (empty)
      #expectException:
        #">=Osaka": "ok."

    # EOFV3670_0058 (Valid) Code containing the PUSH0 opcode - Data Section 57
    # Code: PUSH0 STOP
    - data: |
       :label EOFV3670_0058 :raw 0x
        EF0001 # Magic and Version ( 1 )
        010004 # Types length ( 4 )
        020001 # Total code sections ( 1 )
          0002 # Code section  0 , 2  bytes
        040000 # Data section length ( 0 )
            00 # Terminator (end of header)
               # Code 0 types
            00 # 0 inputs
            80 # 0 outputs (Non-returning function)
          0001 # max stack: 1
               # Code section 0
            5f # [0] PUSH0 
            00 # [1] STOP 
               # Data section (empty)
      #expectException:
        #">=Osaka": "ok."

    # EOFV3670_0059 (Valid) Code containing the PUSH1 opcode - Data Section 58
    # Code: PUSH1(1) STOP
    - data: |
       :label EOFV3670_0059 :raw 0x
        EF0001 # Magic and Version ( 1 )
        010004 # Types length ( 4 )
        020001 # Total code sections ( 1 )
          0003 # Code section  0 , 3  bytes
        040000 # Data section length ( 0 )
            00 # Terminator (end of header)
               # Code 0 types
            00 # 0 inputs
            80 # 0 outputs (Non-returning function)
          0001 # max stack: 1
               # Code section 0
          6001 # [0] PUSH1(1) 
            00 # [2] STOP 
               # Data section (empty)
      #expectException:
        #">=Osaka": "ok."

    # EOFV3670_0060 (Valid) Code containing the PUSH2 opcode - Data Section 59
    # Code: PUSH2(0xffff) STOP
    - data: |
       :label EOFV3670_0060 :raw 0x
        EF0001 # Magic and Version ( 1 )
        010004 # Types length ( 4 )
        020001 # Total code sections ( 1 )
          0004 # Code section  0 , 4  bytes
        040000 # Data section length ( 0 )
            00 # Terminator (end of header)
               # Code 0 types
            00 # 0 inputs
            80 # 0 outputs (Non-returning function)
          0001 # max stack: 1
               # Code section 0
        61ffff # [0] PUSH2(-1) 
            00 # [3] STOP 
               # Data section (empty)
      #expectException:
        #">=Osaka": "ok."

    # EOFV3670_0061 (Valid) Code containing the PUSH3 opcode - Data Section 60
    # Code: PUSH3(0xffffff) STOP
    - data: |
       :label EOFV3670_0061 :raw 0x
        EF0001 # Magic and Version ( 1 )
        010004 # Types length ( 4 )
        020001 # Total code sections ( 1 )
          0005 # Code section  0 , 5  bytes
        040000 # Data section length ( 0 )
            00 # Terminator (end of header)
               # Code 0 types
            00 # 0 inputs
            80 # 0 outputs (Non-returning function)
          0001 # max stack: 1
               # Code section 0
        62ffffff # [0] PUSH3(16711679) 
            00 # [4] STOP 
               # Data section (empty)
      #expectException:
        #">=Osaka": "ok."

    # EOFV3670_0062 (Valid) Code containing the PUSH4 opcode - Data Section 61
    # Code: PUSH4(0xffffffff) STOP
    - data: |
       :label EOFV3670_0062 :raw 0x
        EF0001 # Magic and Version ( 1 )
        010004 # Types length ( 4 )
        020001 # Total code sections ( 1 )
          0006 # Code section  0 , 6  bytes
        040000 # Data section length ( 0 )
            00 # Terminator (end of header)
               # Code 0 types
            00 # 0 inputs
            80 # 0 outputs (Non-returning function)
          0001 # max stack: 1
               # Code section 0
        63ffffffff # [0] PUSH4(4294901759) 
            00 # [5] STOP 
               # Data section (empty)
      #expectException:
        #">=Osaka": "ok."

    # EOFV3670_0063 (Valid) Code containing the PUSH5 opcode - Data Section 62
    # Code: PUSH5(0xffffffffff) STOP
    - data: |
       :label EOFV3670_0063 :raw 0x
        EF0001 # Magic and Version ( 1 )
        010004 # Types length ( 4 )
        020001 # Total code sections ( 1 )
          0007 # Code section  0 , 7  bytes
        040000 # Data section length ( 0 )
            00 # Terminator (end of header)
               # Code 0 types
            00 # 0 inputs
            80 # 0 outputs (Non-returning function)
          0001 # max stack: 1
               # Code section 0
        64ffffffffff # [0] PUSH5(1099511562239) 
            00 # [6] STOP 
               # Data section (empty)
      #expectException:
        #">=Osaka": "ok."

    # EOFV3670_0064 (Valid) Code containing the PUSH6 opcode - Data Section 63
    # Code: PUSH6(0xffffffffffff) STOP
    - data: |
       :label EOFV3670_0064 :raw 0x
        EF0001 # Magic and Version ( 1 )
        010004 # Types length ( 4 )
        020001 # Total code sections ( 1 )
          0008 # Code section  0 , 8  bytes
        040000 # Data section length ( 0 )
            00 # Terminator (end of header)
               # Code 0 types
            00 # 0 inputs
            80 # 0 outputs (Non-returning function)
          0001 # max stack: 1
               # Code section 0
        65ffffffffffff # [0] PUSH6(281474976645119) 
            00 # [7] STOP 
               # Data section (empty)
      #expectException:
        #">=Osaka": "ok."

    # EOFV3670_0065 (Valid) Code containing the PUSH7 opcode - Data Section 64
    # Code: PUSH7(0xffffffffffffff) STOP
    - data: |
       :label EOFV3670_0065 :raw 0x
        EF0001 # Magic and Version ( 1 )
        010004 # Types length ( 4 )
        020001 # Total code sections ( 1 )
          0009 # Code section  0 , 9  bytes
        040000 # Data section length ( 0 )
            00 # Terminator (end of header)
               # Code 0 types
            00 # 0 inputs
            80 # 0 outputs (Non-returning function)
          0001 # max stack: 1
               # Code section 0
        66ffffffffffffff # [0] PUSH7(72057594037862399) 
            00 # [8] STOP 
               # Data section (empty)
      #expectException:
        #">=Osaka": "ok."

    # EOFV3670_0066 (Valid) Code containing the PUSH8 opcode - Data Section 65
    # Code: PUSH8(0xffffffffffffffff) STOP
    - data: |
       :label EOFV3670_0066 :raw 0x
        EF0001 # Magic and Version ( 1 )
        010004 # Types length ( 4 )
        020001 # Total code sections ( 1 )
          000a # Code section  0 , 10  bytes
        040000 # Data section length ( 0 )
            00 # Terminator (end of header)
               # Code 0 types
            00 # 0 inputs
            80 # 0 outputs (Non-returning function)
          0001 # max stack: 1
               # Code section 0
        67ffffffffffffffff # [0] PUSH8(0xffffffffffffffff) 
            00 # [9] STOP 
               # Data section (empty)
      #expectException:
        #">=Osaka": "ok."

    # EOFV3670_0067 (Valid) Code containing the PUSH9 opcode - Data Section 66
    # Code: PUSH9(0xffffffffffffffffff) STOP
    - data: |
       :label EOFV3670_0067 :raw 0x
        EF0001 # Magic and Version ( 1 )
        010004 # Types length ( 4 )
        020001 # Total code sections ( 1 )
          000b # Code section  0 , 11  bytes
        040000 # Data section length ( 0 )
            00 # Terminator (end of header)
               # Code 0 types
            00 # 0 inputs
            80 # 0 outputs (Non-returning function)
          0001 # max stack: 1
               # Code section 0
        68ffffffffffffffffff # [0] PUSH9(0xffffffffffffffffff) 
            00 # [10] STOP 
               # Data section (empty)
      #expectException:
        #">=Osaka": "ok."

    # EOFV3670_0068 (Valid) Code containing the PUSH10 opcode - Data Section 67
    # Code: PUSH10(0xffffffffffffffffffff) STOP
    - data: |
       :label EOFV3670_0068 :raw 0x
        EF0001 # Magic and Version ( 1 )
        010004 # Types length ( 4 )
        020001 # Total code sections ( 1 )
          000c # Code section  0 , 12  bytes
        040000 # Data section length ( 0 )
            00 # Terminator (end of header)
               # Code 0 types
            00 # 0 inputs
            80 # 0 outputs (Non-returning function)
          0001 # max stack: 1
               # Code section 0
        69ffffffffffffffffffff # [0] PUSH10(0xffffffffffffffffffff) 
            00 # [11] STOP 
               # Data section (empty)
      #expectException:
        #">=Osaka": "ok."

    # EOFV3670_0069 (Valid) Code containing the PUSH11 opcode - Data Section 68
    # Code: PUSH11(0xffffffffffffffffffffff) STOP
    - data: |
       :label EOFV3670_0069 :raw 0x
        EF0001 # Magic and Version ( 1 )
        010004 # Types length ( 4 )
        020001 # Total code sections ( 1 )
          000d # Code section  0 , 13  bytes
        040000 # Data section length ( 0 )
            00 # Terminator (end of header)
               # Code 0 types
            00 # 0 inputs
            80 # 0 outputs (Non-returning function)
          0001 # max stack: 1
               # Code section 0
        6affffffffffffffffffffff # [0] PUSH11(0xffffffffffffffffffffff) 
            00 # [12] STOP 
               # Data section (empty)
      #expectException:
        #">=Osaka": "ok."

    # EOFV3670_0070 (Valid) Code containing the PUSH12 opcode - Data Section 69
    # Code: PUSH12(0xffffffffffffffffffffffff) STOP
    - data: |
       :label EOFV3670_0070 :raw 0x
        EF0001 # Magic and Version ( 1 )
        010004 # Types length ( 4 )
        020001 # Total code sections ( 1 )
          000e # Code section  0 , 14  bytes
        040000 # Data section length ( 0 )
            00 # Terminator (end of header)
               # Code 0 types
            00 # 0 inputs
            80 # 0 outputs (Non-returning function)
          0001 # max stack: 1
               # Code section 0
        6bffffffffffffffffffffffff # [0] PUSH12(0xffffffffffffffffffffffff) 
            00 # [13] STOP 
               # Data section (empty)
      #expectException:
        #">=Osaka": "ok."

    # EOFV3670_0071 (Valid) Code containing the PUSH13 opcode - Data Section 70
    # Code: PUSH13(0xffffffffffffffffffffffffff) STOP
    - data: |
       :label EOFV3670_0071 :raw 0x
        EF0001 # Magic and Version ( 1 )
        010004 # Types length ( 4 )
        020001 # Total code sections ( 1 )
          000f # Code section  0 , 15  bytes
        040000 # Data section length ( 0 )
            00 # Terminator (end of header)
               # Code 0 types
            00 # 0 inputs
            80 # 0 outputs (Non-returning function)
          0001 # max stack: 1
               # Code section 0
        6cffffffffffffffffffffffffff # [0] PUSH13(0xffffffffffffffffffffffffff) 
            00 # [14] STOP 
               # Data section (empty)
      #expectException:
        #">=Osaka": "ok."

    # EOFV3670_0072 (Valid) Code containing the PUSH14 opcode - Data Section 71
    # Code: PUSH14(0xffffffffffffffffffffffffffff) STOP
    - data: |
       :label EOFV3670_0072 :raw 0x
        EF0001 # Magic and Version ( 1 )
        010004 # Types length ( 4 )
        020001 # Total code sections ( 1 )
          0010 # Code section  0 , 16  bytes
        040000 # Data section length ( 0 )
            00 # Terminator (end of header)
               # Code 0 types
            00 # 0 inputs
            80 # 0 outputs (Non-returning function)
          0001 # max stack: 1
               # Code section 0
        6dffffffffffffffffffffffffffff # [0] PUSH14(0xffffffffffffffffffffffffffff) 
            00 # [15] STOP 
               # Data section (empty)
      #expectException:
        #">=Osaka": "ok."

    # EOFV3670_0073 (Valid) Code containing the PUSH15 opcode - Data Section 72
    # Code: PUSH15(0xffffffffffffffffffffffffffffff) STOP
    - data: |
       :label EOFV3670_0073 :raw 0x
        EF0001 # Magic and Version ( 1 )
        010004 # Types length ( 4 )
        020001 # Total code sections ( 1 )
          0011 # Code section  0 , 17  bytes
        040000 # Data section length ( 0 )
            00 # Terminator (end of header)
               # Code 0 types
            00 # 0 inputs
            80 # 0 outputs (Non-returning function)
          0001 # max stack: 1
               # Code section 0
        6effffffffffffffffffffffffffffff # [0] PUSH15(0xffffffffffffffffffffffffffffff) 
            00 # [16] STOP 
               # Data section (empty)
      #expectException:
        #">=Osaka": "ok."

    # EOFV3670_0074 (Valid) Code containing the PUSH16 opcode - Data Section 73
    # Code: PUSH16(0xffffffffffffffffffffffffffffffff) STOP
    - data: |
       :label EOFV3670_0074 :raw 0x
        EF0001 # Magic and Version ( 1 )
        010004 # Types length ( 4 )
        020001 # Total code sections ( 1 )
          0012 # Code section  0 , 18  bytes
        040000 # Data section length ( 0 )
            00 # Terminator (end of header)
               # Code 0 types
            00 # 0 inputs
            80 # 0 outputs (Non-returning function)
          0001 # max stack: 1
               # Code section 0
        6fffffffffffffffffffffffffffffffff # [0] PUSH16(0xffffffffffffffffffffffffffffffff) 
            00 # [17] STOP 
               # Data section (empty)
      #expectException:
        #">=Osaka": "ok."

    # EOFV3670_0075 (Valid) Code containing the PUSH17 opcode - Data Section 74
    # Code: PUSH17(0xffffffffffffffffffffffffffffffffff) STOP
    - data: |
       :label EOFV3670_0075 :raw 0x
        EF0001 # Magic and Version ( 1 )
        010004 # Types length ( 4 )
        020001 # Total code sections ( 1 )
          0013 # Code section  0 , 19  bytes
        040000 # Data section length ( 0 )
            00 # Terminator (end of header)
               # Code 0 types
            00 # 0 inputs
            80 # 0 outputs (Non-returning function)
          0001 # max stack: 1
               # Code section 0
        70ffffffffffffffffffffffffffffffffff # [0] PUSH17(0xffffffffffffffffffffffffffffffffff) 
            00 # [18] STOP 
               # Data section (empty)
      #expectException:
        #">=Osaka": "ok."

    # EOFV3670_0076 (Valid) Code containing the PUSH18 opcode - Data Section 75
    # Code: PUSH18(0xffffffffffffffffffffffffffffffffffff) STOP
    - data: |
       :label EOFV3670_0076 :raw 0x
        EF0001 # Magic and Version ( 1 )
        010004 # Types length ( 4 )
        020001 # Total code sections ( 1 )
          0014 # Code section  0 , 20  bytes
        040000 # Data section length ( 0 )
            00 # Terminator (end of header)
               # Code 0 types
            00 # 0 inputs
            80 # 0 outputs (Non-returning function)
          0001 # max stack: 1
               # Code section 0
        71ffffffffffffffffffffffffffffffffffff # [0] PUSH18(0xffffffffffffffffffffffffffffffffffff) 
            00 # [19] STOP 
               # Data section (empty)
      #expectException:
        #">=Osaka": "ok."

    # EOFV3670_0077 (Valid) Code containing the PUSH19 opcode - Data Section 76
    # Code: PUSH19(0xffffffffffffffffffffffffffffffffffffff) STOP
    - data: |
       :label EOFV3670_0077 :raw 0x
        EF0001 # Magic and Version ( 1 )
        010004 # Types length ( 4 )
        020001 # Total code sections ( 1 )
          0015 # Code section  0 , 21  bytes
        040000 # Data section length ( 0 )
            00 # Terminator (end of header)
               # Code 0 types
            00 # 0 inputs
            80 # 0 outputs (Non-returning function)
          0001 # max stack: 1
               # Code section 0
        72ffffffffffffffffffffffffffffffffffffff # [0] PUSH19(0xffffffffffffffffffffffffffffffffffffff) 
            00 # [20] STOP 
               # Data section (empty)
      #expectException:
        #">=Osaka": "ok."

    # EOFV3670_0078 (Valid) Code containing the PUSH20 opcode - Data Section 77
    # Code: PUSH20(0xffffffffffffffffffffffffffffffffffffffff) STOP
    - data: |
       :label EOFV3670_0078 :raw 0x
        EF0001 # Magic and Version ( 1 )
        010004 # Types length ( 4 )
        020001 # Total code sections ( 1 )
          0016 # Code section  0 , 22  bytes
        040000 # Data section length ( 0 )
            00 # Terminator (end of header)
               # Code 0 types
            00 # 0 inputs
            80 # 0 outputs (Non-returning function)
          0001 # max stack: 1
               # Code section 0
        73ffffffffffffffffffffffffffffffffffffffff # [0] PUSH20(0xffffffffffffffffffffffffffffffffffffffff) 
            00 # [21] STOP 
               # Data section (empty)
      #expectException:
        #">=Osaka": "ok."

    # EOFV3670_0079 (Valid) Code containing the PUSH21 opcode - Data Section 78
    # Code: PUSH21(0xffffffffffffffffffffffffffffffffffffffffff) STOP
    - data: |
       :label EOFV3670_0079 :raw 0x
        EF0001 # Magic and Version ( 1 )
        010004 # Types length ( 4 )
        020001 # Total code sections ( 1 )
          0017 # Code section  0 , 23  bytes
        040000 # Data section length ( 0 )
            00 # Terminator (end of header)
               # Code 0 types
            00 # 0 inputs
            80 # 0 outputs (Non-returning function)
          0001 # max stack: 1
               # Code section 0
        74ffffffffffffffffffffffffffffffffffffffffff # [0] PUSH21(0xffffffffffffffffffffffffffffffffffffffffff) 
            00 # [22] STOP 
               # Data section (empty)
      #expectException:
        #">=Osaka": "ok."

    # EOFV3670_0080 (Valid) Code containing the PUSH22 opcode - Data Section 79
    # Code: PUSH22(0xffffffffffffffffffffffffffffffffffffffffffff) STOP
    - data: |
       :label EOFV3670_0080 :raw 0x
        EF0001 # Magic and Version ( 1 )
        010004 # Types length ( 4 )
        020001 # Total code sections ( 1 )
          0018 # Code section  0 , 24  bytes
        040000 # Data section length ( 0 )
            00 # Terminator (end of header)
               # Code 0 types
            00 # 0 inputs
            80 # 0 outputs (Non-returning function)
          0001 # max stack: 1
               # Code section 0
        75ffffffffffffffffffffffffffffffffffffffffffff # [0] PUSH22(0xffffffffffffffffffffffffffffffffffffffffffff) 
            00 # [23] STOP 
               # Data section (empty)
      #expectException:
        #">=Osaka": "ok."

    # EOFV3670_0081 (Valid) Code containing the PUSH23 opcode - Data Section 80
    # Code: PUSH23(0xffffffffffffffffffffffffffffffffffffffffffffff) STOP
    - data: |
       :label EOFV3670_0081 :raw 0x
        EF0001 # Magic and Version ( 1 )
        010004 # Types length ( 4 )
        020001 # Total code sections ( 1 )
          0019 # Code section  0 , 25  bytes
        040000 # Data section length ( 0 )
            00 # Terminator (end of header)
               # Code 0 types
            00 # 0 inputs
            80 # 0 outputs (Non-returning function)
          0001 # max stack: 1
               # Code section 0
        76ffffffffffffffffffffffffffffffffffffffffffffff # [0] PUSH23(0xffffffffffffffffffffffffffffffffffffffffffffff) 
            00 # [24] STOP 
               # Data section (empty)
      #expectException:
        #">=Osaka": "ok."

    # EOFV3670_0082 (Valid) Code containing the PUSH24 opcode - Data Section 81
    # Code: PUSH24(0xffffffffffffffffffffffffffffffffffffffffffffffff) STOP
    - data: |
       :label EOFV3670_0082 :raw 0x
        EF0001 # Magic and Version ( 1 )
        010004 # Types length ( 4 )
        020001 # Total code sections ( 1 )
          001a # Code section  0 , 26  bytes
        040000 # Data section length ( 0 )
            00 # Terminator (end of header)
               # Code 0 types
            00 # 0 inputs
            80 # 0 outputs (Non-returning function)
          0001 # max stack: 1
               # Code section 0
        77ffffffffffffffffffffffffffffffffffffffffffffffff # [0] PUSH24(0xffffffffffffffffffffffffffffffffffffffffffffffff) 
            00 # [25] STOP 
               # Data section (empty)
      #expectException:
        #">=Osaka": "ok."

    # EOFV3670_0083 (Valid) Code containing the PUSH25 opcode - Data Section 82
    # Code: PUSH25(0xffffffffffffffffffffffffffffffffffffffffffffffffff) STOP
    - data: |
       :label EOFV3670_0083 :raw 0x
        EF0001 # Magic and Version ( 1 )
        010004 # Types length ( 4 )
        020001 # Total code sections ( 1 )
          001b # Code section  0 , 27  bytes
        040000 # Data section length ( 0 )
            00 # Terminator (end of header)
               # Code 0 types
            00 # 0 inputs
            80 # 0 outputs (Non-returning function)
          0001 # max stack: 1
               # Code section 0
        78ffffffffffffffffffffffffffffffffffffffffffffffffff # [0] PUSH25(0xffffffffffffffffffffffffffffffffffffffffffffffffff) 
            00 # [26] STOP 
               # Data section (empty)
      #expectException:
        #">=Osaka": "ok."

    # EOFV3670_0084 (Valid) Code containing the PUSH26 opcode - Data Section 83
    # Code: PUSH26(0xffffffffffffffffffffffffffffffffffffffffffffffffffff) STOP
    - data: |
       :label EOFV3670_0084 :raw 0x
        EF0001 # Magic and Version ( 1 )
        010004 # Types length ( 4 )
        020001 # Total code sections ( 1 )
          001c # Code section  0 , 28  bytes
        040000 # Data section length ( 0 )
            00 # Terminator (end of header)
               # Code 0 types
            00 # 0 inputs
            80 # 0 outputs (Non-returning function)
          0001 # max stack: 1
               # Code section 0
        79ffffffffffffffffffffffffffffffffffffffffffffffffffff # [0] PUSH26(0xffffffffffffffffffffffffffffffffffffffffffffffffffff) 
            00 # [27] STOP 
               # Data section (empty)
      #expectException:
        #">=Osaka": "ok."

    # EOFV3670_0085 (Valid) Code containing the PUSH27 opcode - Data Section 84
    # Code: PUSH27(0xffffffffffffffffffffffffffffffffffffffffffffffffffffff) STOP
    - data: |
       :label EOFV3670_0085 :raw 0x
        EF0001 # Magic and Version ( 1 )
        010004 # Types length ( 4 )
        020001 # Total code sections ( 1 )
          001d # Code section  0 , 29  bytes
        040000 # Data section length ( 0 )
            00 # Terminator (end of header)
               # Code 0 types
            00 # 0 inputs
            80 # 0 outputs (Non-returning function)
          0001 # max stack: 1
               # Code section 0
        7affffffffffffffffffffffffffffffffffffffffffffffffffffff # [0] PUSH27(0xffffffffffffffffffffffffffffffffffffffffffffffffffffff) 
            00 # [28] STOP 
               # Data section (empty)
      #expectException:
        #">=Osaka": "ok."

    # EOFV3670_0086 (Valid) Code containing the PUSH28 opcode - Data Section 85
    # Code: PUSH28(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff) STOP
    - data: |
       :label EOFV3670_0086 :raw 0x
        EF0001 # Magic and Version ( 1 )
        010004 # Types length ( 4 )
        020001 # Total code sections ( 1 )
          001e # Code section  0 , 30  bytes
        040000 # Data section length ( 0 )
            00 # Terminator (end of header)
               # Code 0 types
            00 # 0 inputs
            80 # 0 outputs (Non-returning function)
          0001 # max stack: 1
               # Code section 0
        7bffffffffffffffffffffffffffffffffffffffffffffffffffffffff # [0] PUSH28(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff) 
            00 # [29] STOP 
               # Data section (empty)
      #expectException:
        #">=Osaka": "ok."

    # EOFV3670_0087 (Valid) Code containing the PUSH29 opcode - Data Section 86
    # Code: PUSH29(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffff) STOP
    - data: |
       :label EOFV3670_0087 :raw 0x
        EF0001 # Magic and Version ( 1 )
        010004 # Types length ( 4 )
        020001 # Total code sections ( 1 )
          001f # Code section  0 , 31  bytes
        040000 # Data section length ( 0 )
            00 # Terminator (end of header)
               # Code 0 types
            00 # 0 inputs
            80 # 0 outputs (Non-returning function)
          0001 # max stack: 1
               # Code section 0
        7cffffffffffffffffffffffffffffffffffffffffffffffffffffffffff # [0] PUSH29(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffff) 
            00 # [30] STOP 
               # Data section (empty)
      #expectException:
        #">=Osaka": "ok."

    # EOFV3670_0088 (Valid) Code containing the PUSH30 opcode - Data Section 87
    # Code: PUSH30(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff) STOP
    - data: |
       :label EOFV3670_0088 :raw 0x
        EF0001 # Magic and Version ( 1 )
        010004 # Types length ( 4 )
        020001 # Total code sections ( 1 )
          0020 # Code section  0 , 32  bytes
        040000 # Data section length ( 0 )
            00 # Terminator (end of header)
               # Code 0 types
            00 # 0 inputs
            80 # 0 outputs (Non-returning function)
          0001 # max stack: 1
               # Code section 0
        7dffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff # [0] PUSH30(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff) 
            00 # [31] STOP 
               # Data section (empty)
      #expectException:
        #">=Osaka": "ok."

    # EOFV3670_0089 (Valid) Code containing the PUSH31 opcode - Data Section 88
    # Code: PUSH31(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff) STOP
    - data: |
       :label EOFV3670_0089 :raw 0x
        EF0001 # Magic and Version ( 1 )
        010004 # Types length ( 4 )
        020001 # Total code sections ( 1 )
          0021 # Code section  0 , 33  bytes
        040000 # Data section length ( 0 )
            00 # Terminator (end of header)
               # Code 0 types
            00 # 0 inputs
            80 # 0 outputs (Non-returning function)
          0001 # max stack: 1
               # Code section 0
        7effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff # [0] PUSH31(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff) 
            00 # [32] STOP 
               # Data section (empty)
      #expectException:
        #">=Osaka": "ok."

    # EOFV3670_0090 (Valid) Code containing the PUSH32 opcode - Data Section 89
    # Code: PUSH32(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff) STOP
    - data: |
       :label EOFV3670_0090 :raw 0x
        EF0001 # Magic and Version ( 1 )
        010004 # Types length ( 4 )
        020001 # Total code sections ( 1 )
          0022 # Code section  0 , 34  bytes
        040000 # Data section length ( 0 )
            00 # Terminator (end of header)
               # Code 0 types
            00 # 0 inputs
            80 # 0 outputs (Non-returning function)
          0001 # max stack: 1
               # Code section 0
        7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff # [0] PUSH32(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff) 
            00 # [33] STOP 
               # Data section (empty)
      #expectException:
        #">=Osaka": "ok."

    # EOFV3670_0091 (Valid) Code containing the DUP1 opcode - Data Section 90
    # Code: PUSH1(1) DUP1 STOP
    - data: |
       :label EOFV3670_0091 :raw 0x
        EF0001 # Magic and Version ( 1 )
        010004 # Types length ( 4 )
        020001 # Total code sections ( 1 )
          0004 # Code section  0 , 4  bytes
        040000 # Data section length ( 0 )
            00 # Terminator (end of header)
               # Code 0 types
            00 # 0 inputs
            80 # 0 outputs (Non-returning function)
          0002 # max stack: 2
               # Code section 0
          6001 # [0] PUSH1(1) 
            80 # [2] DUP1 
            00 # [3] STOP 
               # Data section (empty)
      #expectException:
        #">=Osaka": "ok."

    # EOFV3670_0092 (Valid) Code containing the DUP2 opcode - Data Section 91
    # Code: PUSH1(1) DUP1  DUP2 STOP
    - data: |
       :label EOFV3670_0092 :raw 0x
        EF0001 # Magic and Version ( 1 )
        010004 # Types length ( 4 )
        020001 # Total code sections ( 1 )
          0005 # Code section  0 , 5  bytes
        040000 # Data section length ( 0 )
            00 # Terminator (end of header)
               # Code 0 types
            00 # 0 inputs
            80 # 0 outputs (Non-returning function)
          0003 # max stack: 3
               # Code section 0
          6001 # [0] PUSH1(1) 
            80 # [2] DUP1 
            81 # [3] DUP2 
            00 # [4] STOP 
               # Data section (empty)
      #expectException:
        #">=Osaka": "ok."

    # EOFV3670_0093 (Valid) Code containing the DUP3 opcode - Data Section 92
    # Code: PUSH1(1) DUP1 DUP1  DUP3 STOP
    - data: |
       :label EOFV3670_0093 :raw 0x
        EF0001 # Magic and Version ( 1 )
        010004 # Types length ( 4 )
        020001 # Total code sections ( 1 )
          0006 # Code section  0 , 6  bytes
        040000 # Data section length ( 0 )
            00 # Terminator (end of header)
               # Code 0 types
            00 # 0 inputs
            80 # 0 outputs (Non-returning function)
          0004 # max stack: 4
               # Code section 0
          6001 # [0] PUSH1(1) 
            80 # [2] DUP1 
            80 # [3] DUP1 
            82 # [4] DUP3 
            00 # [5] STOP 
               # Data section (empty)
      #expectException:
        #">=Osaka": "ok."

    # EOFV3670_0094 (Valid) Code containing the DUP4 opcode - Data Section 93
    # Code: PUSH1(1) DUP1 DUP1 DUP1  DUP4 STOP
    - data: |
       :label EOFV3670_0094 :raw 0x
        EF0001 # Magic and Version ( 1 )
        010004 # Types length ( 4 )
        020001 # Total code sections ( 1 )
          0007 # Code section  0 , 7  bytes
        040000 # Data section length ( 0 )
            00 # Terminator (end of header)
               # Code 0 types
            00 # 0 inputs
            80 # 0 outputs (Non-returning function)
          0005 # max stack: 5
               # Code section 0
          6001 # [0] PUSH1(1) 
            80 # [2] DUP1 
            80 # [3] DUP1 
            80 # [4] DUP1 
            83 # [5] DUP4 
            00 # [6] STOP 
               # Data section (empty)
      #expectException:
        #">=Osaka": "ok."

    # EOFV3670_0095 (Valid) Code containing the DUP5 opcode - Data Section 94
    # Code: PUSH1(1) DUP1 DUP1 DUP1 DUP1  DUP5 STOP
    - data: |
       :label EOFV3670_0095 :raw 0x
        EF0001 # Magic and Version ( 1 )
        010004 # Types length ( 4 )
        020001 # Total code sections ( 1 )
          0008 # Code section  0 , 8  bytes
        040000 # Data section length ( 0 )
            00 # Terminator (end of header)
               # Code 0 types
            00 # 0 inputs
            80 # 0 outputs (Non-returning function)
          0006 # max stack: 6
               # Code section 0
          6001 # [0] PUSH1(1) 
            80 # [2] DUP1 
            80 # [3] DUP1 
            80 # [4] DUP1 
            80 # [5] DUP1 
            84 # [6] DUP5 
            00 # [7] STOP 
               # Data section (empty)
      #expectException:
        #">=Osaka": "ok."

    # EOFV3670_0096 (Valid) Code containing the DUP6 opcode - Data Section 95
    # Code: PUSH1(1) DUP1 DUP1 DUP1 DUP1 DUP1  DUP6 STOP
    - data: |
       :label EOFV3670_0096 :raw 0x
        EF0001 # Magic and Version ( 1 )
        010004 # Types length ( 4 )
        020001 # Total code sections ( 1 )
          0009 # Code section  0 , 9  bytes
        040000 # Data section length ( 0 )
            00 # Terminator (end of header)
               # Code 0 types
            00 # 0 inputs
            80 # 0 outputs (Non-returning function)
          0007 # max stack: 7
               # Code section 0
          6001 # [0] PUSH1(1) 
            80 # [2] DUP1 
            80 # [3] DUP1 
            80 # [4] DUP1 
            80 # [5] DUP1 
            80 # [6] DUP1 
            85 # [7] DUP6 
            00 # [8] STOP 
               # Data section (empty)
      #expectException:
        #">=Osaka": "ok."

    # EOFV3670_0097 (Valid) Code containing the DUP7 opcode - Data Section 96
    # Code: PUSH1(1) DUP1 DUP1 DUP1 DUP1 DUP1 DUP1  DUP7 STOP
    - data: |
       :label EOFV3670_0097 :raw 0x
        EF0001 # Magic and Version ( 1 )
        010004 # Types length ( 4 )
        020001 # Total code sections ( 1 )
          000a # Code section  0 , 10  bytes
        040000 # Data section length ( 0 )
            00 # Terminator (end of header)
               # Code 0 types
            00 # 0 inputs
            80 # 0 outputs (Non-returning function)
          0008 # max stack: 8
               # Code section 0
          6001 # [0] PUSH1(1) 
            80 # [2] DUP1 
            80 # [3] DUP1 
            80 # [4] DUP1 
            80 # [5] DUP1 
            80 # [6] DUP1 
            80 # [7] DUP1 
            86 # [8] DUP7 
            00 # [9] STOP 
               # Data section (empty)
      #expectException:
        #">=Osaka": "ok."

    # EOFV3670_0098 (Valid) Code containing the DUP8 opcode - Data Section 97
    # Code: PUSH1(1) DUP1 DUP1 DUP1 DUP1 DUP1 DUP1 DUP1  DUP8 STOP
    - data: |
       :label EOFV3670_0098 :raw 0x
        EF0001 # Magic and Version ( 1 )
        010004 # Types length ( 4 )
        020001 # Total code sections ( 1 )
          000b # Code section  0 , 11  bytes
        040000 # Data section length ( 0 )
            00 # Terminator (end of header)
               # Code 0 types
            00 # 0 inputs
            80 # 0 outputs (Non-returning function)
          0009 # max stack: 9
               # Code section 0
          6001 # [0] PUSH1(1) 
            80 # [2] DUP1 
            80 # [3] DUP1 
            80 # [4] DUP1 
            80 # [5] DUP1 
            80 # [6] DUP1 
            80 # [7] DUP1 
            80 # [8] DUP1 
            87 # [9] DUP8 
            00 # [10] STOP 
               # Data section (empty)
      #expectException:
        #">=Osaka": "ok."

    # EOFV3670_0099 (Valid) Code containing the DUP9 opcode - Data Section 98
    # Code: PUSH1(1) DUP1 DUP1 DUP1 DUP1 DUP1 DUP1 DUP1 DUP1  DUP9 STOP
    - data: |
       :label EOFV3670_0099 :raw 0x
        EF0001 # Magic and Version ( 1 )
        010004 # Types length ( 4 )
        020001 # Total code sections ( 1 )
          000c # Code section  0 , 12  bytes
        040000 # Data section length ( 0 )
            00 # Terminator (end of header)
               # Code 0 types
            00 # 0 inputs
            80 # 0 outputs (Non-returning function)
          000a # max stack: 10
               # Code section 0
          6001 # [0] PUSH1(1) 
            80 # [2] DUP1 
            80 # [3] DUP1 
            80 # [4] DUP1 
            80 # [5] DUP1 
            80 # [6] DUP1 
            80 # [7] DUP1 
            80 # [8] DUP1 
            80 # [9] DUP1 
            88 # [10] DUP9 
            00 # [11] STOP 
               # Data section (empty)
      #expectException:
        #">=Osaka": "ok."

    # EOFV3670_0100 (Valid) Code containing the DUP10 opcode - Data Section 99
    # Code: PUSH1(1) DUP1 DUP1 DUP1 DUP1 DUP1 DUP1 DUP1 DUP1 DUP1  DUP10 STOP
    - data: |
       :label EOFV3670_0100 :raw 0x
        EF0001 # Magic and Version ( 1 )
        010004 # Types length ( 4 )
        020001 # Total code sections ( 1 )
          000d # Code section  0 , 13  bytes
        040000 # Data section length ( 0 )
            00 # Terminator (end of header)
               # Code 0 types
            00 # 0 inputs
            80 # 0 outputs (Non-returning function)
          000b # max stack: 11
               # Code section 0
          6001 # [0] PUSH1(1) 
            80 # [2] DUP1 
            80 # [3] DUP1 
            80 # [4] DUP1 
            80 # [5] DUP1 
            80 # [6] DUP1 
            80 # [7] DUP1 
            80 # [8] DUP1 
            80 # [9] DUP1 
            80 # [10] DUP1 
            89 # [11] DUP10 
            00 # [12] STOP 
               # Data section (empty)
      #expectException:
        #">=Osaka": "ok."

    # EOFV3670_0101 (Valid) Code containing the DUP11 opcode - Data Section 100
    # Code: PUSH1(1) DUP1 DUP1 DUP1 DUP1 DUP1 DUP1 DUP1 DUP1 DUP1 DUP1  DUP11 STOP
    - data: |
       :label EOFV3670_0101 :raw 0x
        EF0001 # Magic and Version ( 1 )
        010004 # Types length ( 4 )
        020001 # Total code sections ( 1 )
          000e # Code section  0 , 14  bytes
        040000 # Data section length ( 0 )
            00 # Terminator (end of header)
               # Code 0 types
            00 # 0 inputs
            80 # 0 outputs (Non-returning function)
          000c # max stack: 12
               # Code section 0
          6001 # [0] PUSH1(1) 
            80 # [2] DUP1 
            80 # [3] DUP1 
            80 # [4] DUP1 
            80 # [5] DUP1 
            80 # [6] DUP1 
            80 # [7] DUP1 
            80 # [8] DUP1 
            80 # [9] DUP1 
            80 # [10] DUP1 
            80 # [11] DUP1 
            8a # [12] DUP11 
            00 # [13] STOP 
               # Data section (empty)
      #expectException:
        #">=Osaka": "ok."

    # EOFV3670_0102 (Valid) Code containing the DUP12 opcode - Data Section 101
    # Code: PUSH1(1) DUP1 DUP1 DUP1 DUP1 DUP1 DUP1 DUP1 DUP1 DUP1 DUP1 DUP1  DUP12 STOP
    - data: |
       :label EOFV3670_0102 :raw 0x
        EF0001 # Magic and Version ( 1 )
        010004 # Types length ( 4 )
        020001 # Total code sections ( 1 )
          000f # Code section  0 , 15  bytes
        040000 # Data section length ( 0 )
            00 # Terminator (end of header)
               # Code 0 types
            00 # 0 inputs
            80 # 0 outputs (Non-returning function)
          000d # max stack: 13
               # Code section 0
          6001 # [0] PUSH1(1) 
            80 # [2] DUP1 
            80 # [3] DUP1 
            80 # [4] DUP1 
            80 # [5] DUP1 
            80 # [6] DUP1 
            80 # [7] DUP1 
            80 # [8] DUP1 
            80 # [9] DUP1 
            80 # [10] DUP1 
            80 # [11] DUP1 
            80 # [12] DUP1 
            8b # [13] DUP12 
            00 # [14] STOP 
               # Data section (empty)
      #expectException:
        #">=Osaka": "ok."

    # EOFV3670_0103 (Valid) Code containing the DUP13 opcode - Data Section 102
    # Code: PUSH1(1) DUP1 DUP1 DUP1 DUP1 DUP1 DUP1 DUP1 DUP1 DUP1 DUP1 DUP1 DUP1  DUP13 STOP
    - data: |
       :label EOFV3670_0103 :raw 0x
        EF0001 # Magic and Version ( 1 )
        010004 # Types length ( 4 )
        020001 # Total code sections ( 1 )
          0010 # Code section  0 , 16  bytes
        040000 # Data section length ( 0 )
            00 # Terminator (end of header)
               # Code 0 types
            00 # 0 inputs
            80 # 0 outputs (Non-returning function)
          000e # max stack: 14
               # Code section 0
          6001 # [0] PUSH1(1) 
            80 # [2] DUP1 
            80 # [3] DUP1 
            80 # [4] DUP1 
            80 # [5] DUP1 
            80 # [6] DUP1 
            80 # [7] DUP1 
            80 # [8] DUP1 
            80 # [9] DUP1 
            80 # [10] DUP1 
            80 # [11] DUP1 
            80 # [12] DUP1 
            80 # [13] DUP1 
            8c # [14] DUP13 
            00 # [15] STOP 
               # Data section (empty)
      #expectException:
        #">=Osaka": "ok."

    # EOFV3670_0104 (Valid) Code containing the DUP14 opcode - Data Section 103
    # Code: PUSH1(1) DUP1 DUP1 DUP1 DUP1 DUP1 DUP1 DUP1 DUP1 DUP1 DUP1 DUP1 DUP1 DUP1  DUP14 STOP
    - data: |
       :label EOFV3670_0104 :raw 0x
        EF0001 # Magic and Version ( 1 )
        010004 # Types length ( 4 )
        020001 # Total code sections ( 1 )
          0011 # Code section  0 , 17  bytes
        040000 # Data section length ( 0 )
            00 # Terminator (end of header)
               # Code 0 types
            00 # 0 inputs
            80 # 0 outputs (Non-returning function)
          000f # max stack: 15
               # Code section 0
          6001 # [0] PUSH1(1) 
            80 # [2] DUP1 
            80 # [3] DUP1 
            80 # [4] DUP1 
            80 # [5] DUP1 
            80 # [6] DUP1 
            80 # [7] DUP1 
            80 # [8] DUP1 
            80 # [9] DUP1 
            80 # [10] DUP1 
            80 # [11] DUP1 
            80 # [12] DUP1 
            80 # [13] DUP1 
            80 # [14] DUP1 
            8d # [15] DUP14 
            00 # [16] STOP 
               # Data section (empty)
      #expectException:
        #">=Osaka": "ok."

    # EOFV3670_0105 (Valid) Code containing the DUP15 opcode - Data Section 104
    # Code: PUSH1(1) DUP1 DUP1 DUP1 DUP1 DUP1 DUP1 DUP1 DUP1 DUP1 DUP1 DUP1 DUP1 DUP1 DUP1  DUP15 STOP
    - data: |
       :label EOFV3670_0105 :raw 0x
        EF0001 # Magic and Version ( 1 )
        010004 # Types length ( 4 )
        020001 # Total code sections ( 1 )
          0012 # Code section  0 , 18  bytes
        040000 # Data section length ( 0 )
            00 # Terminator (end of header)
               # Code 0 types
            00 # 0 inputs
            80 # 0 outputs (Non-returning function)
          0010 # max stack: 16
               # Code section 0
          6001 # [0] PUSH1(1) 
            80 # [2] DUP1 
            80 # [3] DUP1 
            80 # [4] DUP1 
            80 # [5] DUP1 
            80 # [6] DUP1 
            80 # [7] DUP1 
            80 # [8] DUP1 
            80 # [9] DUP1 
            80 # [10] DUP1 
            80 # [11] DUP1 
            80 # [12] DUP1 
            80 # [13] DUP1 
            80 # [14] DUP1 
            80 # [15] DUP1 
            8e # [16] DUP15 
            00 # [17] STOP 
               # Data section (empty)
      #expectException:
        #">=Osaka": "ok."

    # EOFV3670_0106 (Valid) Code containing the DUP16 opcode - Data Section 105
    # Code: PUSH1(1) DUP1 DUP1 DUP1 DUP1 DUP1 DUP1 DUP1 DUP1 DUP1 DUP1 DUP1 DUP1 DUP1 DUP1 DUP1  DUP16 STOP
    - data: |
       :label EOFV3670_0106 :raw 0x
        EF0001 # Magic and Version ( 1 )
        010004 # Types length ( 4 )
        020001 # Total code sections ( 1 )
          0013 # Code section  0 , 19  bytes
        040000 # Data section length ( 0 )
            00 # Terminator (end of header)
               # Code 0 types
            00 # 0 inputs
            80 # 0 outputs (Non-returning function)
          0011 # max stack: 17
               # Code section 0
          6001 # [0] PUSH1(1) 
            80 # [2] DUP1 
            80 # [3] DUP1 
            80 # [4] DUP1 
            80 # [5] DUP1 
            80 # [6] DUP1 
            80 # [7] DUP1 
            80 # [8] DUP1 
            80 # [9] DUP1 
            80 # [10] DUP1 
            80 # [11] DUP1 
            80 # [12] DUP1 
            80 # [13] DUP1 
            80 # [14] DUP1 
            80 # [15] DUP1 
            80 # [16] DUP1 
            8f # [17] DUP16 
            00 # [18] STOP 
               # Data section (empty)
      #expectException:
        #">=Osaka": "ok."

    # EOFV3670_0107 (Valid) Code containing the SWAP1 opcode - Data Section 106
    # Code: PUSH1(1) DUP1  SWAP1 STOP
    - data: |
       :label EOFV3670_0107 :raw 0x
        EF0001 # Magic and Version ( 1 )
        010004 # Types length ( 4 )
        020001 # Total code sections ( 1 )
          0005 # Code section  0 , 5  bytes
        040000 # Data section length ( 0 )
            00 # Terminator (end of header)
               # Code 0 types
            00 # 0 inputs
            80 # 0 outputs (Non-returning function)
          0002 # max stack: 2
               # Code section 0
          6001 # [0] PUSH1(1) 
            80 # [2] DUP1 
            90 # [3] SWAP1 
            00 # [4] STOP 
               # Data section (empty)
      #expectException:
        #">=Osaka": "ok."

    # EOFV3670_0108 (Valid) Code containing the SWAP2 opcode - Data Section 107
    # Code: PUSH1(1) DUP1 DUP1  SWAP2 STOP
    - data: |
       :label EOFV3670_0108 :raw 0x
        EF0001 # Magic and Version ( 1 )
        010004 # Types length ( 4 )
        020001 # Total code sections ( 1 )
          0006 # Code section  0 , 6  bytes
        040000 # Data section length ( 0 )
            00 # Terminator (end of header)
               # Code 0 types
            00 # 0 inputs
            80 # 0 outputs (Non-returning function)
          0003 # max stack: 3
               # Code section 0
          6001 # [0] PUSH1(1) 
            80 # [2] DUP1 
            80 # [3] DUP1 
            91 # [4] SWAP2 
            00 # [5] STOP 
               # Data section (empty)
      #expectException:
        #">=Osaka": "ok."

    # EOFV3670_0109 (Valid) Code containing the SWAP3 opcode - Data Section 108
    # Code: PUSH1(1) DUP1 DUP1 DUP1  SWAP3 STOP
    - data: |
       :label EOFV3670_0109 :raw 0x
        EF0001 # Magic and Version ( 1 )
        010004 # Types length ( 4 )
        020001 # Total code sections ( 1 )
          0007 # Code section  0 , 7  bytes
        040000 # Data section length ( 0 )
            00 # Terminator (end of header)
               # Code 0 types
            00 # 0 inputs
            80 # 0 outputs (Non-returning function)
          0004 # max stack: 4
               # Code section 0
          6001 # [0] PUSH1(1) 
            80 # [2] DUP1 
            80 # [3] DUP1 
            80 # [4] DUP1 
            92 # [5] SWAP3 
            00 # [6] STOP 
               # Data section (empty)
      #expectException:
        #">=Osaka": "ok."

    # EOFV3670_0110 (Valid) Code containing the SWAP4 opcode - Data Section 109
    # Code: PUSH1(1) DUP1 DUP1 DUP1 DUP1  SWAP4 STOP
    - data: |
       :label EOFV3670_0110 :raw 0x
        EF0001 # Magic and Version ( 1 )
        010004 # Types length ( 4 )
        020001 # Total code sections ( 1 )
          0008 # Code section  0 , 8  bytes
        040000 # Data section length ( 0 )
            00 # Terminator (end of header)
               # Code 0 types
            00 # 0 inputs
            80 # 0 outputs (Non-returning function)
          0005 # max stack: 5
               # Code section 0
          6001 # [0] PUSH1(1) 
            80 # [2] DUP1 
            80 # [3] DUP1 
            80 # [4] DUP1 
            80 # [5] DUP1 
            93 # [6] SWAP4 
            00 # [7] STOP 
               # Data section (empty)
      #expectException:
        #">=Osaka": "ok."

    # EOFV3670_0111 (Valid) Code containing the SWAP5 opcode - Data Section 110
    # Code: PUSH1(1) DUP1 DUP1 DUP1 DUP1 DUP1  SWAP5 STOP
    - data: |
       :label EOFV3670_0111 :raw 0x
        EF0001 # Magic and Version ( 1 )
        010004 # Types length ( 4 )
        020001 # Total code sections ( 1 )
          0009 # Code section  0 , 9  bytes
        040000 # Data section length ( 0 )
            00 # Terminator (end of header)
               # Code 0 types
            00 # 0 inputs
            80 # 0 outputs (Non-returning function)
          0006 # max stack: 6
               # Code section 0
          6001 # [0] PUSH1(1) 
            80 # [2] DUP1 
            80 # [3] DUP1 
            80 # [4] DUP1 
            80 # [5] DUP1 
            80 # [6] DUP1 
            94 # [7] SWAP5 
            00 # [8] STOP 
               # Data section (empty)
      #expectException:
        #">=Osaka": "ok."

    # EOFV3670_0112 (Valid) Code containing the SWAP6 opcode - Data Section 111
    # Code: PUSH1(1) DUP1 DUP1 DUP1 DUP1 DUP1 DUP1  SWAP6 STOP
    - data: |
       :label EOFV3670_0112 :raw 0x
        EF0001 # Magic and Version ( 1 )
        010004 # Types length ( 4 )
        020001 # Total code sections ( 1 )
          000a # Code section  0 , 10  bytes
        040000 # Data section length ( 0 )
            00 # Terminator (end of header)
               # Code 0 types
            00 # 0 inputs
            80 # 0 outputs (Non-returning function)
          0007 # max stack: 7
               # Code section 0
          6001 # [0] PUSH1(1) 
            80 # [2] DUP1 
            80 # [3] DUP1 
            80 # [4] DUP1 
            80 # [5] DUP1 
            80 # [6] DUP1 
            80 # [7] DUP1 
            95 # [8] SWAP6 
            00 # [9] STOP 
               # Data section (empty)
      #expectException:
        #">=Osaka": "ok."

    # EOFV3670_0113 (Valid) Code containing the SWAP7 opcode - Data Section 112
    # Code: PUSH1(1) DUP1 DUP1 DUP1 DUP1 DUP1 DUP1 DUP1  SWAP7 STOP
    - data: |
       :label EOFV3670_0113 :raw 0x
        EF0001 # Magic and Version ( 1 )
        010004 # Types length ( 4 )
        020001 # Total code sections ( 1 )
          000b # Code section  0 , 11  bytes
        040000 # Data section length ( 0 )
            00 # Terminator (end of header)
               # Code 0 types
            00 # 0 inputs
            80 # 0 outputs (Non-returning function)
          0008 # max stack: 8
               # Code section 0
          6001 # [0] PUSH1(1) 
            80 # [2] DUP1 
            80 # [3] DUP1 
            80 # [4] DUP1 
            80 # [5] DUP1 
            80 # [6] DUP1 
            80 # [7] DUP1 
            80 # [8] DUP1 
            96 # [9] SWAP7 
            00 # [10] STOP 
               # Data section (empty)
      #expectException:
        #">=Osaka": "ok."

    # EOFV3670_0114 (Valid) Code containing the SWAP8 opcode - Data Section 113
    # Code: PUSH1(1) DUP1 DUP1 DUP1 DUP1 DUP1 DUP1 DUP1 DUP1  SWAP8 STOP
    - data: |
       :label EOFV3670_0114 :raw 0x
        EF0001 # Magic and Version ( 1 )
        010004 # Types length ( 4 )
        020001 # Total code sections ( 1 )
          000c # Code section  0 , 12  bytes
        040000 # Data section length ( 0 )
            00 # Terminator (end of header)
               # Code 0 types
            00 # 0 inputs
            80 # 0 outputs (Non-returning function)
          0009 # max stack: 9
               # Code section 0
          6001 # [0] PUSH1(1) 
            80 # [2] DUP1 
            80 # [3] DUP1 
            80 # [4] DUP1 
            80 # [5] DUP1 
            80 # [6] DUP1 
            80 # [7] DUP1 
            80 # [8] DUP1 
            80 # [9] DUP1 
            97 # [10] SWAP8 
            00 # [11] STOP 
               # Data section (empty)
      #expectException:
        #">=Osaka": "ok."

    # EOFV3670_0115 (Valid) Code containing the SWAP9 opcode - Data Section 114
    # Code: PUSH1(1) DUP1 DUP1 DUP1 DUP1 DUP1 DUP1 DUP1 DUP1 DUP1  SWAP9 STOP
    - data: |
       :label EOFV3670_0115 :raw 0x
        EF0001 # Magic and Version ( 1 )
        010004 # Types length ( 4 )
        020001 # Total code sections ( 1 )
          000d # Code section  0 , 13  bytes
        040000 # Data section length ( 0 )
            00 # Terminator (end of header)
               # Code 0 types
            00 # 0 inputs
            80 # 0 outputs (Non-returning function)
          000a # max stack: 10
               # Code section 0
          6001 # [0] PUSH1(1) 
            80 # [2] DUP1 
            80 # [3] DUP1 
            80 # [4] DUP1 
            80 # [5] DUP1 
            80 # [6] DUP1 
            80 # [7] DUP1 
            80 # [8] DUP1 
            80 # [9] DUP1 
            80 # [10] DUP1 
            98 # [11] SWAP9 
            00 # [12] STOP 
               # Data section (empty)
      #expectException:
        #">=Osaka": "ok."

    # EOFV3670_0116 (Valid) Code containing the SWAP10 opcode - Data Section 115
    # Code: PUSH1(1) DUP1 DUP1 DUP1 DUP1 DUP1 DUP1 DUP1 DUP1 DUP1 DUP1  SWAP10 STOP
    - data: |
       :label EOFV3670_0116 :raw 0x
        EF0001 # Magic and Version ( 1 )
        010004 # Types length ( 4 )
        020001 # Total code sections ( 1 )
          000e # Code section  0 , 14  bytes
        040000 # Data section length ( 0 )
            00 # Terminator (end of header)
               # Code 0 types
            00 # 0 inputs
            80 # 0 outputs (Non-returning function)
          000b # max stack: 11
               # Code section 0
          6001 # [0] PUSH1(1) 
            80 # [2] DUP1 
            80 # [3] DUP1 
            80 # [4] DUP1 
            80 # [5] DUP1 
            80 # [6] DUP1 
            80 # [7] DUP1 
            80 # [8] DUP1 
            80 # [9] DUP1 
            80 # [10] DUP1 
            80 # [11] DUP1 
            99 # [12] SWAP10 
            00 # [13] STOP 
               # Data section (empty)
      #expectException:
        #">=Osaka": "ok."

    # EOFV3670_0117 (Valid) Code containing the SWAP11 opcode - Data Section 116
    # Code: PUSH1(1) DUP1 DUP1 DUP1 DUP1 DUP1 DUP1 DUP1 DUP1 DUP1 DUP1 DUP1  SWAP11 STOP
    - data: |
       :label EOFV3670_0117 :raw 0x
        EF0001 # Magic and Version ( 1 )
        010004 # Types length ( 4 )
        020001 # Total code sections ( 1 )
          000f # Code section  0 , 15  bytes
        040000 # Data section length ( 0 )
            00 # Terminator (end of header)
               # Code 0 types
            00 # 0 inputs
            80 # 0 outputs (Non-returning function)
          000c # max stack: 12
               # Code section 0
          6001 # [0] PUSH1(1) 
            80 # [2] DUP1 
            80 # [3] DUP1 
            80 # [4] DUP1 
            80 # [5] DUP1 
            80 # [6] DUP1 
            80 # [7] DUP1 
            80 # [8] DUP1 
            80 # [9] DUP1 
            80 # [10] DUP1 
            80 # [11] DUP1 
            80 # [12] DUP1 
            9a # [13] SWAP11 
            00 # [14] STOP 
               # Data section (empty)
      #expectException:
        #">=Osaka": "ok."

    # EOFV3670_0118 (Valid) Code containing the SWAP12 opcode - Data Section 117
    # Code: PUSH1(1) DUP1 DUP1 DUP1 DUP1 DUP1 DUP1 DUP1 DUP1 DUP1 DUP1 DUP1 DUP1  SWAP12 STOP
    - data: |
       :label EOFV3670_0118 :raw 0x
        EF0001 # Magic and Version ( 1 )
        010004 # Types length ( 4 )
        020001 # Total code sections ( 1 )
          0010 # Code section  0 , 16  bytes
        040000 # Data section length ( 0 )
            00 # Terminator (end of header)
               # Code 0 types
            00 # 0 inputs
            80 # 0 outputs (Non-returning function)
          000d # max stack: 13
               # Code section 0
          6001 # [0] PUSH1(1) 
            80 # [2] DUP1 
            80 # [3] DUP1 
            80 # [4] DUP1 
            80 # [5] DUP1 
            80 # [6] DUP1 
            80 # [7] DUP1 
            80 # [8] DUP1 
            80 # [9] DUP1 
            80 # [10] DUP1 
            80 # [11] DUP1 
            80 # [12] DUP1 
            80 # [13] DUP1 
            9b # [14] SWAP12 
            00 # [15] STOP 
               # Data section (empty)
      #expectException:
        #">=Osaka": "ok."

    # EOFV3670_0119 (Valid) Code containing the SWAP13 opcode - Data Section 118
    # Code: PUSH1(1) DUP1 DUP1 DUP1 DUP1 DUP1 DUP1 DUP1 DUP1 DUP1 DUP1 DUP1 DUP1 DUP1  SWAP13 STOP
    - data: |
       :label EOFV3670_0119 :raw 0x
        EF0001 # Magic and Version ( 1 )
        010004 # Types length ( 4 )
        020001 # Total code sections ( 1 )
          0011 # Code section  0 , 17  bytes
        040000 # Data section length ( 0 )
            00 # Terminator (end of header)
               # Code 0 types
            00 # 0 inputs
            80 # 0 outputs (Non-returning function)
          000e # max stack: 14
               # Code section 0
          6001 # [0] PUSH1(1) 
            80 # [2] DUP1 
            80 # [3] DUP1 
            80 # [4] DUP1 
            80 # [5] DUP1 
            80 # [6] DUP1 
            80 # [7] DUP1 
            80 # [8] DUP1 
            80 # [9] DUP1 
            80 # [10] DUP1 
            80 # [11] DUP1 
            80 # [12] DUP1 
            80 # [13] DUP1 
            80 # [14] DUP1 
            9c # [15] SWAP13 
            00 # [16] STOP 
               # Data section (empty)
      #expectException:
        #">=Osaka": "ok."

    # EOFV3670_0120 (Valid) Code containing the SWAP14 opcode - Data Section 119
    # Code: PUSH1(1) DUP1 DUP1 DUP1 DUP1 DUP1 DUP1 DUP1 DUP1 DUP1 DUP1 DUP1 DUP1 DUP1 DUP1  SWAP14 STOP
    - data: |
       :label EOFV3670_0120 :raw 0x
        EF0001 # Magic and Version ( 1 )
        010004 # Types length ( 4 )
        020001 # Total code sections ( 1 )
          0012 # Code section  0 , 18  bytes
        040000 # Data section length ( 0 )
            00 # Terminator (end of header)
               # Code 0 types
            00 # 0 inputs
            80 # 0 outputs (Non-returning function)
          000f # max stack: 15
               # Code section 0
          6001 # [0] PUSH1(1) 
            80 # [2] DUP1 
            80 # [3] DUP1 
            80 # [4] DUP1 
            80 # [5] DUP1 
            80 # [6] DUP1 
            80 # [7] DUP1 
            80 # [8] DUP1 
            80 # [9] DUP1 
            80 # [10] DUP1 
            80 # [11] DUP1 
            80 # [12] DUP1 
            80 # [13] DUP1 
            80 # [14] DUP1 
            80 # [15] DUP1 
            9d # [16] SWAP14 
            00 # [17] STOP 
               # Data section (empty)
      #expectException:
        #">=Osaka": "ok."

    # EOFV3670_0121 (Valid) Code containing the SWAP15 opcode - Data Section 120
    # Code: PUSH1(1) DUP1 DUP1 DUP1 DUP1 DUP1 DUP1 DUP1 DUP1 DUP1 DUP1 DUP1 DUP1 DUP1 DUP1 DUP1  SWAP15 STOP
    - data: |
       :label EOFV3670_0121 :raw 0x
        EF0001 # Magic and Version ( 1 )
        010004 # Types length ( 4 )
        020001 # Total code sections ( 1 )
          0013 # Code section  0 , 19  bytes
        040000 # Data section length ( 0 )
            00 # Terminator (end of header)
               # Code 0 types
            00 # 0 inputs
            80 # 0 outputs (Non-returning function)
          0010 # max stack: 16
               # Code section 0
          6001 # [0] PUSH1(1) 
            80 # [2] DUP1 
            80 # [3] DUP1 
            80 # [4] DUP1 
            80 # [5] DUP1 
            80 # [6] DUP1 
            80 # [7] DUP1 
            80 # [8] DUP1 
            80 # [9] DUP1 
            80 # [10] DUP1 
            80 # [11] DUP1 
            80 # [12] DUP1 
            80 # [13] DUP1 
            80 # [14] DUP1 
            80 # [15] DUP1 
            80 # [16] DUP1 
            9e # [17] SWAP15 
            00 # [18] STOP 
               # Data section (empty)
      #expectException:
        #">=Osaka": "ok."

    # EOFV3670_0122 (Valid) Code containing the SWAP16 opcode - Data Section 121
    # Code: PUSH1(1) DUP1 DUP1 DUP1 DUP1 DUP1 DUP1 DUP1 DUP1 DUP1 DUP1 DUP1 DUP1 DUP1 DUP1 DUP1 DUP1  SWAP16 STOP
    - data: |
       :label EOFV3670_0122 :raw 0x
        EF0001 # Magic and Version ( 1 )
        010004 # Types length ( 4 )
        020001 # Total code sections ( 1 )
          0014 # Code section  0 , 20  bytes
        040000 # Data section length ( 0 )
            00 # Terminator (end of header)
               # Code 0 types
            00 # 0 inputs
            80 # 0 outputs (Non-returning function)
          0011 # max stack: 17
               # Code section 0
          6001 # [0] PUSH1(1) 
            80 # [2] DUP1 
            80 # [3] DUP1 
            80 # [4] DUP1 
            80 # [5] DUP1 
            80 # [6] DUP1 
            80 # [7] DUP1 
            80 # [8] DUP1 
            80 # [9] DUP1 
            80 # [10] DUP1 
            80 # [11] DUP1 
            80 # [12] DUP1 
            80 # [13] DUP1 
            80 # [14] DUP1 
            80 # [15] DUP1 
            80 # [16] DUP1 
            80 # [17] DUP1 
            9f # [18] SWAP16 
            00 # [19] STOP 
               # Data section (empty)
      #expectException:
        #">=Osaka": "ok."

    # EOFV3670_0123 (Valid) Code containing the LOG0 opcode - Data Section 122
    # Code: PUSH1(1) DUP1  LOG0 STOP
    - data: |
       :label EOFV3670_0123 :raw 0x
        EF0001 # Magic and Version ( 1 )
        010004 # Types length ( 4 )
        020001 # Total code sections ( 1 )
          0005 # Code section  0 , 5  bytes
        040000 # Data section length ( 0 )
            00 # Terminator (end of header)
               # Code 0 types
            00 # 0 inputs
            80 # 0 outputs (Non-returning function)
          0002 # max stack: 2
               # Code section 0
          6001 # [0] PUSH1(1) 
            80 # [2] DUP1 
            a0 # [3] LOG0 
            00 # [4] STOP 
               # Data section (empty)
      #expectException:
        #">=Osaka": "ok."

    # EOFV3670_0124 (Valid) Code containing the LOG1 opcode - Data Section 123
    # Code: PUSH1(1) DUP1 DUP1  LOG1 STOP
    - data: |
       :label EOFV3670_0124 :raw 0x
        EF0001 # Magic and Version ( 1 )
        010004 # Types length ( 4 )
        020001 # Total code sections ( 1 )
          0006 # Code section  0 , 6  bytes
        040000 # Data section length ( 0 )
            00 # Terminator (end of header)
               # Code 0 types
            00 # 0 inputs
            80 # 0 outputs (Non-returning function)
          0003 # max stack: 3
               # Code section 0
          6001 # [0] PUSH1(1) 
            80 # [2] DUP1 
            80 # [3] DUP1 
            a1 # [4] LOG1 
            00 # [5] STOP 
               # Data section (empty)
      #expectException:
        #">=Osaka": "ok."

    # EOFV3670_0125 (Valid) Code containing the LOG2 opcode - Data Section 124
    # Code: PUSH1(1) DUP1 DUP1 DUP1  LOG2 STOP
    - data: |
       :label EOFV3670_0125 :raw 0x
        EF0001 # Magic and Version ( 1 )
        010004 # Types length ( 4 )
        020001 # Total code sections ( 1 )
          0007 # Code section  0 , 7  bytes
        040000 # Data section length ( 0 )
            00 # Terminator (end of header)
               # Code 0 types
            00 # 0 inputs
            80 # 0 outputs (Non-returning function)
          0004 # max stack: 4
               # Code section 0
          6001 # [0] PUSH1(1) 
            80 # [2] DUP1 
            80 # [3] DUP1 
            80 # [4] DUP1 
            a2 # [5] LOG2 
            00 # [6] STOP 
               # Data section (empty)
      #expectException:
        #">=Osaka": "ok."

    # EOFV3670_0126 (Valid) Code containing the LOG3 opcode - Data Section 125
    # Code: PUSH1(1) DUP1 DUP1 DUP1 DUP1  LOG3 STOP
    - data: |
       :label EOFV3670_0126 :raw 0x
        EF0001 # Magic and Version ( 1 )
        010004 # Types length ( 4 )
        020001 # Total code sections ( 1 )
          0008 # Code section  0 , 8  bytes
        040000 # Data section length ( 0 )
            00 # Terminator (end of header)
               # Code 0 types
            00 # 0 inputs
            80 # 0 outputs (Non-returning function)
          0005 # max stack: 5
               # Code section 0
          6001 # [0] PUSH1(1) 
            80 # [2] DUP1 
            80 # [3] DUP1 
            80 # [4] DUP1 
            80 # [5] DUP1 
            a3 # [6] LOG3 
            00 # [7] STOP 
               # Data section (empty)
      #expectException:
        #">=Osaka": "ok."

    # EOFV3670_0127 (Valid) Code containing the LOG4 opcode - Data Section 126
    # Code: PUSH1(1) DUP1 DUP1 DUP1 DUP1 DUP1  LOG4 STOP
    - data: |
       :label EOFV3670_0127 :raw 0x
        EF0001 # Magic and Version ( 1 )
        010004 # Types length ( 4 )
        020001 # Total code sections ( 1 )
          0009 # Code section  0 , 9  bytes
        040000 # Data section length ( 0 )
            00 # Terminator (end of header)
               # Code 0 types
            00 # 0 inputs
            80 # 0 outputs (Non-returning function)
          0006 # max stack: 6
               # Code section 0
          6001 # [0] PUSH1(1) 
            80 # [2] DUP1 
            80 # [3] DUP1 
            80 # [4] DUP1 
            80 # [5] DUP1 
            80 # [6] DUP1 
            a4 # [7] LOG4 
            00 # [8] STOP 
               # Data section (empty)
      #expectException:
        #">=Osaka": "ok."

    # EOFV3670_0128 (Valid) Code containing the RETURN opcode - Data Section 127
    # Code: PUSH1(1) DUP1  RETURN
    - data: |
       :label EOFV3670_0128 :raw 0x
        EF0001 # Magic and Version ( 1 )
        010004 # Types length ( 4 )
        020001 # Total code sections ( 1 )
          0004 # Code section  0 , 4  bytes
        040000 # Data section length ( 0 )
            00 # Terminator (end of header)
               # Code 0 types
            00 # 0 inputs
            80 # 0 outputs (Non-returning function)
          0002 # max stack: 2
               # Code section 0
          6001 # [0] PUSH1(1) 
            80 # [2] DUP1 
            f3 # [3] RETURN 
               # Data section (empty)
      #expectException:
        #">=Osaka": "ok."

    # EOFV3670_0129 (Valid) Code containing the EXTCALL opcode - Data Section 128
    # Code: PUSH1(1) DUP1 DUP1 DUP1  EXTCALL STOP
    - data: |
       :label EOFV3670_0129 :raw 0x
        EF0001 # Magic and Version ( 1 )
        010004 # Types length ( 4 )
        020001 # Total code sections ( 1 )
          0007 # Code section  0 , 7  bytes
        040000 # Data section length ( 0 )
            00 # Terminator (end of header)
               # Code 0 types
            00 # 0 inputs
            80 # 0 outputs (Non-returning function)
          0004 # max stack: 4
               # Code section 0
          6001 # [0] PUSH1(1) 
            80 # [2] DUP1 
            80 # [3] DUP1 
            80 # [4] DUP1 
            f8 # [5] EXTCALL 
            00 # [6] STOP 
               # Data section (empty)
      #expectException:
        #">=Osaka": "ok."

    # EOFV3670_0130 (Valid) Code containing the EXTDELEGATECALL opcode - Data Section 129
    # Code: PUSH1(1) DUP1 DUP1  EXTDELEGATECALL STOP
    - data: |
       :label EOFV3670_0130 :raw 0x
        EF0001 # Magic and Version ( 1 )
        010004 # Types length ( 4 )
        020001 # Total code sections ( 1 )
          0006 # Code section  0 , 6  bytes
        040000 # Data section length ( 0 )
            00 # Terminator (end of header)
               # Code 0 types
            00 # 0 inputs
            80 # 0 outputs (Non-returning function)
          0003 # max stack: 3
               # Code section 0
          6001 # [0] PUSH1(1) 
            80 # [2] DUP1 
            80 # [3] DUP1 
            f9 # [4] EXTDELEGATECALL 
            00 # [5] STOP 
               # Data section (empty)
      #expectException:
        #">=Osaka": "ok."

    # EOFV3670_0131 (Valid) Code containing the EXTSTATICCALL opcode - Data Section 130
    # Code: PUSH1(1) DUP1 DUP1  EXTSTATICCALL STOP
    - data: |
       :label EOFV3670_0131 :raw 0x
        EF0001 # Magic and Version ( 1 )
        010004 # Types length ( 4 )
        020001 # Total code sections ( 1 )
          0006 # Code section  0 , 6  bytes
        040000 # Data section length ( 0 )
            00 # Terminator (end of header)
               # Code 0 types
            00 # 0 inputs
            80 # 0 outputs (Non-returning function)
          0003 # max stack: 3
               # Code section 0
          6001 # [0] PUSH1(1) 
            80 # [2] DUP1 
            80 # [3] DUP1 
            fb # [4] EXTSTATICCALL 
            00 # [5] STOP 
               # Data section (empty)
      #expectException:
        #">=Osaka": "ok."

    # EOFV3670_0132 (Valid) Code containing the REVERT opcode - Data Section 131
    # Code: PUSH1(1) DUP1  REVERT
    - data: |
       :label EOFV3670_0132 :raw 0x
        EF0001 # Magic and Version ( 1 )
        010004 # Types length ( 4 )
        020001 # Total code sections ( 1 )
          0004 # Code section  0 , 4  bytes
        040000 # Data section length ( 0 )
            00 # Terminator (end of header)
               # Code 0 types
            00 # 0 inputs
            80 # 0 outputs (Non-returning function)
          0002 # max stack: 2
               # Code section 0
          6001 # [0] PUSH1(1) 
            80 # [2] DUP1 
            fd # [3] REVERT 
               # Data section (empty)
      #expectException:
        #">=Osaka": "ok."

    # EOFV3670_0133 (Valid) Code containing the INVALID opcode - Data Section 132
    # Code: INVALID
    - data: |
       :label EOFV3670_0133 :raw 0x
        EF0001 # Magic and Version ( 1 )
        010004 # Types length ( 4 )
        020001 # Total code sections ( 1 )
          0001 # Code section  0 , 1  bytes
        040000 # Data section length ( 0 )
            00 # Terminator (end of header)
               # Code 0 types
            00 # 0 inputs
            80 # 0 outputs (Non-returning function)
          0000 # max stack: 0
               # Code section 0
            fe # [0] INVALID 
               # Data section (empty)
      #expectException:
        #">=Osaka": "ok."

    # EOFI3670_0134 (Invalid) Code containing undefined instruction 0x0c - Data Section 133
    # Code: 0x0c
    - data: |
       :label EOFI3670_0134 :raw 0xef0001010004020001000204000000008000000c00
      expectException:
        ">=Osaka": "EOF_UndefinedInstruction"

    # EOFI3670_0135 (Invalid) Code containing undefined instruction 0x0d - Data Section 134
    # Code: 0x0d
    - data: |
       :label EOFI3670_0135 :raw 0xef0001010004020001000204000000008000000d00
      expectException:
        ">=Osaka": "EOF_UndefinedInstruction"

    # EOFI3670_0136 (Invalid) Code containing undefined instruction 0x0e - Data Section 135
    # Code: 0x0e
    - data: |
       :label EOFI3670_0136 :raw 0xef0001010004020001000204000000008000000e00
      expectException:
        ">=Osaka": "EOF_UndefinedInstruction"

    # EOFI3670_0137 (Invalid) Code containing undefined instruction 0x0f - Data Section 136
    # Code: 0x0f
    - data: |
       :label EOFI3670_0137 :raw 0xef0001010004020001000204000000008000000f00
      expectException:
        ">=Osaka": "EOF_UndefinedInstruction"

    # EOFI3670_0138 (Invalid) Code containing undefined instruction 0x1e - Data Section 137
    # Code: 0x1e
    - data: |
       :label EOFI3670_0138 :raw 0xef0001010004020001000204000000008000001e00
      expectException:
        ">=Osaka": "EOF_UndefinedInstruction"

    # EOFI3670_0139 (Invalid) Code containing undefined instruction 0x1f - Data Section 138
    # Code: 0x1f
    - data: |
       :label EOFI3670_0139 :raw 0xef0001010004020001000204000000008000001f00
      expectException:
        ">=Osaka": "EOF_UndefinedInstruction"

    # EOFI3670_0140 (Invalid) Code containing undefined instruction 0x21 - Data Section 139
    # Code: 0x21
    - data: |
       :label EOFI3670_0140 :raw 0xef0001010004020001000204000000008000002100
      expectException:
        ">=Osaka": "EOF_UndefinedInstruction"

    # EOFI3670_0141 (Invalid) Code containing undefined instruction 0x22 - Data Section 140
    # Code: 0x22
    - data: |
       :label EOFI3670_0141 :raw 0xef0001010004020001000204000000008000002200
      expectException:
        ">=Osaka": "EOF_UndefinedInstruction"

    # EOFI3670_0142 (Invalid) Code containing undefined instruction 0x23 - Data Section 141
    # Code: 0x23
    - data: |
       :label EOFI3670_0142 :raw 0xef0001010004020001000204000000008000002300
      expectException:
        ">=Osaka": "EOF_UndefinedInstruction"

    # EOFI3670_0143 (Invalid) Code containing undefined instruction 0x24 - Data Section 142
    # Code: 0x24
    - data: |
       :label EOFI3670_0143 :raw 0xef0001010004020001000204000000008000002400
      expectException:
        ">=Osaka": "EOF_UndefinedInstruction"

    # EOFI3670_0144 (Invalid) Code containing undefined instruction 0x25 - Data Section 143
    # Code: 0x25
    - data: |
       :label EOFI3670_0144 :raw 0xef0001010004020001000204000000008000002500
      expectException:
        ">=Osaka": "EOF_UndefinedInstruction"

    # EOFI3670_0145 (Invalid) Code containing undefined instruction 0x26 - Data Section 144
    # Code: 0x26
    - data: |
       :label EOFI3670_0145 :raw 0xef0001010004020001000204000000008000002600
      expectException:
        ">=Osaka": "EOF_UndefinedInstruction"

    # EOFI3670_0146 (Invalid) Code containing undefined instruction 0x27 - Data Section 145
    # Code: 0x27
    - data: |
       :label EOFI3670_0146 :raw 0xef0001010004020001000204000000008000002700
      expectException:
        ">=Osaka": "EOF_UndefinedInstruction"

    # EOFI3670_0147 (Invalid) Code containing undefined instruction 0x28 - Data Section 146
    # Code: 0x28
    - data: |
       :label EOFI3670_0147 :raw 0xef0001010004020001000204000000008000002800
      expectException:
        ">=Osaka": "EOF_UndefinedInstruction"

    # EOFI3670_0148 (Invalid) Code containing undefined instruction 0x29 - Data Section 147
    # Code: 0x29
    - data: |
       :label EOFI3670_0148 :raw 0xef0001010004020001000204000000008000002900
      expectException:
        ">=Osaka": "EOF_UndefinedInstruction"

    # EOFI3670_0149 (Invalid) Code containing undefined instruction 0x2a - Data Section 148
    # Code: 0x2a
    - data: |
       :label EOFI3670_0149 :raw 0xef0001010004020001000204000000008000002a00
      expectException:
        ">=Osaka": "EOF_UndefinedInstruction"

    # EOFI3670_0150 (Invalid) Code containing undefined instruction 0x2b - Data Section 149
    # Code: 0x2b
    - data: |
       :label EOFI3670_0150 :raw 0xef0001010004020001000204000000008000002b00
      expectException:
        ">=Osaka": "EOF_UndefinedInstruction"

    # EOFI3670_0151 (Invalid) Code containing undefined instruction 0x2c - Data Section 150
    # Code: 0x2c
    - data: |
       :label EOFI3670_0151 :raw 0xef0001010004020001000204000000008000002c00
      expectException:
        ">=Osaka": "EOF_UndefinedInstruction"

    # EOFI3670_0152 (Invalid) Code containing undefined instruction 0x2d - Data Section 151
    # Code: 0x2d
    - data: |
       :label EOFI3670_0152 :raw 0xef0001010004020001000204000000008000002d00
      expectException:
        ">=Osaka": "EOF_UndefinedInstruction"

    # EOFI3670_0153 (Invalid) Code containing undefined instruction 0x2e - Data Section 152
    # Code: 0x2e
    - data: |
       :label EOFI3670_0153 :raw 0xef0001010004020001000204000000008000002e00
      expectException:
        ">=Osaka": "EOF_UndefinedInstruction"

    # EOFI3670_0154 (Invalid) Code containing undefined instruction 0x2f - Data Section 153
    # Code: 0x2f
    - data: |
       :label EOFI3670_0154 :raw 0xef0001010004020001000204000000008000002f00
      expectException:
        ">=Osaka": "EOF_UndefinedInstruction"

    # EOFI3670_0155 (Invalid) Code containing undefined instruction 0x4b - Data Section 154
    # Code: 0x4b
    - data: |
       :label EOFI3670_0155 :raw 0xef0001010004020001000204000000008000004b00
      expectException:
        ">=Osaka": "EOF_UndefinedInstruction"

    # EOFI3670_0156 (Invalid) Code containing undefined (deprecated) instruction 0x38 (CODESIZE) - Data Section 155
    # Code: 0x38
    - data: |
       :label EOFI3670_0156 :raw 0xef0001010004020001000204000000008000013800
      expectException:
        ">=Osaka": "EOF_UndefinedInstruction"

    # EOFI3670_0157 (Invalid) Code containing undefined (deprecated) instruction 0x39 (CODECOPY) - Data Section 156
    # Code: 0x39
    - data: |
       :label EOFI3670_0157 :raw 0xef0001010004020001000204000000008000003900
      expectException:
        ">=Osaka": "EOF_UndefinedInstruction"

    # EOFI3670_0158 (Invalid) Code containing undefined (deprecated) instruction 0x3b (EXTCODESIZE) - Data Section 157
    # Code: 0x3b
    - data: |
       :label EOFI3670_0158 :raw 0xef0001010004020001000204000000008000003b00
      expectException:
        ">=Osaka": "EOF_UndefinedInstruction"

    # EOFI3670_0159 (Invalid) Code containing undefined (deprecated) instruction 0x3c (EXTCODECOPY) - Data Section 158
    # Code: 0x3c
    - data: |
       :label EOFI3670_0159 :raw 0xef0001010004020001000204000000008000003c00
      expectException:
        ">=Osaka": "EOF_UndefinedInstruction"

    # EOFI3670_0160 (Invalid) Code containing undefined (deprecated) instruction 0x3f (EXTCODEHASH) - Data Section 159
    # Code: 0x3f
    - data: |
       :label EOFI3670_0160 :raw 0xef0001010004020001000204000000008000003f00
      expectException:
        ">=Osaka": "EOF_UndefinedInstruction"

    # EOFI3670_0161 (Invalid) Code containing undefined instruction 0x4c - Data Section 160
    # Code: 0x4c
    - data: |
       :label EOFI3670_0161 :raw 0xef0001010004020001000204000000008000004c00
      expectException:
        ">=Osaka": "EOF_UndefinedInstruction"

    # EOFI3670_0162 (Invalid) Code containing undefined instruction 0x4d - Data Section 161
    # Code: 0x4d
    - data: |
       :label EOFI3670_0162 :raw 0xef0001010004020001000204000000008000004d00
      expectException:
        ">=Osaka": "EOF_UndefinedInstruction"

    # EOFI3670_0163 (Invalid) Code containing undefined instruction 0x4e - Data Section 162
    # Code: 0x4e
    - data: |
       :label EOFI3670_0163 :raw 0xef0001010004020001000204000000008000004e00
      expectException:
        ">=Osaka": "EOF_UndefinedInstruction"

    # EOFI3670_0164 (Invalid) Code containing undefined instruction 0x4f - Data Section 163
    # Code: 0x4f
    - data: |
       :label EOFI3670_0164 :raw 0xef0001010004020001000204000000008000004f00
      expectException:
        ">=Osaka": "EOF_UndefinedInstruction"

    # EOFI3670_0165 (Invalid) Code containing undefined (deprecated) instruction 0x56 (JUMP) - Data Section 164
    # Code: 0x56
    - data: |
       :label EOFI3670_0165 :raw 0xef0001010004020001000204000000008000005600
      expectException:
        ">=Osaka": "EOF_UndefinedInstruction"

    # EOFI3670_0166 (Invalid) Code containing undefined (deprecated) instruction 0x57 (JUMPI) - Data Section 165
    # Code: 0x57
    - data: |
       :label EOFI3670_0166 :raw 0xef0001010004020001000204000000008000005700
      expectException:
        ">=Osaka": "EOF_UndefinedInstruction"

    # EOFI3670_0167 (Invalid) Code containing undefined (deprecated) instruction 0x58 (PC) - Data Section 166
    # Code: 0x58
    - data: |
       :label EOFI3670_0167 :raw 0xef0001010004020001000204000000008000015800
      expectException:
        ">=Osaka": "EOF_UndefinedInstruction"

    # EOFI3670_0168 (Invalid) Code containing undefined (deprecated) instruction 0x5a (GAS) - Data Section 167
    # Code: 0x5a
    - data: |
       :label EOFI3670_0168 :raw 0xef0001010004020001000204000000008000015a00
      expectException:
        ">=Osaka": "EOF_UndefinedInstruction"

    # EOFI3670_0169 (Invalid) Code containing undefined instruction 0xa5 - Data Section 168
    # Code: 0xa5
    - data: |
       :label EOFI3670_0169 :raw 0xef000101000402000100020400000000800000a500
      expectException:
        ">=Osaka": "EOF_UndefinedInstruction"

    # EOFI3670_0170 (Invalid) Code containing undefined instruction 0xa6 - Data Section 169
    # Code: 0xa6
    - data: |
       :label EOFI3670_0170 :raw 0xef000101000402000100020400000000800000a600
      expectException:
        ">=Osaka": "EOF_UndefinedInstruction"

    # EOFI3670_0171 (Invalid) Code containing undefined instruction 0xa7 - Data Section 170
    # Code: 0xa7
    - data: |
       :label EOFI3670_0171 :raw 0xef000101000402000100020400000000800000a700
      expectException:
        ">=Osaka": "EOF_UndefinedInstruction"

    # EOFI3670_0172 (Invalid) Code containing undefined instruction 0xa8 - Data Section 171
    # Code: 0xa8
    - data: |
       :label EOFI3670_0172 :raw 0xef000101000402000100020400000000800000a800
      expectException:
        ">=Osaka": "EOF_UndefinedInstruction"

    # EOFI3670_0173 (Invalid) Code containing undefined instruction 0xa9 - Data Section 172
    # Code: 0xa9
    - data: |
       :label EOFI3670_0173 :raw 0xef000101000402000100020400000000800000a900
      expectException:
        ">=Osaka": "EOF_UndefinedInstruction"

    # EOFI3670_0174 (Invalid) Code containing undefined instruction 0xaa - Data Section 173
    # Code: 0xaa
    - data: |
       :label EOFI3670_0174 :raw 0xef000101000402000100020400000000800000aa00
      expectException:
        ">=Osaka": "EOF_UndefinedInstruction"

    # EOFI3670_0175 (Invalid) Code containing undefined instruction 0xab - Data Section 174
    # Code: 0xab
    - data: |
       :label EOFI3670_0175 :raw 0xef000101000402000100020400000000800000ab00
      expectException:
        ">=Osaka": "EOF_UndefinedInstruction"

    # EOFI3670_0176 (Invalid) Code containing undefined instruction 0xac - Data Section 175
    # Code: 0xac
    - data: |
       :label EOFI3670_0176 :raw 0xef000101000402000100020400000000800000ac00
      expectException:
        ">=Osaka": "EOF_UndefinedInstruction"

    # EOFI3670_0177 (Invalid) Code containing undefined instruction 0xad - Data Section 176
    # Code: 0xad
    - data: |
       :label EOFI3670_0177 :raw 0xef000101000402000100020400000000800000ad00
      expectException:
        ">=Osaka": "EOF_UndefinedInstruction"

    # EOFI3670_0178 (Invalid) Code containing undefined instruction 0xae - Data Section 177
    # Code: 0xae
    - data: |
       :label EOFI3670_0178 :raw 0xef000101000402000100020400000000800000ae00
      expectException:
        ">=Osaka": "EOF_UndefinedInstruction"

    # EOFI3670_0179 (Invalid) Code containing undefined instruction 0xaf - Data Section 178
    # Code: 0xaf
    - data: |
       :label EOFI3670_0179 :raw 0xef000101000402000100020400000000800000af00
      expectException:
        ">=Osaka": "EOF_UndefinedInstruction"

    # EOFI3670_0180 (Invalid) Code containing undefined instruction 0xb2 - Data Section 179
    # Code: 0xb2
    - data: |
       :label EOFI3670_0180 :raw 0xef000101000402000100020400000000800000b200
      expectException:
        ">=Osaka": "EOF_UndefinedInstruction"

    # EOFI3670_0181 (Invalid) Code containing undefined instruction 0xb3 - Data Section 180
    # Code: 0xb3
    - data: |
       :label EOFI3670_0181 :raw 0xef000101000402000100020400000000800000b300
      expectException:
        ">=Osaka": "EOF_UndefinedInstruction"

    # EOFI3670_0182 (Invalid) Code containing undefined instruction 0xb4 - Data Section 181
    # Code: 0xb4
    - data: |
       :label EOFI3670_0182 :raw 0xef000101000402000100020400000000800000b400
      expectException:
        ">=Osaka": "EOF_UndefinedInstruction"

    # EOFI3670_0183 (Invalid) Code containing undefined instruction 0xb5 - Data Section 182
    # Code: 0xb5
    - data: |
       :label EOFI3670_0183 :raw 0xef000101000402000100020400000000800000b500
      expectException:
        ">=Osaka": "EOF_UndefinedInstruction"

    # EOFI3670_0184 (Invalid) Code containing undefined instruction 0xb6 - Data Section 183
    # Code: 0xb6
    - data: |
       :label EOFI3670_0184 :raw 0xef000101000402000100020400000000800000b600
      expectException:
        ">=Osaka": "EOF_UndefinedInstruction"

    # EOFI3670_0185 (Invalid) Code containing undefined instruction 0xb7 - Data Section 184
    # Code: 0xb7
    - data: |
       :label EOFI3670_0185 :raw 0xef000101000402000100020400000000800000b700
      expectException:
        ">=Osaka": "EOF_UndefinedInstruction"

    # EOFI3670_0186 (Invalid) Code containing undefined instruction 0xb8 - Data Section 185
    # Code: 0xb8
    - data: |
       :label EOFI3670_0186 :raw 0xef000101000402000100020400000000800000b800
      expectException:
        ">=Osaka": "EOF_UndefinedInstruction"

    # EOFI3670_0187 (Invalid) Code containing undefined instruction 0xb9 - Data Section 186
    # Code: 0xb9
    - data: |
       :label EOFI3670_0187 :raw 0xef000101000402000100020400000000800000b900
      expectException:
        ">=Osaka": "EOF_UndefinedInstruction"

    # EOFI3670_0188 (Invalid) Code containing undefined instruction 0xba - Data Section 187
    # Code: 0xba
    - data: |
       :label EOFI3670_0188 :raw 0xef000101000402000100020400000000800000ba00
      expectException:
        ">=Osaka": "EOF_UndefinedInstruction"

    # EOFI3670_0189 (Invalid) Code containing undefined instruction 0xbb - Data Section 188
    # Code: 0xbb
    - data: |
       :label EOFI3670_0189 :raw 0xef000101000402000100020400000000800000bb00
      expectException:
        ">=Osaka": "EOF_UndefinedInstruction"

    # EOFI3670_0190 (Invalid) Code containing undefined instruction 0xbc - Data Section 189
    # Code: 0xbc
    - data: |
       :label EOFI3670_0190 :raw 0xef000101000402000100020400000000800000bc00
      expectException:
        ">=Osaka": "EOF_UndefinedInstruction"

    # EOFI3670_0191 (Invalid) Code containing undefined instruction 0xbd - Data Section 190
    # Code: 0xbd
    - data: |
       :label EOFI3670_0191 :raw 0xef000101000402000100020400000000800000bd00
      expectException:
        ">=Osaka": "EOF_UndefinedInstruction"

    # EOFI3670_0192 (Invalid) Code containing undefined instruction 0xbe - Data Section 191
    # Code: 0xbe
    - data: |
       :label EOFI3670_0192 :raw 0xef000101000402000100020400000000800000be00
      expectException:
        ">=Osaka": "EOF_UndefinedInstruction"

    # EOFI3670_0193 (Invalid) Code containing undefined instruction 0xbf - Data Section 192
    # Code: 0xbf
    - data: |
       :label EOFI3670_0193 :raw 0xef000101000402000100020400000000800000bf00
      expectException:
        ">=Osaka": "EOF_UndefinedInstruction"

    # EOFI3670_0194 (Invalid) Code containing undefined instruction 0xc0 - Data Section 193
    # Code: 0xc0
    - data: |
       :label EOFI3670_0194 :raw 0xef000101000402000100020400000000800000c000
      expectException:
        ">=Osaka": "EOF_UndefinedInstruction"

    # EOFI3670_0195 (Invalid) Code containing undefined instruction 0xc1 - Data Section 194
    # Code: 0xc1
    - data: |
       :label EOFI3670_0195 :raw 0xef000101000402000100020400000000800000c100
      expectException:
        ">=Osaka": "EOF_UndefinedInstruction"

    # EOFI3670_0196 (Invalid) Code containing undefined instruction 0xc2 - Data Section 195
    # Code: 0xc2
    - data: |
       :label EOFI3670_0196 :raw 0xef000101000402000100020400000000800000c200
      expectException:
        ">=Osaka": "EOF_UndefinedInstruction"

    # EOFI3670_0197 (Invalid) Code containing undefined instruction 0xc3 - Data Section 196
    # Code: 0xc3
    - data: |
       :label EOFI3670_0197 :raw 0xef000101000402000100020400000000800000c300
      expectException:
        ">=Osaka": "EOF_UndefinedInstruction"

    # EOFI3670_0198 (Invalid) Code containing undefined instruction 0xc4 - Data Section 197
    # Code: 0xc4
    - data: |
       :label EOFI3670_0198 :raw 0xef000101000402000100020400000000800000c400
      expectException:
        ">=Osaka": "EOF_UndefinedInstruction"

    # EOFI3670_0199 (Invalid) Code containing undefined instruction 0xc5 - Data Section 198
    # Code: 0xc5
    - data: |
       :label EOFI3670_0199 :raw 0xef000101000402000100020400000000800000c500
      expectException:
        ">=Osaka": "EOF_UndefinedInstruction"

    # EOFI3670_0200 (Invalid) Code containing undefined instruction 0xc6 - Data Section 199
    # Code: 0xc6
    - data: |
       :label EOFI3670_0200 :raw 0xef000101000402000100020400000000800000c600
      expectException:
        ">=Osaka": "EOF_UndefinedInstruction"

    # EOFI3670_0201 (Invalid) Code containing undefined instruction 0xc7 - Data Section 200
    # Code: 0xc7
    - data: |
       :label EOFI3670_0201 :raw 0xef000101000402000100020400000000800000c700
      expectException:
        ">=Osaka": "EOF_UndefinedInstruction"

    # EOFI3670_0202 (Invalid) Code containing undefined instruction 0xc8 - Data Section 201
    # Code: 0xc8
    - data: |
       :label EOFI3670_0202 :raw 0xef000101000402000100020400000000800000c800
      expectException:
        ">=Osaka": "EOF_UndefinedInstruction"

    # EOFI3670_0203 (Invalid) Code containing undefined instruction 0xc9 - Data Section 202
    # Code: 0xc9
    - data: |
       :label EOFI3670_0203 :raw 0xef000101000402000100020400000000800000c900
      expectException:
        ">=Osaka": "EOF_UndefinedInstruction"

    # EOFI3670_0204 (Invalid) Code containing undefined instruction 0xca - Data Section 203
    # Code: 0xca
    - data: |
       :label EOFI3670_0204 :raw 0xef000101000402000100020400000000800000ca00
      expectException:
        ">=Osaka": "EOF_UndefinedInstruction"

    # EOFI3670_0205 (Invalid) Code containing undefined instruction 0xcb - Data Section 204
    # Code: 0xcb
    - data: |
       :label EOFI3670_0205 :raw 0xef000101000402000100020400000000800000cb00
      expectException:
        ">=Osaka": "EOF_UndefinedInstruction"

    # EOFI3670_0206 (Invalid) Code containing undefined instruction 0xcc - Data Section 205
    # Code: 0xcc
    - data: |
       :label EOFI3670_0206 :raw 0xef000101000402000100020400000000800000cc00
      expectException:
        ">=Osaka": "EOF_UndefinedInstruction"

    # EOFI3670_0207 (Invalid) Code containing undefined instruction 0xcd - Data Section 206
    # Code: 0xcd
    - data: |
       :label EOFI3670_0207 :raw 0xef000101000402000100020400000000800000cd00
      expectException:
        ">=Osaka": "EOF_UndefinedInstruction"

    # EOFI3670_0208 (Invalid) Code containing undefined instruction 0xce - Data Section 207
    # Code: 0xce
    - data: |
       :label EOFI3670_0208 :raw 0xef000101000402000100020400000000800000ce00
      expectException:
        ">=Osaka": "EOF_UndefinedInstruction"

    # EOFI3670_0209 (Invalid) Code containing undefined instruction 0xcf - Data Section 208
    # Code: 0xcf
    - data: |
       :label EOFI3670_0209 :raw 0xef000101000402000100020400000000800000cf00
      expectException:
        ">=Osaka": "EOF_UndefinedInstruction"

    # EOFI3670_0210 (Invalid) Code containing undefined instruction 0xd4 - Data Section 209
    # Code: 0xd4
    - data: |
       :label EOFI3670_0210 :raw 0xef000101000402000100020400000000800000d400
      expectException:
        ">=Osaka": "EOF_UndefinedInstruction"

    # EOFI3670_0211 (Invalid) Code containing undefined instruction 0xd5 - Data Section 210
    # Code: 0xd5
    - data: |
       :label EOFI3670_0211 :raw 0xef000101000402000100020400000000800000d500
      expectException:
        ">=Osaka": "EOF_UndefinedInstruction"

    # EOFI3670_0212 (Invalid) Code containing undefined instruction 0xd6 - Data Section 211
    # Code: 0xd6
    - data: |
       :label EOFI3670_0212 :raw 0xef000101000402000100020400000000800000d600
      expectException:
        ">=Osaka": "EOF_UndefinedInstruction"

    # EOFI3670_0213 (Invalid) Code containing undefined instruction 0xd7 - Data Section 212
    # Code: 0xd7
    - data: |
       :label EOFI3670_0213 :raw 0xef000101000402000100020400000000800000d700
      expectException:
        ">=Osaka": "EOF_UndefinedInstruction"

    # EOFI3670_0214 (Invalid) Code containing undefined instruction 0xd8 - Data Section 213
    # Code: 0xd8
    - data: |
       :label EOFI3670_0214 :raw 0xef000101000402000100020400000000800000d800
      expectException:
        ">=Osaka": "EOF_UndefinedInstruction"

    # EOFI3670_0215 (Invalid) Code containing undefined instruction 0xd9 - Data Section 214
    # Code: 0xd9
    - data: |
       :label EOFI3670_0215 :raw 0xef000101000402000100020400000000800000d900
      expectException:
        ">=Osaka": "EOF_UndefinedInstruction"

    # EOFI3670_0216 (Invalid) Code containing undefined instruction 0xda - Data Section 215
    # Code: 0xda
    - data: |
       :label EOFI3670_0216 :raw 0xef000101000402000100020400000000800000da00
      expectException:
        ">=Osaka": "EOF_UndefinedInstruction"

    # EOFI3670_0217 (Invalid) Code containing undefined instruction 0xdb - Data Section 216
    # Code: 0xdb
    - data: |
       :label EOFI3670_0217 :raw 0xef000101000402000100020400000000800000db00
      expectException:
        ">=Osaka": "EOF_UndefinedInstruction"

    # EOFI3670_0218 (Invalid) Code containing undefined instruction 0xdc - Data Section 217
    # Code: 0xdc
    - data: |
       :label EOFI3670_0218 :raw 0xef000101000402000100020400000000800000dc00
      expectException:
        ">=Osaka": "EOF_UndefinedInstruction"

    # EOFI3670_0219 (Invalid) Code containing undefined instruction 0xdd - Data Section 218
    # Code: 0xdd
    - data: |
       :label EOFI3670_0219 :raw 0xef000101000402000100020400000000800000dd00
      expectException:
        ">=Osaka": "EOF_UndefinedInstruction"

    # EOFI3670_0220 (Invalid) Code containing undefined instruction 0xde - Data Section 219
    # Code: 0xde
    - data: |
       :label EOFI3670_0220 :raw 0xef000101000402000100020400000000800000de00
      expectException:
        ">=Osaka": "EOF_UndefinedInstruction"

    # EOFI3670_0221 (Invalid) Code containing undefined instruction 0xdf - Data Section 220
    # Code: 0xdf
    - data: |
       :label EOFI3670_0221 :raw 0xef000101000402000100020400000000800000df00
      expectException:
        ">=Osaka": "EOF_UndefinedInstruction"

    # EOFI3670_0222 (Invalid) Code containing undefined instruction 0xe9 - Data Section 221
    # Code: 0xe9
    - data: |
       :label EOFI3670_0222 :raw 0xef000101000402000100020400000000800000e900
      expectException:
        ">=Osaka": "EOF_UndefinedInstruction"

    # EOFI3670_0223 (Invalid) Code containing undefined instruction 0xea - Data Section 222
    # Code: 0xea
    - data: |
       :label EOFI3670_0223 :raw 0xef000101000402000100020400000000800000ea00
      expectException:
        ">=Osaka": "EOF_UndefinedInstruction"

    # EOFI3670_0224 (Invalid) Code containing undefined instruction 0xeb - Data Section 223
    # Code: 0xeb
    - data: |
       :label EOFI3670_0224 :raw 0xef000101000402000100020400000000800000eb00
      expectException:
        ">=Osaka": "EOF_UndefinedInstruction"

    # EOFI3670_0225 (Invalid) Code containing undefined instruction 0xef - Data Section 224
    # Code: 0xef
    - data: |
       :label EOFI3670_0225 :raw 0xef000101000402000100020400000000800000ef00
      expectException:
        ">=Osaka": "EOF_UndefinedInstruction"

    # EOFI3670_0226 (Invalid) Code containing undefined (deprecated) instruction 0xf0 (CREATE) - Data Section 225
    # Code: 0xf0
    - data: |
       :label EOFI3670_0226 :raw 0xef000101000402000100020400000000800000f000
      expectException:
        ">=Osaka": "EOF_UndefinedInstruction"

    # EOFI3670_0227 (Invalid) Code containing undefined (deprecated) instruction 0xf2 (CALLCODE) - Data Section 226
    # Code: 0xf2
    - data: |
       :label EOFI3670_0227 :raw 0xef000101000402000100020400000000800000f200
      expectException:
        ">=Osaka": "EOF_UndefinedInstruction"

    # EOFI3670_0228 (Invalid) Code containing undefined (deprecated) instruction 0xf5 (CREATE2) - Data Section 227
    # Code: 0xf5
    - data: |
       :label EOFI3670_0228 :raw 0xef000101000402000100020400000000800000f500
      expectException:
        ">=Osaka": "EOF_UndefinedInstruction"

    # EOFI3670_0229 (Invalid) Code containing undefined (deprecated) instruction 0xf1 (CALL) - Data Section 228
    # Code: 0xf1
    - data: |
       :label EOFI3670_0229 :raw 0xef000101000402000100020400000000800000f100
      expectException:
        ">=Osaka": "EOF_UndefinedInstruction"

    # EOFI3670_0230 (Invalid) Code containing undefined (deprecated) instruction 0xf4 (DELEGATECALL) - Data Section 229
    # Code: 0xf4
    - data: |
       :label EOFI3670_0230 :raw 0xef000101000402000100020400000000800000f400
      expectException:
        ">=Osaka": "EOF_UndefinedInstruction"

    # EOFI3670_0231 (Invalid) Code containing undefined instruction 0xf6 - Data Section 230
    # Code: 0xf6
    - data: |
       :label EOFI3670_0231 :raw 0xef000101000402000100020400000000800000f600
      expectException:
        ">=Osaka": "EOF_UndefinedInstruction"

    # EOFI3670_0232 (Invalid) Code containing undefined (deprecated) instruction 0xfa (STATICCALL) - Data Section 231
    # Code: 0xfa
    - data: |
       :label EOFI3670_0232 :raw 0xef000101000402000100020400000000800000fa00
      expectException:
        ">=Osaka": "EOF_UndefinedInstruction"

    # EOFI3670_0233 (Invalid) Code containing undefined instruction 0xfc - Data Section 232
    # Code: 0xfc
    - data: |
       :label EOFI3670_0233 :raw 0xef000101000402000100020400000000800000fc00
      expectException:
        ">=Osaka": "EOF_UndefinedInstruction"

    # EOFI3670_0234 (Invalid) Code containing undefined (deprecated) instruction 0xff (SELFDESTRUCT) - Data Section 233
    # Code: 0xff
    - data: |
       :label EOFI3670_0234 :raw 0xef000101000402000100020400000000800000ff00
      expectException:
        ">=Osaka": "EOF_UndefinedInstruction"

    # EOFI3670_0235 (Invalid) Truncated PUSH1 (no immediates) - Data Section 234
    # Code: PUSH1(1) PUSH1(1) SSTORE PUSH1(2) PUSH1(2) SSTORE PUSH1(
    - data: |
       :label EOFI3670_0235 :raw 0xef0001010004020001000b04000000008000026001600155600260025560
      expectException:
        ">=Osaka" : "EOF_TruncatedImmediate" 

    # EOFI3670_0236 (Invalid) Truncated PUSH2 (no immediates) - Data Section 235
    # Code: PUSH1(1) PUSH1(1) SSTORE PUSH1(2) PUSH1(2) SSTORE PUSH2(
    - data: |
       :label EOFI3670_0236 :raw 0xef0001010004020001000b04000000008000026001600155600260025561
      expectException:
        ">=Osaka" : "EOF_TruncatedImmediate" 

    # EOFI3670_0237 (Invalid) Truncated PUSH2 (truncated immediates) - Data Section 236
    # Code: PUSH1(1) PUSH1(1) SSTORE PUSH1(2) PUSH1(2) SSTORE PUSH2(0xff
    - data: |
       :label EOFI3670_0237 :raw 0xef0001010004020001000b04000000008000026001600155600260025561
      expectException:
        ">=Osaka" : "EOF_TruncatedImmediate" 

    # EOFI3670_0238 (Invalid) Truncated PUSH3 (no immediates) - Data Section 237
    # Code: PUSH1(1) PUSH1(1) SSTORE PUSH1(2) PUSH1(2) SSTORE PUSH3(
    - data: |
       :label EOFI3670_0238 :raw 0xef0001010004020001000b04000000008000026001600155600260025562
      expectException:
        ">=Osaka" : "EOF_TruncatedImmediate" 

    # EOFI3670_0239 (Invalid) Truncated PUSH3 (truncated immediates) - Data Section 238
    # Code: PUSH1(1) PUSH1(1) SSTORE PUSH1(2) PUSH1(2) SSTORE PUSH3(0xffff
    - data: |
       :label EOFI3670_0239 :raw 0xef0001010004020001000b04000000008000026001600155600260025562
      expectException:
        ">=Osaka" : "EOF_TruncatedImmediate" 

    # EOFI3670_0240 (Invalid) Truncated PUSH4 (no immediates) - Data Section 239
    # Code: PUSH1(1) PUSH1(1) SSTORE PUSH1(2) PUSH1(2) SSTORE PUSH4(
    - data: |
       :label EOFI3670_0240 :raw 0xef0001010004020001000b04000000008000026001600155600260025563
      expectException:
        ">=Osaka" : "EOF_TruncatedImmediate" 

    # EOFI3670_0241 (Invalid) Truncated PUSH4 (truncated immediates) - Data Section 240
    # Code: PUSH1(1) PUSH1(1) SSTORE PUSH1(2) PUSH1(2) SSTORE PUSH4(0xffffff
    - data: |
       :label EOFI3670_0241 :raw 0xef0001010004020001000b04000000008000026001600155600260025563
      expectException:
        ">=Osaka" : "EOF_TruncatedImmediate" 

    # EOFI3670_0242 (Invalid) Truncated PUSH5 (no immediates) - Data Section 241
    # Code: PUSH1(1) PUSH1(1) SSTORE PUSH1(2) PUSH1(2) SSTORE PUSH5(
    - data: |
       :label EOFI3670_0242 :raw 0xef0001010004020001000b04000000008000026001600155600260025564
      expectException:
        ">=Osaka" : "EOF_TruncatedImmediate" 

    # EOFI3670_0243 (Invalid) Truncated PUSH5 (truncated immediates) - Data Section 242
    # Code: PUSH1(1) PUSH1(1) SSTORE PUSH1(2) PUSH1(2) SSTORE PUSH5(0xffffffff
    - data: |
       :label EOFI3670_0243 :raw 0xef0001010004020001000b04000000008000026001600155600260025564
      expectException:
        ">=Osaka" : "EOF_TruncatedImmediate" 

    # EOFI3670_0244 (Invalid) Truncated PUSH6 (no immediates) - Data Section 243
    # Code: PUSH1(1) PUSH1(1) SSTORE PUSH1(2) PUSH1(2) SSTORE PUSH6(
    - data: |
       :label EOFI3670_0244 :raw 0xef0001010004020001000b04000000008000026001600155600260025565
      expectException:
        ">=Osaka" : "EOF_TruncatedImmediate" 

    # EOFI3670_0245 (Invalid) Truncated PUSH6 (truncated immediates) - Data Section 244
    # Code: PUSH1(1) PUSH1(1) SSTORE PUSH1(2) PUSH1(2) SSTORE PUSH6(0xffffffffff
    - data: |
       :label EOFI3670_0245 :raw 0xef0001010004020001000b04000000008000026001600155600260025565
      expectException:
        ">=Osaka" : "EOF_TruncatedImmediate" 

    # EOFI3670_0246 (Invalid) Truncated PUSH7 (no immediates) - Data Section 245
    # Code: PUSH1(1) PUSH1(1) SSTORE PUSH1(2) PUSH1(2) SSTORE PUSH7(
    - data: |
       :label EOFI3670_0246 :raw 0xef0001010004020001000b04000000008000026001600155600260025566
      expectException:
        ">=Osaka" : "EOF_TruncatedImmediate" 

    # EOFI3670_0247 (Invalid) Truncated PUSH7 (truncated immediates) - Data Section 246
    # Code: PUSH1(1) PUSH1(1) SSTORE PUSH1(2) PUSH1(2) SSTORE PUSH7(0xffffffffffff
    - data: |
       :label EOFI3670_0247 :raw 0xef0001010004020001000b04000000008000026001600155600260025566
      expectException:
        ">=Osaka" : "EOF_TruncatedImmediate" 

    # EOFI3670_0248 (Invalid) Truncated PUSH8 (no immediates) - Data Section 247
    # Code: PUSH1(1) PUSH1(1) SSTORE PUSH1(2) PUSH1(2) SSTORE PUSH8(
    - data: |
       :label EOFI3670_0248 :raw 0xef0001010004020001000b04000000008000026001600155600260025567
      expectException:
        ">=Osaka" : "EOF_TruncatedImmediate" 

    # EOFI3670_0249 (Invalid) Truncated PUSH8 (truncated immediates) - Data Section 248
    # Code: PUSH1(1) PUSH1(1) SSTORE PUSH1(2) PUSH1(2) SSTORE PUSH8(0xffffffffffffff
    - data: |
       :label EOFI3670_0249 :raw 0xef0001010004020001000b04000000008000026001600155600260025567
      expectException:
        ">=Osaka" : "EOF_TruncatedImmediate" 

    # EOFI3670_0250 (Invalid) Truncated PUSH9 (no immediates) - Data Section 249
    # Code: PUSH1(1) PUSH1(1) SSTORE PUSH1(2) PUSH1(2) SSTORE PUSH9(
    - data: |
       :label EOFI3670_0250 :raw 0xef0001010004020001000b04000000008000026001600155600260025568
      expectException:
        ">=Osaka" : "EOF_TruncatedImmediate" 

    # EOFI3670_0251 (Invalid) Truncated PUSH9 (truncated immediates) - Data Section 250
    # Code: PUSH1(1) PUSH1(1) SSTORE PUSH1(2) PUSH1(2) SSTORE PUSH9(0xffffffffffffffff
    - data: |
       :label EOFI3670_0251 :raw 0xef0001010004020001000b04000000008000026001600155600260025568
      expectException:
        ">=Osaka" : "EOF_TruncatedImmediate" 

    # EOFI3670_0252 (Invalid) Truncated PUSH10 (no immediates) - Data Section 251
    # Code: PUSH1(1) PUSH1(1) SSTORE PUSH1(2) PUSH1(2) SSTORE PUSH10(
    - data: |
       :label EOFI3670_0252 :raw 0xef0001010004020001000b04000000008000026001600155600260025569
      expectException:
        ">=Osaka" : "EOF_TruncatedImmediate" 

    # EOFI3670_0253 (Invalid) Truncated PUSH10 (truncated immediates) - Data Section 252
    # Code: PUSH1(1) PUSH1(1) SSTORE PUSH1(2) PUSH1(2) SSTORE PUSH10(0xffffffffffffffffff
    - data: |
       :label EOFI3670_0253 :raw 0xef0001010004020001000b04000000008000026001600155600260025569
      expectException:
        ">=Osaka" : "EOF_TruncatedImmediate" 

    # EOFI3670_0254 (Invalid) Truncated PUSH11 (no immediates) - Data Section 253
    # Code: PUSH1(1) PUSH1(1) SSTORE PUSH1(2) PUSH1(2) SSTORE PUSH11(
    - data: |
       :label EOFI3670_0254 :raw 0xef0001010004020001000b0400000000800002600160015560026002556a
      expectException:
        ">=Osaka" : "EOF_TruncatedImmediate" 

    # EOFI3670_0255 (Invalid) Truncated PUSH11 (truncated immediates) - Data Section 254
    # Code: PUSH1(1) PUSH1(1) SSTORE PUSH1(2) PUSH1(2) SSTORE PUSH11(0xffffffffffffffffffff
    - data: |
       :label EOFI3670_0255 :raw 0xef0001010004020001000b0400000000800002600160015560026002556a
      expectException:
        ">=Osaka" : "EOF_TruncatedImmediate" 

    # EOFI3670_0256 (Invalid) Truncated PUSH12 (no immediates) - Data Section 255
    # Code: PUSH1(1) PUSH1(1) SSTORE PUSH1(2) PUSH1(2) SSTORE PUSH12(
    - data: |
       :label EOFI3670_0256 :raw 0xef0001010004020001000b0400000000800002600160015560026002556b
      expectException:
        ">=Osaka" : "EOF_TruncatedImmediate" 

    # EOFI3670_0257 (Invalid) Truncated PUSH12 (truncated immediates) - Data Section 256
    # Code: PUSH1(1) PUSH1(1) SSTORE PUSH1(2) PUSH1(2) SSTORE PUSH12(0xffffffffffffffffffffff
    - data: |
       :label EOFI3670_0257 :raw 0xef0001010004020001000b0400000000800002600160015560026002556b
      expectException:
        ">=Osaka" : "EOF_TruncatedImmediate" 

    # EOFI3670_0258 (Invalid) Truncated PUSH13 (no immediates) - Data Section 257
    # Code: PUSH1(1) PUSH1(1) SSTORE PUSH1(2) PUSH1(2) SSTORE PUSH13(
    - data: |
       :label EOFI3670_0258 :raw 0xef0001010004020001000b0400000000800002600160015560026002556c
      expectException:
        ">=Osaka" : "EOF_TruncatedImmediate" 

    # EOFI3670_0259 (Invalid) Truncated PUSH13 (truncated immediates) - Data Section 258
    # Code: PUSH1(1) PUSH1(1) SSTORE PUSH1(2) PUSH1(2) SSTORE PUSH13(0xffffffffffffffffffffffff
    - data: |
       :label EOFI3670_0259 :raw 0xef0001010004020001000b0400000000800002600160015560026002556c
      expectException:
        ">=Osaka" : "EOF_TruncatedImmediate" 

    # EOFI3670_0260 (Invalid) Truncated PUSH14 (no immediates) - Data Section 259
    # Code: PUSH1(1) PUSH1(1) SSTORE PUSH1(2) PUSH1(2) SSTORE PUSH14(
    - data: |
       :label EOFI3670_0260 :raw 0xef0001010004020001000b0400000000800002600160015560026002556d
      expectException:
        ">=Osaka" : "EOF_TruncatedImmediate" 

    # EOFI3670_0261 (Invalid) Truncated PUSH14 (truncated immediates) - Data Section 260
    # Code: PUSH1(1) PUSH1(1) SSTORE PUSH1(2) PUSH1(2) SSTORE PUSH14(0xffffffffffffffffffffffffff
    - data: |
       :label EOFI3670_0261 :raw 0xef0001010004020001000b0400000000800002600160015560026002556d
      expectException:
        ">=Osaka" : "EOF_TruncatedImmediate" 

    # EOFI3670_0262 (Invalid) Truncated PUSH15 (no immediates) - Data Section 261
    # Code: PUSH1(1) PUSH1(1) SSTORE PUSH1(2) PUSH1(2) SSTORE PUSH15(
    - data: |
       :label EOFI3670_0262 :raw 0xef0001010004020001000b0400000000800002600160015560026002556e
      expectException:
        ">=Osaka" : "EOF_TruncatedImmediate" 

    # EOFI3670_0263 (Invalid) Truncated PUSH15 (truncated immediates) - Data Section 262
    # Code: PUSH1(1) PUSH1(1) SSTORE PUSH1(2) PUSH1(2) SSTORE PUSH15(0xffffffffffffffffffffffffffff
    - data: |
       :label EOFI3670_0263 :raw 0xef0001010004020001000b0400000000800002600160015560026002556e
      expectException:
        ">=Osaka" : "EOF_TruncatedImmediate" 

    # EOFI3670_0264 (Invalid) Truncated PUSH16 (no immediates) - Data Section 263
    # Code: PUSH1(1) PUSH1(1) SSTORE PUSH1(2) PUSH1(2) SSTORE PUSH16(
    - data: |
       :label EOFI3670_0264 :raw 0xef0001010004020001000b0400000000800002600160015560026002556f
      expectException:
        ">=Osaka" : "EOF_TruncatedImmediate" 

    # EOFI3670_0265 (Invalid) Truncated PUSH16 (truncated immediates) - Data Section 264
    # Code: PUSH1(1) PUSH1(1) SSTORE PUSH1(2) PUSH1(2) SSTORE PUSH16(0xffffffffffffffffffffffffffffff
    - data: |
       :label EOFI3670_0265 :raw 0xef0001010004020001000b0400000000800002600160015560026002556f
      expectException:
        ">=Osaka" : "EOF_TruncatedImmediate" 

    # EOFI3670_0266 (Invalid) Truncated PUSH17 (no immediates) - Data Section 265
    # Code: PUSH1(1) PUSH1(1) SSTORE PUSH1(2) PUSH1(2) SSTORE PUSH17(
    - data: |
       :label EOFI3670_0266 :raw 0xef0001010004020001000b04000000008000026001600155600260025570
      expectException:
        ">=Osaka" : "EOF_TruncatedImmediate" 

    # EOFI3670_0267 (Invalid) Truncated PUSH17 (truncated immediates) - Data Section 266
    # Code: PUSH1(1) PUSH1(1) SSTORE PUSH1(2) PUSH1(2) SSTORE PUSH17(0xffffffffffffffffffffffffffffffff
    - data: |
       :label EOFI3670_0267 :raw 0xef0001010004020001000b04000000008000026001600155600260025570
      expectException:
        ">=Osaka" : "EOF_TruncatedImmediate" 

    # EOFI3670_0268 (Invalid) Truncated PUSH18 (no immediates) - Data Section 267
    # Code: PUSH1(1) PUSH1(1) SSTORE PUSH1(2) PUSH1(2) SSTORE PUSH18(
    - data: |
       :label EOFI3670_0268 :raw 0xef0001010004020001000b04000000008000026001600155600260025571
      expectException:
        ">=Osaka" : "EOF_TruncatedImmediate" 

    # EOFI3670_0269 (Invalid) Truncated PUSH18 (truncated immediates) - Data Section 268
    # Code: PUSH1(1) PUSH1(1) SSTORE PUSH1(2) PUSH1(2) SSTORE PUSH18(0xffffffffffffffffffffffffffffffffff
    - data: |
       :label EOFI3670_0269 :raw 0xef0001010004020001000b04000000008000026001600155600260025571
      expectException:
        ">=Osaka" : "EOF_TruncatedImmediate" 

    # EOFI3670_0270 (Invalid) Truncated PUSH19 (no immediates) - Data Section 269
    # Code: PUSH1(1) PUSH1(1) SSTORE PUSH1(2) PUSH1(2) SSTORE PUSH19(
    - data: |
       :label EOFI3670_0270 :raw 0xef0001010004020001000b04000000008000026001600155600260025572
      expectException:
        ">=Osaka" : "EOF_TruncatedImmediate" 

    # EOFI3670_0271 (Invalid) Truncated PUSH19 (truncated immediates) - Data Section 270
    # Code: PUSH1(1) PUSH1(1) SSTORE PUSH1(2) PUSH1(2) SSTORE PUSH19(0xffffffffffffffffffffffffffffffffffff
    - data: |
       :label EOFI3670_0271 :raw 0xef0001010004020001000b04000000008000026001600155600260025572
      expectException:
        ">=Osaka" : "EOF_TruncatedImmediate" 

    # EOFI3670_0272 (Invalid) Truncated PUSH20 (no immediates) - Data Section 271
    # Code: PUSH1(1) PUSH1(1) SSTORE PUSH1(2) PUSH1(2) SSTORE PUSH20(
    - data: |
       :label EOFI3670_0272 :raw 0xef0001010004020001000b04000000008000026001600155600260025573
      expectException:
        ">=Osaka" : "EOF_TruncatedImmediate" 

    # EOFI3670_0273 (Invalid) Truncated PUSH20 (truncated immediates) - Data Section 272
    # Code: PUSH1(1) PUSH1(1) SSTORE PUSH1(2) PUSH1(2) SSTORE PUSH20(0xffffffffffffffffffffffffffffffffffffff
    - data: |
       :label EOFI3670_0273 :raw 0xef0001010004020001000b04000000008000026001600155600260025573
      expectException:
        ">=Osaka" : "EOF_TruncatedImmediate" 

    # EOFI3670_0274 (Invalid) Truncated PUSH21 (no immediates) - Data Section 273
    # Code: PUSH1(1) PUSH1(1) SSTORE PUSH1(2) PUSH1(2) SSTORE PUSH21(
    - data: |
       :label EOFI3670_0274 :raw 0xef0001010004020001000b04000000008000026001600155600260025574
      expectException:
        ">=Osaka" : "EOF_TruncatedImmediate" 

    # EOFI3670_0275 (Invalid) Truncated PUSH21 (truncated immediates) - Data Section 274
    # Code: PUSH1(1) PUSH1(1) SSTORE PUSH1(2) PUSH1(2) SSTORE PUSH21(0xffffffffffffffffffffffffffffffffffffffff
    - data: |
       :label EOFI3670_0275 :raw 0xef0001010004020001000b04000000008000026001600155600260025574
      expectException:
        ">=Osaka" : "EOF_TruncatedImmediate" 

    # EOFI3670_0276 (Invalid) Truncated PUSH22 (no immediates) - Data Section 275
    # Code: PUSH1(1) PUSH1(1) SSTORE PUSH1(2) PUSH1(2) SSTORE PUSH22(
    - data: |
       :label EOFI3670_0276 :raw 0xef0001010004020001000b04000000008000026001600155600260025575
      expectException:
        ">=Osaka" : "EOF_TruncatedImmediate" 

    # EOFI3670_0277 (Invalid) Truncated PUSH22 (truncated immediates) - Data Section 276
    # Code: PUSH1(1) PUSH1(1) SSTORE PUSH1(2) PUSH1(2) SSTORE PUSH22(0xffffffffffffffffffffffffffffffffffffffffff
    - data: |
       :label EOFI3670_0277 :raw 0xef0001010004020001000b04000000008000026001600155600260025575
      expectException:
        ">=Osaka" : "EOF_TruncatedImmediate" 

    # EOFI3670_0278 (Invalid) Truncated PUSH23 (no immediates) - Data Section 277
    # Code: PUSH1(1) PUSH1(1) SSTORE PUSH1(2) PUSH1(2) SSTORE PUSH23(
    - data: |
       :label EOFI3670_0278 :raw 0xef0001010004020001000b04000000008000026001600155600260025576
      expectException:
        ">=Osaka" : "EOF_TruncatedImmediate" 

    # EOFI3670_0279 (Invalid) Truncated PUSH23 (truncated immediates) - Data Section 278
    # Code: PUSH1(1) PUSH1(1) SSTORE PUSH1(2) PUSH1(2) SSTORE PUSH23(0xffffffffffffffffffffffffffffffffffffffffffff
    - data: |
       :label EOFI3670_0279 :raw 0xef0001010004020001000b04000000008000026001600155600260025576
      expectException:
        ">=Osaka" : "EOF_TruncatedImmediate" 

    # EOFI3670_0280 (Invalid) Truncated PUSH24 (no immediates) - Data Section 279
    # Code: PUSH1(1) PUSH1(1) SSTORE PUSH1(2) PUSH1(2) SSTORE PUSH24(
    - data: |
       :label EOFI3670_0280 :raw 0xef0001010004020001000b04000000008000026001600155600260025577
      expectException:
        ">=Osaka" : "EOF_TruncatedImmediate" 

    # EOFI3670_0281 (Invalid) Truncated PUSH24 (truncated immediates) - Data Section 280
    # Code: PUSH1(1) PUSH1(1) SSTORE PUSH1(2) PUSH1(2) SSTORE PUSH24(0xffffffffffffffffffffffffffffffffffffffffffffff
    - data: |
       :label EOFI3670_0281 :raw 0xef0001010004020001000b04000000008000026001600155600260025577
      expectException:
        ">=Osaka" : "EOF_TruncatedImmediate" 

    # EOFI3670_0282 (Invalid) Truncated PUSH25 (no immediates) - Data Section 281
    # Code: PUSH1(1) PUSH1(1) SSTORE PUSH1(2) PUSH1(2) SSTORE PUSH25(
    - data: |
       :label EOFI3670_0282 :raw 0xef0001010004020001000b04000000008000026001600155600260025578
      expectException:
        ">=Osaka" : "EOF_TruncatedImmediate" 

    # EOFI3670_0283 (Invalid) Truncated PUSH25 (truncated immediates) - Data Section 282
    # Code: PUSH1(1) PUSH1(1) SSTORE PUSH1(2) PUSH1(2) SSTORE PUSH25(0xffffffffffffffffffffffffffffffffffffffffffffffff
    - data: |
       :label EOFI3670_0283 :raw 0xef0001010004020001000b04000000008000026001600155600260025578
      expectException:
        ">=Osaka" : "EOF_TruncatedImmediate" 

    # EOFI3670_0284 (Invalid) Truncated PUSH26 (no immediates) - Data Section 283
    # Code: PUSH1(1) PUSH1(1) SSTORE PUSH1(2) PUSH1(2) SSTORE PUSH26(
    - data: |
       :label EOFI3670_0284 :raw 0xef0001010004020001000b04000000008000026001600155600260025579
      expectException:
        ">=Osaka" : "EOF_TruncatedImmediate" 

    # EOFI3670_0285 (Invalid) Truncated PUSH26 (truncated immediates) - Data Section 284
    # Code: PUSH1(1) PUSH1(1) SSTORE PUSH1(2) PUSH1(2) SSTORE PUSH26(0xffffffffffffffffffffffffffffffffffffffffffffffffff
    - data: |
       :label EOFI3670_0285 :raw 0xef0001010004020001000b04000000008000026001600155600260025579
      expectException:
        ">=Osaka" : "EOF_TruncatedImmediate" 

    # EOFI3670_0286 (Invalid) Truncated PUSH27 (no immediates) - Data Section 285
    # Code: PUSH1(1) PUSH1(1) SSTORE PUSH1(2) PUSH1(2) SSTORE PUSH27(
    - data: |
       :label EOFI3670_0286 :raw 0xef0001010004020001000b0400000000800002600160015560026002557a
      expectException:
        ">=Osaka" : "EOF_TruncatedImmediate" 

    # EOFI3670_0287 (Invalid) Truncated PUSH27 (truncated immediates) - Data Section 286
    # Code: PUSH1(1) PUSH1(1) SSTORE PUSH1(2) PUSH1(2) SSTORE PUSH27(0xffffffffffffffffffffffffffffffffffffffffffffffffffff
    - data: |
       :label EOFI3670_0287 :raw 0xef0001010004020001000b0400000000800002600160015560026002557a
      expectException:
        ">=Osaka" : "EOF_TruncatedImmediate" 

    # EOFI3670_0288 (Invalid) Truncated PUSH28 (no immediates) - Data Section 287
    # Code: PUSH1(1) PUSH1(1) SSTORE PUSH1(2) PUSH1(2) SSTORE PUSH28(
    - data: |
       :label EOFI3670_0288 :raw 0xef0001010004020001000b0400000000800002600160015560026002557b
      expectException:
        ">=Osaka" : "EOF_TruncatedImmediate" 

    # EOFI3670_0289 (Invalid) Truncated PUSH28 (truncated immediates) - Data Section 288
    # Code: PUSH1(1) PUSH1(1) SSTORE PUSH1(2) PUSH1(2) SSTORE PUSH28(0xffffffffffffffffffffffffffffffffffffffffffffffffffffff
    - data: |
       :label EOFI3670_0289 :raw 0xef0001010004020001000b0400000000800002600160015560026002557b
      expectException:
        ">=Osaka" : "EOF_TruncatedImmediate" 

    # EOFI3670_0290 (Invalid) Truncated PUSH29 (no immediates) - Data Section 289
    # Code: PUSH1(1) PUSH1(1) SSTORE PUSH1(2) PUSH1(2) SSTORE PUSH29(
    - data: |
       :label EOFI3670_0290 :raw 0xef0001010004020001000b0400000000800002600160015560026002557c
      expectException:
        ">=Osaka" : "EOF_TruncatedImmediate" 

    # EOFI3670_0291 (Invalid) Truncated PUSH29 (truncated immediates) - Data Section 290
    # Code: PUSH1(1) PUSH1(1) SSTORE PUSH1(2) PUSH1(2) SSTORE PUSH29(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff
    - data: |
       :label EOFI3670_0291 :raw 0xef0001010004020001000b0400000000800002600160015560026002557c
      expectException:
        ">=Osaka" : "EOF_TruncatedImmediate" 

    # EOFI3670_0292 (Invalid) Truncated PUSH30 (no immediates) - Data Section 291
    # Code: PUSH1(1) PUSH1(1) SSTORE PUSH1(2) PUSH1(2) SSTORE PUSH30(
    - data: |
       :label EOFI3670_0292 :raw 0xef0001010004020001000b0400000000800002600160015560026002557d
      expectException:
        ">=Osaka" : "EOF_TruncatedImmediate" 

    # EOFI3670_0293 (Invalid) Truncated PUSH30 (truncated immediates) - Data Section 292
    # Code: PUSH1(1) PUSH1(1) SSTORE PUSH1(2) PUSH1(2) SSTORE PUSH30(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
    - data: |
       :label EOFI3670_0293 :raw 0xef0001010004020001000b0400000000800002600160015560026002557d
      expectException:
        ">=Osaka" : "EOF_TruncatedImmediate" 

    # EOFI3670_0294 (Invalid) Truncated PUSH31 (no immediates) - Data Section 293
    # Code: PUSH1(1) PUSH1(1) SSTORE PUSH1(2) PUSH1(2) SSTORE PUSH31(
    - data: |
       :label EOFI3670_0294 :raw 0xef0001010004020001000b0400000000800002600160015560026002557e
      expectException:
        ">=Osaka" : "EOF_TruncatedImmediate" 

    # EOFI3670_0295 (Invalid) Truncated PUSH31 (truncated immediates) - Data Section 294
    # Code: PUSH1(1) PUSH1(1) SSTORE PUSH1(2) PUSH1(2) SSTORE PUSH31(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
    - data: |
       :label EOFI3670_0295 :raw 0xef0001010004020001000b0400000000800002600160015560026002557e
      expectException:
        ">=Osaka" : "EOF_TruncatedImmediate" 

    # EOFI3670_0296 (Invalid) Truncated PUSH32 (no immediates) - Data Section 295
    # Code: PUSH1(1) PUSH1(1) SSTORE PUSH1(2) PUSH1(2) SSTORE PUSH32(
    - data: |
       :label EOFI3670_0296 :raw 0xef0001010004020001000b0400000000800002600160015560026002557f
      expectException:
        ">=Osaka" : "EOF_TruncatedImmediate" 

    # EOFI3670_0297 (Invalid) Truncated PUSH32 (truncated immediates) - Data Section 296
    # Code: PUSH1(1) PUSH1(1) SSTORE PUSH1(2) PUSH1(2) SSTORE PUSH32(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
    - data: |
       :label EOFI3670_0297 :raw 0xef0001010004020001000b0400000000800002600160015560026002557f
      expectException:
        ">=Osaka" : "EOF_TruncatedImmediate" 

    # EOFI3670_0298 (Invalid) Containing undefined instruction (0xfc) after STOP - Data Section 297
    # Code: PUSH1(1) PUSH1(1) SSTORE PUSH1(2) PUSH1(2) SSTORE STOP 0xfc
    - data: |
       :label EOFI3670_0298 :raw 0xef0001010004020001000c04000000008000026001600155600260025500fc
      expectException:
        ">=Osaka" : "EOF_UndefinedInstruction" 
